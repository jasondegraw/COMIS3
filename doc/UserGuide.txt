COMIS 3.2 -User Guide 

Edited by: Helmut E. Feustel and Brian V. Smith, LBNL 
Revised edition by Viktor Dorer, Anne Haas and Andreas Weber, Empa November 01, 2005 

Eidgen¨ossische Materialpr¨ufungs-und Forschungsanstalt 	Empa ¨ 
Laboratoire f´ed´eral d’essai des mat´eriaux et de recherche Uberlandstrasse 129 Laboratorio federale di prova dei materiali e di ricerca CH-8600 D¨ubendorf Institut federal da controlla da material e da retschertgas Tel. +41-1-823 55 11 Energiesysteme / Haustechnik 

Energierechengruppe
Swiss Federal Laboratories for Materials Testing and Research 	Fax +41-1-821 62 44 

PREFACE 
The COMIS workshop (Conjunction of Multizone In.ltration Specialists) was a joint research e.ort to develop a multizone in.ltration model. This workshop (October 1988 -September 1989) was hosted by the Energy Performance of Buildings Group at Lawrence Berkeley Laboratory’s Applied Science Division. The task of the workshop was to develop a detailed multizone in.ltration program taking crack .ow, HVAC-systems, single-sided ventilation and transport mechanism through large openings into account. The agenda integrated all participants’ contributions into a single model containing a library of modules. The user-friendly program is aimed at researchers and building professionals. 
The work was accomplished not by investigating numerical description of physical phenomena but by reviewing the literature for the best suitable algorithm. The numerical description of physical phenomena clearly was a task of IEA-Annex 20 “Air Flow Patterns in Buildings” which .nished in September 1991. In Annex 23 “Multizone Air Flow Modeling”, which was adopted by the IEA-Energy Conservation in Buildings and Community Systems program in 1992, COMIS has been evaluated by means of tracer gas measurements, wind tunnel data, intermodel comparison, and comparison with analytical solutions. 
From the time of its announcement in December 1986 COMIS was well received by the research community. Due to the internationality of the group, several national and international research programs were co-ordinated with the COMIS workshop. Colleagues from France, Greece, Italy, Japan, The Netherlands, People’s Republic of China, Spain, Sweden, Switzerland, and the United States of America were working together on the development of the model and its evaluation. 
Even though this kind of co-operation is well known in other .elds of research, e.g., high energy physics, in the .eld of building physics it is a new approach. 
The COMIS User Guide contains an overview of the COMIS project as well as hints which will be useful in getting through the input and calculation procedure. The handbook comes in loose-leaf form so as to be easily updated according to the progress of the model development. Please note, that the COMIS User Guide re.ects the construction of the input .le needed to run the calculation program COMVEN. There are several user interfaces available to create the input .le and to run the program. Each interface comes with its own user guide. 
Helmut E. Feustel 
COMIS Co-ordinator and Annex 23 Operating Agent 
Berkeley, California 
August 31, 1997 

Preface to version 3.1 
This present version of the COMIS User Guide is the result of a major revision undertaken by 
EMPA. The update has gone together with an e.ort to debug and streamline the COMIS code, 
and to make code and User Guide as consistent as possible. 

The changes from COMIS version 3.0 are summarized in chapter 1.4 

This task has been supported by the help and the valuable contributions of: 
Peter G. Schild (NBI, Norway), Brian Smith and Dave Lorenzetti (LBNL, USA), Hans C. Pha. 
(TNO, The Netherlands), Werner Keilholz ( CSTB, France). 

Viktor Dorer, Anne Haas and Andreas Weber 
Empa Duebendorf, Switzerland 
January 24, 2001 

Preface to version 3.2 
The new graphical user interface Simulation Studio developed for COMIS by CSTB was the in­citement to release a new version of COMIS. The development and improvement of the COMIS 
code during the last .ve years since COMIS 3.1 has been released require also a new edition of the 
User Guide. 

A short description of the Simulation Studio is given in chapter 2.5 and in detail in the Simulation 
Studio User Guide. The changes of the COMIS code since version 3.1 are summarized in chapter 1.4 

The update to COMIS 3.2 has been supported by the help and the valuable contributions of: 
Peter G. Schild (NBI, Norway) 
Hans C. Pha. (TNO, The Netherlands) 
Werner Keilholz, Paul Sette and Sabine Taristas (CSTB, France) 
Anne Haas (Empa, Switzerland) 

Andreas Weber 
Empa Duebendorf, Switzerland 
November 1, 2005 


Contents 
1 Introduction 9 
1.1 TheCOMISProject ................................... 10 

1.2 TheoriginalCOMISModel(COMISVersion1.0)................... 10 
Input ........................................... 10 
FlowthroughBuildingComponents .......................... 10 
Solver ........................................... 12 
WindPressures...................................... 12 
ProductsoftheCOMISworkshop ........................... 12 

1.3 Follow-UpofCOMIS:IEAAnnex23.......................... 13 
ProductsofIEAAnnex23................................ 13 

1.4 SubsequentVersionsofCOMIS............................. 14 

2 Getting Started 19 
2.1 NomenclatureinCOMISUserGuide.......................... 20 

2.2 Distribution........................................ 21 

2.3 Installation ........................................ 21 
InstallationonaPC ................................... 21 
CompilationofCOMIS.................................. 21 

2.4 COMISFileStructure(Stand-aloneinstallation) ................... 22 

2.5 COMISUserInterfaces.................................. 24 
SimulationStudiographicaluserinterface ....................... 24 
COMISExcelUserInterface............................... 24 

2.6 COMISTools....................................... 24 

3Basic Concepts 25 
3.1 InputDataStructure................................... 26 

3.2 SpecialCharactersandNamingConventions...................... 29 

3.3 DateandTimeFormat.................................. 30 

3.4 FileNameFormat .................................... 31 

3.5 ModellingConcepts ................................... 32 
ConventionsConcerningFlowDirectionsandHeights................. 32 
PressureReference .................................... 33 
FlowControllers ..................................... 35 
Pollutants......................................... 36 
E.ectiveFlowRates ................................... 38 
Histograms ........................................ 40 

CONTENTS 
OccupantsasSourceandOccupantsasSensor .................... 42 
DefaultValues ...................................... 42 
Schedules,TimeStepsandSimulationDynamics ................... 42 
NotesonConvergence .................................. 44 

4Data Sections 47 
4.1 ProjectDescription.................................... 48 
&-PR-IDENti.cation(ProjectIdenti.cation) ..................... 48 
&-PR-UNITS(ProjectUnits).............................. 49 
&-PR-SIMUlation(ProjectSimulationOptions) ................... 52 
&-PR-OUTPut(ProjectOutputOptions)....................... 55 
&-PR-CONTrol(ProjectControlParameters) .................... 58 
&-HISTOgram(HistogramDe.nition)......................... 61 

4.2 NetworkDescription ................................... 62 
&-CR(Crack)....................................... 62 
&-NORMCR(Standardconditionforcrackdata)................... 64 
&-FA(Fan) ........................................ 65 
&-DS(StraightDuct) .................................. 68 
&-F1(FlowController,idealsymmetric)........................ 71 
&-F2(FlowController,idealnon-symmetric) ..................... 73 
&-F3(FlowController,non-idealsymmetric) ..................... 75 
&-F4(FlowController,non-idealnon-symmetric)................... 77 
&-TV(ThermostaticVent) ............................... 80 
&-WI(WindowsandDoors)............................... 82 
&-TD(TestData) .................................... 89 
&-RF(RelatedFlowComponent)............................ 91 
&-NET-ZONes(ZonesDe.nition) ........................... 94 
&-NET-ZL(ZoneLayers) ................................ 96 
&-NET-ZP(ZonePollutants) .............................. 98 
&-NET-EXTernal(ExternalNodeData) ....................... 100 
&-NET-ZT(ZoneThermalProperties)......................... 101 
&-NET-LINks(NetLinks) ............................... 102 

4.3 Schedules ......................................... 106 
&-SCH-WINdow(WindowSchedules) ......................... 106 
&-SCH-FANs(FanSchedules) ............................. 107 
&-SCH-TEMperature(TemperatureSchedules).................... 108 
&-SCH-HUMidity(HumiditySchedules)........................ 109 
&-SCH-SINk(SinkSchedules) ............................. 110 

&-SCH-SOUrce(SourceSchedules)........................... 111 
&-SCH-OCCupant(OccupantSchedules) ....................... 112 
&-SCH-METeoData(MeteoDataSchedule) ..................... 114 
&-SCH-POLlutant(OutdoorPollutantConcentrationSchedule) .......... 116 
&-SCH-MULtischeduledata(Multischeduledata).................. 117 

4.4 BuildingDescription................................... 119 
&-CP-BUILding(BuildingReferenceHeight) ..................... 119 
&-CP-VALUes(CpValues)............................... 120 

4.5 EnvironmentDescription ................................ 122 
&-ENV-BUIlding(BuildingRelatedParameters)................... 122 
&-ENV-WINd(WindandMeteoRelatedParameters)................ 123 

4.6 PollutantData ...................................... 125 
&-POL-DEScription(PollutantDescription) ..................... 125 
&-POL-FICtiveSources(PollutantFictiveSources) ................. 126 

4.7 OccupantData ...................................... 127 
&-OCCUPANt(OccupantDescription) ........................ 127 

Appendix 131 
AExamples 132 
A.1 MinimumInputFile ................................... 132 

A.2 Factory .......................................... 135 

BKeywords 141 
B.1 DataSectionKeywords ................................. 141 

C Set-.le COMIS.SET 143 
C.1 Firstpart ......................................... 143 

C.2 Secondpart........................................ 143 

C.3 Thirdpart......................................... 144 

C.4 Example.......................................... 145 

LISTOFFIGURES 

List of Figures 

1.1 MultizoneStructure ................................... 9 

2.1 COMIS.les........................................ 22 

3.1 DataGroups ....................................... 26 

3.2 DataStructure ...................................... 27 

3.3 De.nitionofheights ................................... 32 

3.4 Normalpressureoutput ................................. 34 

3.5 Pressureoutput,outsideReference ........................... 34 

3.6 Pressureoutput,outsidereferenceandstack...................... 34 

3.7 FlowControllerCharacteristic ............................. 35 

3.8 Keywordsforthepollutanttransportmodel...................... 37 

3.9 Schedules ......................................... 43 

4.1 Fancharacteristic..................................... 67 

4.2 Fittings .......................................... 70 

4.3 Flowcontrolleridealsymmetric............................. 72 

4.4 Flowcontrolleridealnon-symmetric .......................... 74 

4.5 Flowcontrollernon-idealsymmetric .......................... 76 

4.6 Flowcontrollernon-idealnon-symmetric........................ 79 

4.7 Windowsanddoors,LVOType1,4and5....................... 85 

4.8 Windowsanddoors,LVOType1slanted ....................... 85 

4.9 Windowsanddoors,LVOType2and3 ........................ 86 
4.10Windowsanddoors,LVOType2and3 ........................ 87 
4.11RelatedFlowComponent ................................ 92 
4.12KitchenHood....................................... 93 
4.13LayeredZone ....................................... 97 
4.14De.nitionofT-Junctionnodes ............................. 103 
4.15De.nitionoflinkheight ................................. 104 
4.16Buildingorientation ................................... 122 
4.17WindVelocityPro.le .................................. 124 

A.1 SchemeFactoryBuilding................................. 136 

A.2 SchedulevaluesTemperature,Openings ........................ 137 

A.3 SchedulevaluesSource,Fan............................... 137 

A.4 PollutantLoadsforoneday............................... 138 

A.5 PollutantLoads:frequency ............................... 138 


1 Introduction 
Air.ow models can be divided into two main categories, single-zone models and multizone models. Single-zone models assume that the structure can be described by a single, well-mixed zone. The major application for this model type is the single-storey, single family house with no internal partitions (e.g., all internal doors are open). As a large number of buildings, however, have .oor plans that would characterize them more accurately as multizone structures, more detailed models, taking internal partitions into account, have been developed. 
Even before the advent of physical single-zone models a number of computer models had been developed to calculate the air .ow distribution in multizone buildings. In these models the building is described by a set of zones interconnected by .ow paths (links). Each zone (node) represents a space with uniform pressure conditions inside or outside the building and the interconnections correspond to impediments to air .ow. The network models are usually based on the conservation of mass in each of the zones in the building. 
Multizone models are required when there are internal partitions in a building, or in the case of inhomogeneous concentration in the space. Multizone buildings can be either single-room structures (e.g., airplane hangars) single family houses or large building complexes. Figure 1.1 shows an example of a very simple multizone building. 
Multizone air.ow network models deal with the complexity of .ows in a building by recognizing the e.ects of internal .ow restrictions. They require extensive information about .ow characteristics and pressure distributions and, in many cases, are too complex to justify their use in predicting .ow for simple structures such as single family residences [4]. 
A literature review undertaken by Feustel and Kendon [17] revealed 26 papers describing 15 di.er­ent multizone air.ow models which had been developed in eight countries. A follow up review [13] carried out in 1992 produced additional information about the status of network models. One of the .rst to be found was BSRIA’s model LEAK by Jackman, which was published in 1970 [21]. Since that time many more models have been developed but many of them have been written as research tools. One of the latest developments in multizone air .ow and contaminant transport modeling is the COMIS model [15, 16] which is described here in detail. 
1.1 The COMIS Project 
1.1 The COMIS Project 
Within the Energy Performance of Buildings Group at the Lawrence Berkeley Laboratory LBL (Berkeley, USA), after reviewing the available multizone in.ltration models, it was clear that conventional models are not designed to be upgraded to take additional types of .ow into account or to improve their usability. Therefore, it was planned to design and develop a model which should contain all the missing features. From the beginning, it was realized that this model development needed a lot of expertise and, equally important, manpower, which would exceed the resources at LBL. 
As a consequence, the group made its plan public and asked interested colleagues to join for a twelve month period for the Conjunction of Multizone In.ltration Specialists to lay the foundation of a versatile multizone in.ltration model. In 1986, the .rst COMIS Newsletter was sent to colleagues to inform them about the joint research project planned at LBL. Even though this kind of co­operation is well established in other .elds of research, e.g., high energy physics, in the .eld of building physics it is new to engage in a research project which one individual or country would not be able to do alone. From the beginning the COMIS idea was well received. Owing to the diverse background of the group several national and international research programs were co-ordinated with the COMIS workshop. 
This one year COMIS workshop (Conjunction Of Multizone In.ltration Specialists) was held at the Lawrence Berkeley Laboratory from November 1988 until October 1989. A multinational team developed a new multizone in.ltration, ventilation and contaminant transport model, named at that time COMVEN. This model not only takes crack .ow into account but also covers .ow through large openings, single-sided ventilation, cross ventilation and HVAC-systems. The model was designed to consist of a large number of modules which are managed by a steering program. COMIS can also be used as a basis for future extension in order to increase the ability to simulate buildings. 
In parallel, a user interface, developed on FORTRAN 77 basis like the COMVEN code, and a result graphical postprocessor programme on LOTUS spreadsheet basis were developed. 

1.2 The original COMIS Model (COMIS Version 1.0) 
Input 
Special emphasis was given to the input/output routines so that the program should be not only “user-tolerant” but “user-friendly”. It is being developed so it can be used either as a “stand­alone ventilation model” or as an “ventilation module” of a building simulation program. The input/output procedure is therefore being developed in such a way that either the COMIS in­put/output modules can be used or only the input/output interface. This makes it possible for the user to connect the program with other software (e.g., the building and systems simulations code TRNSYS). 
Flow through Building Components 
Crack .ow, large openings and mechanical ventilation systems can be modelled by COMIS. Fur­thermore, additional .ows which do not in.uence the pressure distribution in the network in a major way, i.e., simultaneous two way .ow at large openings and wind turbulence e.ect at single-sided windows etc., were studied. Air .ow rates through doorways, windows and other common large openings are signi.cant ways in which air, pollutants and thermal energy are transferred from one zone of a building to another. 
However, in a previous review of multizone in.ltration models, none of the described codes were able to solve this problem in any way other than to divide the large opening into a series of small ones described by crack .ow equations. 
COMIS’s contribution to this fundamental problem was to describe the physical problem, review the various solutions developed in the literature and compare these solutions using both a numerical and a physical point of view [10]. 
The general laws demonstrated by thermal or .uid mechanics approaches are also valid for large exterior openings in steady state conditions. But none of these methods enables us to quantify the e.ect of an unsteady wind or large scale turbulence. 
Experimental results have shown that these e.ects can be particularly signi.cant in the case of one-sided ventilation. Nevertheless very few correlations have been proposed and most of those that have concern particular con.gurations. It seems di.cult, therefore, to introduce these e.ects in a general way in our .rst model. However, we will hope to do so later on as an improvement to COMIS. 
The correction of coe.cients of power law for crack .ow, taking into account the e.ect of the temperature distribution of air in the crack, is also studied. The temperature of air .owing through a crack depends on the following factors: 
. 
air .ow rate, 

. 
air temperatures of the zones onbothsides of thecrack, 

. 
dimensions and form of the crack. 


In most cases the temperature of the air in a crack is quite di.erent from the temperatures of the zones on either side of the crack. Furthermore, air leakage performance measurements are usually performed in a certain temperature condition but used at di.erent temperatures. The temperature variation, however, has a large in.uence on the air leakage .ow due to changes in the air viscosity and air density. Unfortunately, almost all the models dealing with air leakage characteristics ignore this phenomenon. 
Data obtained from measurements on crack models show that, for turbulent crack .ow, the math­ematical description of the friction factor is identical with the one found for conduit .ow with smooth walls. Therefore crack .ow can be seen as duct .ow with a more complicated .ow path. 
We found from the crack .ow equation research that the .ow performance is strongly temperature dependent. In order to arrange the results in the usual form we have introduced correction factors which account for the temperature in.uence. The correction factor depends on the type of leakage. We have developed three di.erent equations for the di.erent correction factors. 
We can easily build an air leakage temperature module according to the crack forms. Fortunately, we found that the crack form mainly depends on the structure of the building or on the type of building component and that its size depends on the workmanship. We therefore classify crack forms into three groups: double frame windows, single frame windows and doors, and walls. 
HVAC-Systems (heating, ventilating and air conditioning systems) are composed of ducts, duct .ttings, junctions, fans, air .lters, heating and cooling coils, air-to-air heat exchangers, .ow con­trollers, etc. Several of the program modules concerning ventilating systems have already been developed, allowing us to calculate the coe.cients of the .ow equation for duct works with .t­tings, the static pressure losses for T-junctions and the volume .ow rate of a fan as well as for a .ow controller as a function of the pressure di.erence. Since the duct systems are described by a network in the air .ow model the junction is treated as a pressure node. 
There are some data available in the literature for the pressure loss coe.cients at the T-junction. To our surprise we found that the values of the pressure loss coe.cients were signi.cantly di.erent for di.erent sources. For example, in the case of converging .ow, the pressure loss coe.cient through the main duct of the T-junction obtained from one source is double the value of the loss coe.cient given in another. 
The fan performance curve is expressed on the basis of more than three data sets of the volume .ow rate, and the pressure di.erence by the polynomial approximate formula using the least square method. 
The pressure loss curve for .ow controller is expressed by equations based on data sets of the pressure loss and the volume .ow rate. The input data is the driving pressure di.erence of the .ow 

1.2 The original COMIS Model (COMIS Version 1.0) 
controller. The output data is the volume .ow rate. 
There are other components connected to the HVAC-Systems which cause dynamic pressure loss, e.g., air .lters, heating or cooling coils, di.erent types of junctions, etc. Models for these components are not included in the code yet and have to be considered by de.ning a dynamic pressure loss factor. 
Solver 
Calculating the in.ltration and ventilation .ow rates requires the solution of a non-linear system of equations. The main task has been to .nd an e.cient solving method [10], [20]. 
A building is basically modeled by pressure nodes that are interconnected with air .ow links. For one time step, the outside of the building is represented by a .xed boundary condition. The pressures of the internal nodes in the air .ow network have to be solved so as to determine the di.erent air .ow rates. Solving these in.ltration and ventilation .ow rates requires the use of a non-linear system of .ow equations. The main task was to .nd an e.cient and stable method. 
The starting point is the Newton-Raphson method, with derivatives, operating on a node-oriented network which, in most cases, quickly brings about the convergence of the system of equations. The method has been modi.ed to avoid occasional convergence problems when working with power functions. Fortunately, the origin of the convergence problems is well understood. The solving method works on the .ow balance equations and not on the .ow equations. If one or several of these balance equations have an exponent close to one-half, the Newton-Raphson method will not work well, due to the nature of the procedure, in .nding the next approximation. One instance when this happens is when a leakage opening with a .ow exponent of one-half is predominant in one zone. In this case the .ow balance equation will also have an exponent close to one-half. An under-relaxation will increase the convergence velocity and bring us to the solution. In principle it is a question of .nding an appropriate relaxation coe.cient. 
Wind Pressures 
Another important task in the COMIS workshop was to .nd a method of determining the wind pressure distribution for a building according to measured data from available literature. This allows building designers to work with the COMIS model even if wind tunnel results are not available for the building under consideration. The pressure distribution around a building is usually described by a dimensionless pressure coe.cient (Cp), which is the ratio of the surface pressure and the dynamic pressure in the undisturbed .ow pattern, measured at a reference height. From experience we know that wall-averaged values of Cp usually do not match the accuracy required for air .ow calculation models. 
In order to calculate the Cp-distribution for buildings we provide a method based on a parametrical study to determine the Cp-values [10]. The available methods have been checked by comparing calculated results with .ndings from wind tunnel tests found in the literature. Since the results did not match the data well, a parametrical analysis of wind tunnel test data, aimed at developing a calculation model for Cp-data, was carried out. 
The work on Cp-value calculation has been continued later in the AIOLOS project of the European Commission and resulted in the CPCALC+ code [3]. 
Products of the COMIS workshop 
The major products of the COMIS workshop are: 
. 
COMIS simulation code COMVEN 

. 
COMIS User interface COMIN 

. 
COMIS Output processor COMOUT 

. 
COMIS User Guide 

. 
COMIS Fundamentals [14] 

. 
Special Issue of the Journal Energy and Buildings [10] 



1.3 Follow-Up of COMIS: IEA Annex 23 
Work on the COMIS program did not .nish by October 1989. A computer code was available but such a program is ever perfectible. The validation procedure itself is a huge work and was not completed during the COMIS year. Moreover, new knowledge (e.g. from IEA Annex 20) was available after the COMIS workshop .nished. This knowledge had to be integrated into the COMIS code. 
A roundtable discussion between the COMIS participants and the COMIS review panel about future perspectives revealed a strong feeling that COMIS (or its successor) ought to operate as an international institution with participants committing themselves to a de.nite work load. 
The COMIS group suggested to start a working group under the hospice of IEA’s Energy Conser­vation in Buildings and Community Systems program. The Multizone Air Flow Modeling working group was o.cially adopted in June 1990 as Annex 23. The Annex was supported between 1990 and 1996 by nine participating nations: Belgium, Canada, France, Greece, Italy, Japan, Switzer­land, The Netherlands, and USA. The objective of this Annex was to study physical phenomena causing air .ow and pollutant transport (e.g., moisture) in multizone buildings and to develop modules to be integrated in a multizone air .ow modelling system. Special emphasis was given to the comparison between results from the model and from in-situ measurements. 
To reach these objectives the IEA Annex was structured in three subtasks: 
. 
System development (subtask 1) 

. 
Data acquisition (subtask 2) 

. 
System evaluation (subtask 3) 


Results of these subtasks are addressed to researchers and consultants and contribute to the pro­motion of an energy e.cient design. The Annex participants undertook a task sharing project involving model development, data acquisition and analytical studies. 
A close cooperation was envisaged, mainly with regard to state-of-the art reviews, data collection, coordination of work, e.g. de.ning cases for evaluation purposes with other pertinent projects. The Air In.ltration and Ventilation Centre acted as a vehicle for disseminating the results of this particular Annex. A data base for evaluation purposes was prepared by AIVC and the Centre has collected wind pressure data and leakage data. Algorithms developed by Annex 20 were incorpo­rated into the modelling system. Data obtained for evaluation purposes by this Annex was used for subtask 3. The overlapping in time with Annex 20 guaranteed a su.cient transfer of knowledge. 
Products of IEA Annex 23 
The major products of IEA Annex 23 are: 
. 
COMIS 3.0 with graphical /COMIS user interface 

. 
COMERL user interface 

. 
User Guides for COMIS, IISiBat/COMIS and COMERL 

. 
Annex 23 Report ‘Evaluation of COMIS’ [18] 

. 
Annex 23 Report ‘Evaluation of COMIS’ [19] 

. 
Special Issue of the Journal Energy and Buildings [11] 

. 
COMIS Programmer’s Guide [8] 

. 
COMIS Sample Runs [25] 



1.4 Subsequent Versions of COMIS 
Information about COMIS 3.0 can be found under http://epb1.lbl.gov/comis/. 
COMIS 3.0 version is available from the web under http://software.cstb.fr, together with a hand­
book for the user interface and with a tutorial. 

1.4 Subsequent Versions of COMIS 
COMIS version 3.1 
In 1999, Empa has o.cially taken over the maintenance of the COMIS source code from LBNL. LBNL will continue to contribute to the further development of COMIS, but LBNL is not directly involved in the maintenance task anymore. CSTB remains responsible for the IIsibat user interface. 
Towards the end of Annex 23, additional contributions to the COMIS code were made in the frame of IEA Annex 27 “Evaluation and Demonstration of Domestic Ventilation Systems”. Many valuable features were included in the code. However, not all parts were working properly, and the consistency between code and COMIS user guide had diminished noticeably. Together with a list of bugs and other inadequacies in the code, there was a strong need to further improve the COMIS product. 
Therefore, Empa has taken the initiative to update COMIS. With COMIS 3.1 many bugs are .xed, the input formats are consistent and somewhat streamlined where necessary, and the User Guide re.ects what the program requires and does. 
The update would not have been as profound and extensive without the valuable contributions and help by 
. 
Peter G. Schild (NBI, Norway) 

. 
Brian Smith and Dave Lorenzetti (LBNL, USA) 

. 
Hans C. Pha. (TNO, The Netherlands) 

. 
Werner Keilholz (CSTB, France) 


ChangesinCOMIS version3.1 
New features, improved features and features which were implemented in the code, but were not yet documented in the User Guide: 
Simulation Options: page 52 
&-PR-SIMU 
New option to force pollutant transport output with prede.ned time step: 
POLSTEP step time step2 
Output Options: page 55 
&-PR-OUTP 
New options: 
On number of Occupant Type n per zone 
Yn activitY level factor of occupant Type n per zone 
Fn e.ective Flow with .ctive source n per zone 

Control Parameters: page 58 
&-PR-CONTrol 
New solver: solver no. 6. 
Data block 2 changed: Only one .ag for initialization at the .rst and one for the subsequent 
timesteps and the number of iterations are input. 

Histograms: page 61 
&-HISTO 
Only parameters for the histogram de.nition. De.nition of .ctive sources moved to new keyword &-POL-FIC. Occupants can be used as weighting factors in histograms. 
Pollutant Description: page 125 
Continuation line: 
De.nition of .ctive sources moved to new keyword &-POL-FIC. 

Fictive Source De.nition: page 126 
&-POL-FICtive sources 
New keyword for the de.nition of .ctive sources, used for calculation of e.ective .ows. 
Zone Layers: page 96 
&-NET-ZL has only .ve input parameters 

Schedules: pages 112, 111 &-SCH-OCCupant, &-SCH-SOUrce Occupant source schedules solely to be de.ned under &-SCH-OCC keyword; Number of occupants implemented in &-SCH-OCC. 
Wind and Meteo: page 123 
&-ENV-WINd 
Data block 2 has only two input parameters: wind direction angle and wind velocity pro.le exponent at building location. 
Occupants: page 127 
&-OCCUPANt 
New data block 2 with data for the source strenth of di.erent pollutants if occupant is used as source. Data in data block 1 starts with *No. 
New Histogram output .le: page 55 Histograms are not longer written to COF-.le, but to a separate .le (extension COH). 
Naming convention: page 22 <name>-xy.COS <name>-xy.COH are used for output .les instead of xy<name>.COS xy<name>.COH 
There were a number of features implemented in the code which still need further development of algorithms and code and thus are not described in the present user guide. Another number of features which are obsolete but which were still listed in the user guide, were of course also removed in the user guide text. The removed or not operational features are: 
. 
Duct Fitting 

. 
Passive Stack 

. 
Transition 

. 
HVAC Component 

. 
Cp Calculation 


The following keywords are not needed any more 
. 
&-CIF 

. 
&-NET-AIR 


Changes in COMIS version 3.2 
User Interface: 
Completely new graphical user interface Simulation Studio. 

1.4 Subsequent Versions of COMIS 
New and improved features in the COMIS code: 
File structure: page 22 Harmonized output .le extension naming: *.COS and *.COH instead of *.CSO and *.CHO for spreadsheet and histogram output .les. 
Command line: page 23 Improved command line options 
Simulation Option: page 55 
&-PR-SIMU 
Output from the ONSCREEN option on the bottom of the window or in a separate window depending on the windows application. 
Output Options: page 55 
&-PR-OUTP 
New options: 
DL Calculated Cd values of large openings 
PL Pressure di.erence across a link 

Duct: page 68 
&-DS 
Zeta value speci.cation for each .ow direction separately. 
Zeta value evaluation of .ttings depending on .ow direction. 
The actual Zeta value can be changed using a link schedule. 

Thermostatic Vent: page 80 
&-TV 
New thermostatic controlled air .ow component that changes the .ow resistance depending on the .ow air temperature. 
Large Vertical Openings: page 82 
&-WI 
Flow characteristic of the horizontal pivoting window (LVO-type 2) as a function of opening angle and height to width ratio calibrated with CFD calculated values. New large LVO-type 3: Improved opening geometry for horizontal pivoting axis window. New large LVO-types 4 and 5: Triangles with vertex at the bottom and at the top. COMIS.SET: page 143 Harmonized print-level for output 
Bug.xes: 
A number of bug.xes have been achieved in COMIS 3.2. Among others: 
Allow to position the data set name in &-CP-VALUes data section after the second header as it is shown in the example in the User Guide. Changed all default values for the fan curve polynomial coe.cients to zero to prevent from 
unintended non horizontal or non linear characteristic if the given number of coe.cients does not correspond with the de.ned ”Exp. Polynom.” parameter. 
Allow ’#’also in the &-PR-OUTP data section to comment out the rest of the line. ’d[e[f[a[u[l[t]]]]]’ and ’#’ and ’;’ was not correctly processed in cases where strings had to be read from the CIF (e.g. schedule names). 
Introduced a default (’ ’) for schedule names. 
Default values for time strings introduced. 

Prevent compiler warning of .oating point under.ow if pollutant concentration approximates 
zero. 
Stated gravity constant more precisely. 

Trapped a range check error if too many large openings were de.ned. 
Units for corrected fan curve slope and intersept in warning message adapted to the corre­sponding user input units. 

Trapped an integer over.ow error if the period between meteo time and start time was too 

large. 
Prevent from an integer over.ow error on 31dec_23:00 if there is no year speci.ed in the meteo 
schedule. 

Corrected the dimensions of the array for the .lter e.ciency data. 
Check and give error message if negative activity level or number of occupants are speci.ed. 
Reset the line counter for CIF lines after rewinding the CIF to ensure a correct line number in 

error messages. 

Minor change: 
The look of messages has changed to be better identi.ed as COMIS messages in coupled calculations with TRNSYS. 
Remaining known issues: 
There are still a number of remaining known bugs which not have been .xed in COMIS 3.2 and which the user has to consider in his applications: 
Except for cracks, the calculated link temperature does not consider the temperature gradient 
in layered zones. 

Cd calculation of external windows: Missing error check whether single sided ventilation situa­tion is accomplished. 
Theresults of thevery .rst timestepare not correctly considered in Histogram evaluation. 
Convergency problems with T-junctions. 

COMIS 3.2 Documents 
Valid COMIS documents after successful installation in the directory ‘\comis32\Documentation’: 
UserGuide.pdf  User Guide for COMIS 3.2 simulation engine; this document  
Tutorial.pdf  Tutorial for COMIS and the Simulation Studio  
SimulationStudio.pdf  User Guide for the Simulation Studio  
COM-TRN.pdf  User Guide for coupling COMIS and TRNSYS  
OutpOpt.pdf  De.nition of COMIS output quantities  
ProgGuid.txt  Guidelines how to document COMIS program modi.cations  
Headers.txt  Sample headers for all keywords;  
identical with the ones used throughout this user guide  
How to get COMIS 3.2  

The new COMIS version is available from CSTB, Sophia Antipolis, France. For more information, see 
http://software.cstb.fr 
1.4 Subsequent Versions of COMIS 
GETTING STARTED 


2 Getting Started 


2.1 Nomenclature in COMIS User Guide 
2.1 Nomenclature in COMIS User Guide 
Typesetting 
text text from .le or command line <...> input to be supplied by the user [...] optional input | alternative options 
Signi.cant characters in keywords 
UPPERCASE required lowercase optional 
text in margin hints 

2.2 Distribution 
The COMIS with Simulation Studio distribution on CD contains the all .les necessary to run COMIS in stand-alone mode (without user interface). The COMIS simulation engine is a Win32 application. It can be executed on MS-Windows 9x, Me, NT, 2000, XP. 
To use COMIS under a di.erent operating system the source code of the COMIS simulation engine has to be recompiled for that system. 
If COMIS is used in stand-alone mode, the input .le either already exists or will have to be developed with a text editor. The procedures described here are valid for the use of the program without an interface. 
Several user-interfaces have been developed for COMIS (e.g., Simulation Studio and an Excel-UI). A short description can be found in section 2.5, pages 24.. The information has been taken from online help and short guides coming with the interfaces. For program usage with an interface, please refer to the user guide provided by the interface developer. 

2.3 Installation 
Installation on a PC 
For installation on a PC, follow the instructions coming with the COMIS with Simulation Studio package distribution CD. 
After a successful installation, the COMIS .les can be found under the COMIS-directory ‘\comis32’ and its subdirectories: 
\comis32 |________Binary COMIS v3.2 Executable |________Compilers Workspace for COMPAQ Visual Fortran 6.6.C |________Documentation User Guide, etc |________Examples Example input .les, SET-.le |________MyProjects In-and output .les for own projects |________Source Fortran source of COMIS code |________Studio Simulation Studio .les 
|. 
|... 
Compilation of COMIS 
The COMIS executables on the COMIS package distribution CD were produced with COMPAQ Visual FORTRAN (CVF) 6.6.C. They can be executed on MS-Windows 9x, Me, NT, 2000, XP. To port COMIS to other platforms it has to be recompiled with a corresponding compiler. 
The COMIS source is subdivided into almost 60 .les named ‘COMV-*.FOR’ and four include .les named ‘COMV-*.INC’. After the installation of COMIS they can be found in the directory ‘\comis32\source’. Compile and link them all together into one executable .le. A workspace for COMPAQ Visual FORTRAN can be found in the directory ’\comis32\compilers’. 
The following source .les have to be linked depending on the operating system: COMV-WIN.FOR MS-Windows operating system COMV-UNX.FOR Unix operating system 
If the CVF compiler is used, the following source .les have to be linked depending the Windows 
application: 
COMV-CCA.FOR Console application 
COMV-CQW.FOR QuickWin application 

2.4 COMIS File Structure (Stand-alone installation) 


2.4 COMIS File Structure (Stand-alone installation) 
COMIS uses the .les shown in .gure 2.1 for input, output, and temporary storage. 
File name and extension1 I/O2 De.ned3 Description <name1.cif> in cls Input .le with simulation model description comis.set in — Set-.le for expert options4 <name5a.cmf> in cif Meteorology schedule data <name5b.csm> in cif Multi schedule data <name5c.csf> in cif Other schedule and data .les comis.daf, comis.tms tmp — Internal COMIS temporary time management .les <name6.cof> out cls Standard output .le <name7>-xy.COS out cls Spreadsheet output .les <name7>-xy.COH out cls Histogram output .les comis.cer out — Listing of error messages 
The only .les that inevitably must exist to run COMIS are the executable and an input .le. 
1 Extensions included in brackets may be choosen by the user. However, it is recommended to use the extensions given here. 2 cls: .le name de.ned on command line or in COMIS.SET; cif: .le name de.ned in input .le 3 in: .les read by COMIS simulation engine; tmp: temporary .les, out: output .les 4 A description of COMIS.SET can be found in Appendix C on page 143 
When run from the command line, input and output .le names (including paths) can either be explicitly given in the program call or default names can be set in the set-.le COMIS.SET. The set-.le is searched for in the current directory (for details on using / not using a set-.le, please confer appendix C). 
If no COMIS.SET .le is used, the names for the input and output .le(s) have to be given on the command line. The syntax of the program call is: 
C:\>COMIS32 [ifile] [ofile] [+o|-o] [+s|-s] 
[ifile]  Root name of *.CIF input .le (including path but without  
ext.). If omitted, or ’default’, COMIS uses the default root  
name given in the set-.le.  
[ofile]  Root  name  of output .les (without extension). If omit­ 
ted, [ifile] is used as root name for all output .les. If  
’default’, COMIS uses the default root names given in the  
set-.le.  
[+o|-o]  Force or suppress output of *.COF .le (Forced by default  
unless blank in set-.le)  
[+s|-s]  Force or suppress output of *.COS or *.COH spreadsheet  
.les (forced by default unless blank in set-.le)  

Root names may have a maximum length of 160 characters and they have to be between double quotes if spaces are included 
(e.g. "C:\My Documents\Restaurant example\case 3b") 
These combinations of [ifile] and [ofile] are possible: 
COMIS32 Input and output root names given in set-.le COMIS32 Root1 Input and output .les have same root name ROOT1 COMIS32 Root1 Root2 Input .le ROOT1.CIF; output .lenames ROOT2*.* COMIS32 Root1 Default Input .le ROOT1.CIF; output root name from set-.le COMIS32 Default Root2 Input .le from set-.le; output .lenames ROOT2*.* 
Example of using + and -options: 
COMIS32 	Root1 -o Input and output .les have root name ROOT1; No *.COF .le is generated (it is supressed). 
If COMIS is called without any options and if no speci.cations for input and output .les are made in COMIS.SET, an error is reported. 
2.5 COMIS User Interfaces 

2.5 COMIS User Interfaces 
Simulation Studio graphical user interface 
The latest version of this simulation environment, COMIS 3.2 Simulation Studio, features a com­pletely new graphical user interface, based on CSTBs Simulation Studio technology. This user interface is also available for the popular TRNSYS simulation program, and an integrated version of the COMIS project editor, allowing for simpli.ed coupled air .ow and thermal simulation, will also available with TRNSYS 16.1. 
The new Simulation Studio graphical user interface features assistants (so-called wizards) allowing for quick simulation project creation based of simpli.ed, step-by-step user interaction. Once a simulation project has been automatically created by the wizard, it can be run immediately, and the full power of the simulation environment is available to the user to modify, re.ne and extend it. 
A User Guide and a Tutorial for the Simulation Studio can be found in the directory ‘\comis32\documentation’. 
This program uses a GUI to create COMIS input .les for COMIS 3.1 and allows to execute simulations and to analyse the results. Documentation comes along with the COMIS 3.1 package distribution. 
COMISExcel User Interface 
A spreadsheet user interface has been developed by Peter Schild, Norwegian Building Research Institute. Documentation is included in the downloadable ZIP-.le (see below). 
A .le COMIS.XLS is supplied that serves as template spreadsheet user interface for Microsoft Excel. Important features according to Peter Schild include: 
. 	
Spreadsheet for data input to COMIS 3.x kernel (generates a standard *.CIF ASCII input .le) 

. 	
Simple, .exible and robust user interface (Input variables can now be calculated in-situ and/or linked to other cells in the spreadsheet) 

. 	
Bubble text makes the spreadsheet self-explanatory, with detailed description for most variables 

. 	
Can automatically run COMIS solver from within Excel. It is possible to automatically run multiple cases, either for parametric analysis or Monte Carlo calculation. 

. 	
The correct units are automatically shown for each input variable (i.e. hyperlinked to datablock where input/output units are designated) 

. 	
A debugging macro generates a summary table of links (see screen shot at bottom of page) 

. 
Neat printout of input data .le 
The latest information on COMISExcel can be found on 



http://www.byggforsk.no/prosjekter/hybvent/COMIS.htm The free download, see next sec­tion, “COMIS Tools”. 

2.6 COMIS Tools 
Tools like COMISExcel, a weather data converting utility and others are downloadable from the COMISeGroups webpage, 
http://groups.yahoo.com/group/comis/ 
BASIC CONCEPTS 



3BasicConcepts 


3.1 Input Data Structure 
INPUT FILE 
PROJECT DESCRIPTION 
DIRECT NETWORK DESCRIPTION 	AIRFLOW COMPONENTS NETWORK LINKS ZONES, ZONE CHARACTERISTICS 
CRACK-TEMPERATURE DATA 
LINK SCHEDULES
SCHEDULES 
ZONE SCHEDULES 
OUTDOOR POLLUTANT SCHEDULES OCCUPANT SCHEDULES METEO SCHEDULE 
CP VALUES
BUILDING DESCRIPTION 
ENVIRONMENT DESCRIPTION 	BUILDING RELATED PARAMETERS METEO STATION RELATED PARAMETERS 
POLLUTANT DESCRIPTION
POLLUTANT DATA 
FICTIVE SOURCES 
OCCUPANT DESCRIPTION
OCCUPANT DATA 
Figure 3.1: Data Groups 
3.1 Input Data Structure 
Input data in the CIF-.le is arranged according to the following classi.cation: 
Data group: Data groups are Project, Network, Schedules, Cp-Values, Environment, Pollutant and Occupant (see .gure 3.1). Groups are used to improve the user’s overview over the necessary data, but the grouping of data need not be re.ected in the structure of the input .le. The data sections are presented by group in this guide. 
Data section: The description of the simulation model in the input .le is divided into data sec­tions. The beginning of each section is characterized by a speci.c keyword. Keywords are characterized by having an & in the .rst column (example: &-PR-IDENTification, &-CR). The structure of data sections is shown for the example in .gure 3.2. 
To run a simulation, at minimum one air .ow component (from data sections &-CR on page 62 to &-TD on page 89), one zone (data section &-NET-ZON on page 94) and one link (data section &-NET-LIN on page 102) must be de.ned. An example is given in Appendix A.1 on page 132. 
Data Section 
Data Section 

Data sections not needed for the actual simulation or consisting of optional parameters only may be entirely omitted. If necessary, internal default values are used to complete the input 
(e.g. control parameters, ambient conditions, type of output). 
Data block: A data section consists of one or more data blocks. A data block has an optional header and can have several data lines. 
NOTE 	Data blocks in a data section or data set must be given in the sequence described by the order of the corresponding headers in section 4 in this guide. 
Header of data block: For each data block, a header may be given in the input .le. The header 
3.1 Input Data Structure 

usually contains information on the data required in the data block: parameter names, units and possibly some further descriptions. This allows for the content of the input .le to be self-explanatory. Headers are surrounded by vertical and horizontal bars. 
A header starts with two blanks followed by a row of underscores ‘ ...’. Headers are, preferably, placed close under the keyword. 
Headers are provided by the Simulation Studio user interface coming with the o.cial distri­bution of COMIS. The COMISExcel uses headers, too. See section “COMIS User Interfaces” on page 24 for more information. Headers (but not the keywords!) may be omitted by the user while establishing an input .le using the screen editor. The headers shown in the key­word description later in this guide are stored in the COMIS simulation engine documents directory in a .le called ‘HEADERS.TXT’. 
The units reported in these headers are identi.ed either 
. 	
by a 4-character name of a unit set in section &-PR-UNITS or in the set-.le, if the unit may beset by theuser; 

. 	
by a conventional unit name, if the unit cannot be changed; 

. 	
by a dash, if the quantity has no unit; 

. 	
or by a questionmark, if quantities with eventually di.erent units are possible (example: histogram). 


Care has to be taken that values in a particular input .le correspond with the units setting in the COMIS.SET .le and in the input .le (see section PR-UNITS on page 49 and appendix C)! 
The type of brackets used for the units in the headers indicates whether the speci.c param­eter is required or optional: 
(..) Required parameter or set of parameters 
[..] Optional parameter or set of parameters 
Data lines: The separator for data items is one or more blanks, a comma or both. A data-line is not allowed to start with a comma. 
Data-items in one data line must be given in the sequence described in the header. But they do not have to be arranged in columns. I.e., they do not have to be placed exactly under the respective header. It is, however, advantageous to use the header as a formatting aid. 
Only optional parameters following the last mandatory parameter may be omitted entirely. Otherwise some value must be put at the place of an optional parameter preceding manda­tory parameters or optional parameters that shall have an other than the default value. 
Any abbreviation of the word ‘default’ (without a period ‘.’) may be used in a place where the user wants to use a default value, or to skip over an optional parameter. Examples are ‘d’, ‘def’. Uppercase and lowercase are not signi.cant. 
Data set: In many data sections, more than one element can be de.ned. Then, data blocks be­longing to one element are grouped together. Data sets are a set of data blocks de.ning a (physical or logical) element of the simulation model. The .rst item of the .rst block in a data set is a speci.c *<name>, <name>, *<no> or <no> with which the data set can be identi.ed and referenced. In the example shown in .gure 3.2 several cracks are de.ned. 


3.2 Special Characters and Naming Conventions 
The special characters used are: 
‘&’ as .rst non-blank character in a line, a keyword follows in this line ‘#’or ‘;’or ‘|’or ‘_’ as .rst non-blank character in a line, line is regarded as a comment ‘#’or ‘;’ after some input in a line, rest of line is regarded as a comment ‘|’, ‘_’ the headers are surrounded by bars ‘|’ (ASCII char 124) and under­
scores ‘_’, (ASCII char 95) ‘_’ delimiter in date time string ‘:’ (optional) delimiter in time string ‘/’ delimiter for parameters where a parameter list is allowed in the place 
of a single value ‘-’ parameter range indicator where a parameter list is allowed in the place of a single value 
‘*’ 	as .rst non-blank character in a line, preceding a name or number without blank space in between, indicates that all lines until next line beginning with ‘*’ or until next keyword belong to the de.nition of the actual data set 
‘*’ 	in the multi schedule or meteo schedule .le: as .rst non-blank character in the .rst line ‘*’ indicates that a point in time and a time period follows 
‘’, ‘,’ data delimiter in data lines ‘d[e[f[a[u[l[t]]]]]]]’ if placed in a data line where a value is expected, an internal default value is taken as value for the respective parameter 
A‘#’ inserted at the beginning of a data line converts this line to a comment. This makes it easy to change a line by copying it into a new line and yet keeping the old line with ‘#’ before the .rst data element. 
Network elements that are referenced by other components in COMIS have an identi.er (a name, or, in certain cases, a number). Generally, names may consist of any character sequence. Not allowed are the characters ‘/’and ‘-’ because they are used as delimiters in lists of names. If an element with a name as identi.er is used where a parameter list is allowed, the use of the above mentioned characters would lead to a misinterpretation of the name. 
3.3 Date and Time Format 

3.3 Date and Time Format 
Date and time input is required in several data sections in COMIS. Date and time inputs in COMIS are interpreted as a point in time where a certain event occurs. 
Date and time are entered as date time string. Date time strings consisting of date or time only are allowed. 
Valid date_ expressions have one of the following formats: 
MDD_ MMDD_ YYMMDD_ YYYYMMDD_ 
monDD_ monDD_ YYmonDD_ YYYYmonDD_ 
day_ 

in which 	M digit of the number of the month D digit of the calendar day number Y digit of the year number mon name of the month or valid abbreviation (minimum 3 char­
acters); 
e.g. jan; JAN; januar; january; feb; februa; mar; apr; may; jun; jul; aug; sep; oct; nov; dec 
day 	name of the day of the week or valid abbreviation (minimum 3 characters); 
e.g. mon; tue; WED; thu; fri; sat; sun; WDY; wnd. Names of month and day are case insensitive, so JAN,or Jan, for January would work, too. WDY_ and WND_ correspond to weekday (monday til friday) and weekend (saturday and sunday), 
respectively. For weekday and weekend, no other abbreviations are possible. 
In order to distinguish between the date and the time, the date is followed by an underscore 

character ‘_’. The delimiter ‘:’ can be used to separate hours, minutes and seconds in the time 
expression. 
Valid formats for the time input are: 

h 	hh hmm hhmm hmmss hhmmss 
h: 	hh: h:mm hh:mm: h:mm:ss hh:mm:ss 
in which h digit of the hour 

m digit of the minute 
s digit of the second 

The date time expression must not contain any blanks. 
Following are some examples of how the data for date and time might be entered into the program, and the interpretation of the date time expression: 
89aug04_ or 890804_ 2089 august 04 at 00:00 1989aug04_ or 19890804_ 1989 august 04 at 00:00 aug04_ or 0804_ or 804_ august 04 any year at 00:00 aug04_18:23 or 0804_18:23 or 804_18:23 august 04 any year at 18:23 SUN every sunday at 00:00 FRI_18:00 or FRI_18 every friday at 18:00 
18:23:10 or 182310 	every day at 18 hours 23 minutes 10 seconds 
18:23:00 or 18:23 or 1823 every day at 18 hours 23 minutes 0 seconds 
18:00 or 18: or 18 every day at 18 hours 0 minutes 0 seconds 





3.4 File Name Format 
In many data sections the user may de.ne a data .le instead of giving explicit input data in the CIF-.le. The format of this .le allocation is: 
F: <filename> 
or 
F: <schedule name> <filename> 
The second form has to be used to connect a .le which contains data for referenced schedules. <filename> can be any .le designation in compliance to the speci.c computer operating system requirements. 
Example of a Cp-value data .le assignment: 
for DOS-and Windows System: F:C:\comis\exampl\comin\cp1.dat 
for UNIX-System: F:~comis/@exampl/comin_cp.cp1.dat 
The content of these .les must be formatted exactly according to the requirements set up in the following sections for the speci.c data. 
3.5 Modelling Concepts 

3.5 Modelling Concepts 
COMIS is based on a node model of a building. It is assumed that each zone is homogeneous, and can be represented by a node with single values for temperature, pressure, and possibly for each contaminant concentration. The nodes are linked by non linear conductances, modelling the air paths (cracks, openings, ducts, etc.). Pressure coe.cients, relating the wind pressure at the building to the wind velocity, can be attributed to external nodes. Not only wind e.ect, but also stack e.ects resulting from temperature and air composition di.erences, as well as fans, are taken into account. Using air mass conservation, a system of non linear equations is built and solved. The physical models used are described in [14]. 
In this section, explanations referring to more than one keyword and important features and underlying concepts of the models are given. In addition, the equations for .ctive sources and e.ective .ow rates, and the calculation of the frequency distribution for COMIS histograms are documented here, because they have not been documented elsewhere. 

height Ground plane 
Conventions Concerning Flow Directions and Heights 
A link is de.ned between two zones, see &-NET-LIN on page 102. Flows have a positive sign in direction from zone From to zone To. For most air.ow components it is arbitrary which zone is chosen to be From and which is chosen to be To. The exceptions are 
. 
T-junctions, see &-NET-LIN on page 102 

. 
Active elements, like fan, and – eventually – test data components 

. 
Flow controllers. 
Care has to be taken that one gets the desired .ow directions for these components! 
For passive elements, which constitute a simple resistance to air .ow, the pressure decreases in 



.ow direction. For such elements, the pressure di.erence in COMIS is de.ned as 

.p = pFrom - pTo 
Active elements like fans push the .ow against the pressure di.erence. To have positive pressure 
values, COMIS uses 
.p = pTo - pFrom 

as pressure di.erence for fans. 
The Test Data component is supposed to be used for both passive and active elements. Its pressure di.erence however is that used for passive elements. I.e., if fans are to be modelled with a Test Data component, negative pressure di.erences correspond to positive air .ows. 
To account for the thermal stack pressure in the right way, the vertical position of zones and links must be known, see .gure 3.3. In COMIS, a reference plane has to be de.ned for every zone. This plane is characterized by its height relative to the ground plane. The reference plane for a zone can be chosen as is convenient for the project. The only exception are layered zones, where the reference plane has to coincide with the .oor plane. The reference plane for the surroundings of the building is the ground plane. 
NOTE 	Internal (i.e. zone) nodes are located in the zone reference plane. External nodes are located in the ground plane. 
Links are also situated in a certain height. Their position is measured relative to the zone reference plane. If the reference planes of the From and the To zone of a link are di.erent, the Height From and Height To of this link will di.er, too. 
The height de.nitions are illustrated in .gure 3.3 
Pressure Reference 
COMIS normally uses pressures with reference to the outside pressure (without wind) at the reference level of the building. This means that the pressure decreases about 12 Pascal (Pa) per meter height, as in reality. This is due to the gravity .eld. Each cubic meter of air weighs about 12 N, which results in the 12 Pa/m pressure change. 
Consider two rooms, one on top of the other (see .gure 3.4). 
If there is no .ow through the cracks of the ceiling between the rooms, then the pressure in the upper room is about 36 Pa lower than in the lower room. Here it is about 33 Pa due to the altitude of the building of 588 m. Both room pressures (-10.7 and -43.9 Pa) are de.ned here at the .oor level and the ground plane is one meter below the .oor of zone 1. Looking at the zone pressures, in .gure 3.4, one might .rst think that there must be a .ow from zone 1 to zone 2. However this .ow is zero. At a height of 3 m in zone 1 the pressure equals the pressure in zone 2 at 0 m. 
One could say: as there is no .ow between the two rooms their pressures are equal, therefore they must be the same in the COMIS output. A way to do this is simple: use as reference pressure the outside pressure (without wind) at the altitude of the zone reference height (see .gure 3.5). 
If the characters ‘-OSR’(take “Outside Stack as Reference”) are attached to the output units for pressure (e.g. ‘Pa-OSR’) under the &-PR-UNITS keyword (see page 49) then the corrected zone pressures are printed. 
The pressures now almost resemble the pressure hierarchy. However if the rooms have a temperature that di.ers from outside, the thermal stack pressure (with respect to outside) can still result in a small pressure di.erence between the rooms that seems not to agree with the .ow direction at .rst glance (see .gure 3.6). 
3.5 Modelling Concepts 
p outside 
p inside 
(p not true to scale) 


h [m] 
20°C outside all cracks are identical 
wind 
5.5 m 
2.5 m 
-10.7Pa 
1 m 
ext. node ext. node 
0 m 
Dp [Pa] p_w = 4.77Pa p_w = -3.98Pa 


10°C outside 
wind 
ext. node 
p_w = 4.77Pa
(p not true to scale) Dp [Pa] all cracks are identical 5.5 m 

2.5 m 1 m 
ext. node 
0 m 
p_w = -3.98Pa 

-20 -15 -10 -5 0 5 10 15 20 
Dp [pa] Component F4 (Flow Controller, Asymmetric, Non-Ideal, Increasing Range 3) Component F3 (Flow Controller, Symmetric,  Non-Ideal, Decreasing Range 3) 
Figure 3.7: Characteristic of .ow controllers 
Flow Controllers 
In COMIS, four types of .ow controllers are available which represent most of the available dampers or regulators with input signal from the pressure drop or (duct) .ow. Controllers with input signal from temperature must be simulated with the schedules. 
The basic premise of the controllers is that they have an opening through which the air .ows. At higher pressures a .ap or valve may throttle the .ow by gradually closing the opening. 
According to [14] three ranges of operation are distinguished in the .ow controller characteristics, see .gure 3.7: 
Range 1: The pressure is low and the .ow controller is fully open, .ap or valve are in a .xed position. This part of the characteristic is simulated with the normal crack .ow equation, which needs a .ow coe.cient cq (volume .ow at pressure di.erence 1 Pa) and an exponent n as parameters. 
Range 2: The pressure is within the range where the position of the .ap or valve can be adjusted, so that the .ow is (roughly) kept constant. This part will be simulated, ideally, by a single constant .ow rate, or with a curve approximated by a polynomial. The polynomial might give both .ows increasing or decreasing with pressure. The transition point between range 1 and range 2 is simply de.ned by the intersection of the respective functions. In the same way, the transition point between range 2 and range 3 is de.ned by the intersection with the function for range 3. 
Range 3: The pressure is beyond the range where the .ow can be maintained at the level given by the function in range 2. The .ap or valve may: 
. 
close no further or have leaks, i.e. the .ow is further increasing with pressure, or 

. 
close faster, reducing the .ow with increasing pressure to almost zero. 


Range 3 starts at the intersection of the two curves in the ranges 2 and 3, respectively. Range 3 is also simulated with a polynomial. Care should be taken with steeply decreasing .ows. If, due to this, the zone pressure rises if less air is supplied to the zone, or the opposite, then the network can no longer be solved. In reality, such .ow controllers will probably also oscillate. 
The polynomial approximation is used between the maximum pressures pmax,n and pmax,p.As the polynomial approximation could oscillate at higher pressures which would lead to solver problem, a linear approximation beyond p<pmax,n and p>pmax,p is taken. 
3.5 Modelling Concepts 
If the .ow in range 3 is increasing the coe.cients are: 
dq 
= q(pmax)/pmax and q(0) = 0 
dp 
In .gure 3.7 the asymmetric .ow controller F4 shows this behaviour. 
If the .ow in range 3 is decreasing, the program will look for a root near pmax,n and / or pmax,p in the curve of range 3. In .gure 3.7 the symmetric .ow controller F3 shows this behaviour. Make sure that pmax,n and pmax,p are a rough estimation of this root. Above this root the .ow will remain zero. 
Pollutants 
Up to .ve pollutants can be simulated in COMIS. 
Units for Pollutants. For each pollutant, separate units can be de.ned for concentration, sink strength and source strength. The de.nition of units is described under &-PR-UNITS on page 49. Under item “Header of data block” in section 3.1 the representation of units in the keyword desription and in the headers is explained. 
&-NET-ZP zone-pollutants 
| Zone | Pollutant | 
| |_______________________________________________| 
|  *ID  |  Initial  |  Source  |  Sink  |  Decay  |  
|  | Concentrati on|  |  |  |  
| (-)  |  (conc?)  |  [sour?] |  [sink?] |  [1/s]  |  

|________|______________|__________|__________|__________| 
Example *z01 350.00 
1.00 
In the above example, initial concentrations in zone z01 are de.ned. (conc?) means that the concentration unit of the pollutant in question, identi.ed by its unique number, is used. If pollutant no 1 is ‘CO2’, and its concentration unit is ‘ppm’, pollutant no 2 is ‘H2O’, and its concentration unit is ‘g/kg’, then values for pollutant no 1 have to be input in ppm, and values for pollutant no 2 have to be input in g/kg though these values are input in the same column. 
NOTE Concentration De.nition. In COMIS, the concentration of a pollutant is de.ned as 
mass of pollutant in V c = mass of clean, dry air in V or 
volume of pollutant in V c = mass of clean, dry air in V 
This de.nition di.ers from the usual de.nition of pollutant concentration (mass of pollutant in relation to mass of pollutet, dry air). It is similar to the usual de.nition of humidity (mass of water vapour in relation to mass of dry air). However, if pollutant concentrations are low, the di.erence between the usual de.nition and the one used here is small. 
Constituents of Air as Pollutants — Humidity as Pollutant. Air density in COMIS is calculated according to 
air mass + mass of water vapour + mass of pollutants in V 
. = 
total volume V 
Outdoor

Pollutant Schedule (&-SCH-POL) 
Zone Layers (&-NET-ZL) 
Zones (&-NET-ZON) 
External Nodes (&-NET-EXT) 
Initial Zone Values (&-NET-ZP) 
Source & Sink Schedules (&-SCH-SOU, &-SCH-SIN) 
Occupants (&-OCCUPAN) 
Occupant-Schedules (&-SCH-OCC) 
Figure 3.8: Keywords with de.nitions and references for the pollutant transport model. The arrows are directed from the de.ning to the referencing keyword. The labels show how an element is referenced. ID: identi.er name: descriptive name number: explicit number number 1: layers only for .rst pollutant sequence number: same sequence as in de.nition implicit: automatically without explicit reference 
A problem arises if a substance which is a usual constituent of air is treated as pollutant in COMIS. According to the above de.nition, such a substance would be counted twice when calculating the air density. 
For humidity, a correct calculation can be achieved by 
. 	
setting the humidity to zero when water vapour is treated as pollutant, 

. 	
or by setting the pollutant concentration of water vapour to zero when the humidity is used. 


For de.nition of these values, see &-NET-ZON, &-NET-ZP and respective schedules. 
For carbon dioxide, there is no possibility to avoid double counting in the density calculation up to now. Normal concentrations of carbon dioxide in air are about 0.05 mass%, so the error is negligible. 
Keywords Related to Pollutants. Figure 3.8 shows the relations between keywords relevant for the pollutant transport model. The arrows are directed from the de.ning to the referencing keyword. The labels show how an element is referenced. The keywords have the following tasks: 
. 	&-PR-UNITs (not shown in the .gure) Units for the concentration, the source strength, and the sink strength of pollutants can be 
3.5 Modelling Concepts 
chosen. 
. 	
&-NET-ZON zones Schedules for source and/or sink strength of pollutants are referenced here 

. 	
&-NET-ZL zone layers 
Gradients for pollutant concentration are de.ned here 


. 	
&-NET-ZP zone pollutants Initial concentrations, source and sink strengths and absorption rates are de.ned here 

. 	
&-SCH-SOU, &-SCH-SIN source and sink schedules Time dependent source and sink strengths are de.ned here; the factors modify the initial source and sink strength input under &-NET-ZP. 

. 	
&-SCH-POL external pollutant schedules 
Time dependent external pollutant concentrations are de.ned here. 


. 	
&-POL-DES pollutant description 
Pollutants are de.ned here. 


. 	
&-POL-FIC .ctive sources 
Fictive sources (see E.ective .ow rates) are de.ned here. 


. 	
&-SCH-OCC occupant schedule Occupant numbers and activity level factors for zones are de.ned here; without occupant sched­ule, no occupant will reside in any zone. 

. 	
&-OCCUPAN occupant description Occupant types and their contribution to pollutant sources are de.ned here. 


E.ective Flow Rates 
Assume that the concentration Cn,k(t) of pollutant no n in zone k would be a steady state con­centration, i.e. Cn,k(t) = const. If there is a .ctive source with source strength qfict,k for that pollutant in zone k, and the concentration of the pollutant in the incoming air is zero, the total .ow rate which is required to keep the concentration constant, is 
qfict,k 
qeff,k(t)= 
Cn,k(t) 
This .ow rate is called e.ective .ow rate. However, the actual concentration usually is not constant, and thus for each time interval t usually a di.erent e.ective .ow rate results. 
The e.ective .ow rate is higher than the actual (fresh air) .ow rate in a room if the concentration is below the steady state concentration associated with the .ctive source. The e.ective .ow rate is lower than the actual ventilation in the room if the incoming air passes other rooms in which the concentration is already raised. By de.nition the e.ective .ow rate is the .ow rate of fresh air that would keep the concentration in the zone at its actual value if the (net) source strength in the zone is given by the .ctive source. Therefore it is the best value to look at when pollutant problems are to be solved. For energy loss/consumption it is better to look at the in.ltration .ow rate itself. 
E.ective .ow rates are calculated according to the de.nition above. COMIS uses the .ctive source Fm(n) and the concentration C of pollutant n in the zone under consideration, whenever the output of thee.ective.ow rate Fm is demanded at &-PR-OUTPut. The .ctive, constant source strength is input at &-POL-FICtive sources. Fictive sources can be de.ned in a number of ways for zones and for occupants. 
The variables used here are: Fm E.ective .ow rate (at timestep t) FQ Fictive Source AF Floor Area of zone AW Wall Area (all walls including ceiling and .oor) of zone VZ Volume of the Zone C(t) Concentration of the zone at a timestep t occ 
num(t) Number of occupants of the zone at a timestep t < activity > (t) Mean activity of all ocupant types in the zone at a timestep t 
For zones there are four ways to calculate the E.ective .ow rate controlled by the parameter ‘Dependency indicator’ in &-POL-FICtive Sources: 
1: 	absolute .ctive source strength (Dep=0) 
FQ,1 · 1 
Fm = 
C(t) 
2: 	.ctive source strength .oor area dependent (Dep=1) 
FQ,F · Af
Fm = 
C(t) 
3: 	.ctive source strength wall area dependent (Dep=2) 
FQ,W · Aw
Fm = 
C(t) 
4: 	.ctive source strength room volume dependent (Dep=3) 
FQ,V · Vz
Fm = 
C(t) 
For occupants there are two ways to calculate the e.ective .ow rate controlled by the parameter ‘Dependency indicator’ in &-POL-FICtive Sources: 
1: 	.ctive source strength proportional to the number of occupants (Dep=5) 
FQ,O · occn um(t)
Fm = 
C(t) 
2: 	.ctive source strength proportional to the mean activity of all occupant types in the zone (Dep=6) 
FQ,A · < activity > (t)
Fm = C(t) 
The average occupant activity is the mean activity of all occupant types in the zone under consid­eration: .
occ 
num · activity 
types 
< activity >= .
occ 
num
types 
Example 	Occupants produce CO2 dependent on their activity and metabolic rate, and move from zone to zone. The allowable concentration is set to 600 ppm above ambient concentration. The absolute CO2 level would then be 1000 . . . 1100 ppm. 
The .ctive source is set to 5.5E-6 m3/s CO2 which is about the average value for a person at light work. The room size dependency is set to 0 (.xed) in this case. An occupant enters a zone in which nobody has been before. The ventilation .ow rate is adjusted for just one person in that zone. The CO2 concentration will start to rise from zero, leading to an in.nite e.ective ventilation .ow rate 
3.5 Modelling Concepts 
at the beginning. The concentration will continue to rise to a steady state close to the allowable concentration. The e.ective .ow rate will decrease accordingly. 
If the e.ective .ow rate is evaluated with a COMIS histogram output, the .rst e.ective .ow rates will fall outside the classes of the histogram and will be counted in the class for over.ow values. In fact this histogram shows the interesting part where the e.ective .ow rate may become too low. 
For sources that are more or less proportional to the .oor area the dependency indicator is set to 
1. Then the absolute value of the e.ective .ow rate depends on the .oor area of the zone. If the dependency indicator is set to 2, the source will be wall area (i.e. .oor + ceiling + walls) dependent. With these settings sources from building materials or furniture can be judged. A similar possibility exists for volume dependent sources. 
Histograms 
With mode ‘-Hn’ the relative frequency distribution for zone, link and external node quantities can be output to histograms, see &-PR-OUTPut and &-HISTO. 
Furthermore, histograms can be established for occupants. I.e., occupant type names de.ned under &-SCH-OCCpant may appear in the place of a zone name, if (and only if) the mode ‘-Hn’is chosen for a zone output. If an occupant type is speci.ed instead of a zone name, the histogram is established by evaluating the quantity denoted by the keyword in all zones where that occupant type resides. The frequency distribution is weighted by the number of occupants present in the respective zones. Thus the frequency distribution for occupants re.ects the conditions an ensemble of occupants experiences. For example, concentrations in a crowded room have a high weight when evaluating the pollution load, concentrations in an empty room are disregarded for the evaluation. 
The activity level of the occupants may also in.uence the severeness of an exposure, e.g. to pollutant loads. However, the evaluation is left to the COMIS user because there is no general model for taking into account the activity level. 
De.nition of Statistical Quantities in COMIS. 
. 
Frequency distribution calculated in COMIS 

For each time interval i of duration .ti, the COMIS histogram routine sorts the actual values in the respective classes. The duration of the time interval is used as weighting factor because time intervals may have di.erent lengths. If no pollution routines are called, the time interval corresponds to the time interval between two scheduled events. If pollution routines are called, it corresponds to the internal time step of the pollution routines. In each internal time step of the pollution routines, the histogram subroutines are called. 

. 
For time interval i 


A certain quantity x has a value within class X in a zone or link k at a certain time interval i. This event is denoted by d(x(k, i),X). During time interval i, the contribution to the frequency distribution hk for zone, external node or link quantities is 
hik(X)= d(x(k, i),X) · .ti 
The unit of hik(X)is [sec]. 
For a number of occupants per zone nocc experiencing these conditions, the above value has to be multiplied with the number of occupants in zones with quantity x in class X, and summed up for all zones k, 
hi(X)= nocc(k, i) · d(x(k, i),X) · .ti zones k 
The unit of h is [pers. · sec.]. 
. For the whole evaluation period, the contribution of all intervals is summed up. The respective frequency distributions are 
hk(X)=hik(X)=
d(x(k, i),X) · .ti 
ii 
for zones, external nodes or links, and 
h(X)=hi(X)=
nocc(k, i) · d(x(k, i),X) · .ti 
i k,i 
for occupants. 
. 	At the end of a simulation run, the sum over all classes is calculated for each histogram. These classes range from Xmin, which is the ‘below range’ class, to Xmax, which is the ‘over range’ class. This ensures that all events are counted. 
The cumulated frequency H of class X = Xmin is 
Xmax 
Hk(X)= 
hk(X) 
X.=X 
and 
Xmax 
H(X)= 
h(X) 
X.=X 
The total number of events (which is output by COMIS in the histogram summary) is 
Nk = Hk(Xmin) 
for zones, external nodes or links, and 
N = H(Xmin) 
for occupants. 
Depending on the number of occupants and on the share of the total simulation time, during 
which zones are occupied, Nk and N may be di.erent. 
The units of Hk and Nk are [sec.]. The units of H and N are [pers. · sec.]. 

. 	The relative frequency distribution is the frequency distribution normalised with the total number of events. The relative frequency distribution is output by COMIS together with the total number of events and some further values. The output is explained in more detail for the factory example on pages 135.. 
hk(X)
fk(X)= 
Nk 
for zones, external nodes or links, and 
h(X)
f(X)= 
N 
for occupants. 
3.5 Modelling Concepts 
With the histograms output by COMIS, further values can be calculated outside COMIS. 
Histograms and quantities derived from histograms for occupants can in principle also be con­structed from the time series of the quantities for each zone and the time series of number of occupants for each zone. Di.erences to COMIS histogram output are negligible if the time steps are small enough. 
Due to the shorter internal timestep used inside the COMIS pollution transport routines (see page 42) COMIS histograms can give detailed statistics without increasing the amount of simulation time steps and output. 
An example of occupant-weighted frequency distributions can be found on page 135. 
Occupants as Source and Occupants as Sensor 
The occupant-weighted frequency distribution uses the presence of an occupant type in a zone. Every zone quantity may be evaluated with an occupant-weighted frequency distribution. 
If the second data block under &-OCCUPAN (pollutant name and source strength) is omitted, or if the activity level in &-SCH-OCC is set to zero, the respective occupant type can still be used for establishing occupant-weighted frequency distributions. However, in that case the occupant type will not be the source of any pollutant. I.e., the occupant acts as a sensor. 
If there is a second data block under &-OCCUPAN (pollutant name and source strength), and if the activity level in &-SCH-OCC is not zero, then the occupant type contributes to the pollutant source strengths in zones where the occupant number is not zero. In that case, the occupant acts as source 
– and eventually, as sensor, too. 
Default Values 
COMIS has default values for most variables read from the input .le. Others are initialized with ‘0’. Most defaults are assigned in the main program. For speci.c values, see column ‘Default value’ in the tables following the data section keywords. From each input line that contains data, COMIS reads a .xed number of variables. As soon as there is no more data in the line, and the program still tries to read data, the variables are .lled with their defaults. 
COMIS can report defaults it uses when reading an input .le. The Keyword to echo defaults is the ‘DEFAULT’ under the &-PR-SIMUlation options. The echo is sent to the COF-.le. 
For example, the default input echo might look like this: 
Def. value 0.000 used for Ref height zone Zz in line: E01 Examp_Zone 25 
The .rst part states that a default of 0.0 has been used. The second part is the line from the CIF-.le, in which this default has been inserted. 
Schedules, Time Steps and Simulation Dynamics 
Names of schedules which are activated by referencing them from anotherdatasection haveto start with a prede.ned character indicating which component is a.ected by the schedule. Example: names of schedules de.ning opening factors for windows must start with ‘W’. 
Schedules allow changing certain parameters in time, e.g., weather data. Schedules give a point of time for an event. The scheduled quantity takes a new value at that point of time, and from then on remains constant until a new event (new schedule entry) sets a new value. Which values are taken for scheduled quantities depending on the time covered by the schedule is shown in .gure 3.9. 
If the schedule has no event at the start time of the simulation, COMIS will use the value at the last event before the start time. If the schedule starts with an event after the start time, the scheduled values are set to the defaults provided by COMIS or to primary values de.ned in the input .le. 
All network quantities (especially .ows and pressures) keep the values that have been found from solving the network at a point in time during the following interval. The only exception are con­centrations of pollutants for which the interval is subdivided according to the time constant of the network. That means, air.ow calculation is a steady state simulation and the pollutant transport is calculated with a dynamic model. 
Schedule events trigger the next calculation of the network solving. The number of time steps in a COMIS simulation is determined by the number of schedule events with unique points in time. As mentioned above pollutant concentrations can change their values during an interval. Therefore it could be interesting to force additional concentration output between schedule events. This can be done by setting the POLSTEP option under &-PR-SIMUlation. At this additional points in time network solving will not be recalculated. The results may di.er from those obtained by forcing output with schedule events without changing the scheduled boundary conditions. In the latter case, both network solving and pollutant calculation are forced. While driving forces remain unchanged if only the pollutant calculations are performed, changing driving forces may result from changing air density due to di.erent pollutant concentrations if network solving is invoked. 

3.5 Modelling Concepts 
Notes on Convergence 
De.nition: The overall resistance of a node is the replacement resistance of all links to the node. De.nition: Negative-Nodes are nodes for which: 
. 	
more air .ows out of the node if the pressure is lowered, 

. 
less air .ows out (or more in) if the pressure is raised. 
De.nition: Normal nodes with passive resistances have the reverse: 


. 	
more air .ows out if the node pressure is made higher, 

. 	
more air .ows in if the node pressure is made lower. 


The use of the Air .ow components fan FA, .ow controller F1 through F4, related .ow component RF and test data TD may lead to unstable networks. The overall resistance of a node may become negative if one of these components is used. 
All nodes with an overall negative resistance lead to a situation where the network cannot be solved. The zone pressure cannot converge. 
Tests for negative-nodes could be done, but zones can become negative-nodes depending on the pressures in the network. At some pressure distribution the node becomes locally negative. As the solver jumps pretty irregular through the pressures, this problem can occur in some cases in the numerical solution while it would not exist in reality. 
However, negative nodes almost never exist in reality. The few exeptions are: 
1: 	an ill-conditioned control loop for a fan with positive feedback (this will lead to vacuum or the maximum pressure the fan can blow into the node). 
2: 	the detonation of an explosive (chemical reaction speeds up as the pressure rises, making the thing unstable) 
3: 	a loose hanging .ap/part in a wall closing at a certain pressure 
4: a .ow controller (it does the same as a loose hanging .ap/part) 
The message COMIS gives is: 

MATRIX SINGULAR in ZONE \# nn 
The number nn can be the negative node at either side of the negative-link. 
The characteristics of the above mentioned components can be (locally) negative (.ow over the component, in the direction of the pressure vector, drops as pressure rises). Depending on the other links and points of operation on their characteristic a negative-node could result. 
COMIS has some added network checks which prevent most of the ‘MATRIX SINGULAR’ condi­tions. If one gets this message and fans, .ow controller test data or related .ow components are in the network, one should try .rst to replace these components step by step with a standard crack component. This will probably locate the cause of the negative node. 
For fans negative parts in the curve do exist only for ill-conditioned polynomials. The fan in COMIS is described as .ow as a function of pressure di.erence. This should not be confused with the pressure bump (contra.exure) seen in fans with forward bend scoops. One cannot input such a curve in COMIS! 
At .ow controllers one should watch for the part where the .ow decreases if pressure increases. If this decreasing .ow rate is not compensated by an increasing .ow rate in other links in the zone in which the .ow controller is placed, then the node becomes negative. 
Related .ow components that have their reference link connected to the same node, and have a .ow direction opposite to the .ow of the reference link, and have a larger .ow rate than the reference link form a negative link. If this is not compensated by (large enough) other links, the node will get negative. 
Related .ow components in zones further away from their reference link may cause a series of nodes to become negative, but only if their .ow rate is (much) larger and opposite to the .ow in the reference link. If a large exchange .ow rate must be provided by a related .ow component, then one should use two related .ow links with the same RF type, but link them in opposite directions to the node. This will never cause convergence trouble. 
3.5 Modelling Concepts 
4DataSections 


In this chapter all input parameters are described in detail. The description of the parameters is structured according todatagroups: 
. 
Problem description 

. 
Network description 

. Air .ow components, Zones, Links 

. 
Schedules 

. 
Cp-Values 

. 
Environment description 

. 
Pollutant description 

. 
Occupant description 


It is recommended to follow this sequence of data groups and sections when establishing an input .le. If another data section is required before a certain keyword may occur, this is stated in the description of the respective keyword. 
The following sections will show the headers, some example inputs, and explanations of the input. The inputs are shown in typewriter characters. 
4.1 Project Description 
4.1 Project Description 
&-PR-IDEN ti.cation (Project Identi.cation) 
&-PR-IDENtification 
|1.|Problem Name | 
|__| | 
|________________| 

|2.|Version Name | 
|__| | 
|________________| 

Example 	This is an example of the project name. 
You may write text here to describe the project case. 
The maximum number of lines is 10. 

| 
24-June-89 

NOTE 	At least one header line, i.e. one line with .rst non-blank character ‘|’ must be between description of problem and version name. Otherwise version name is not recognized and the contents of the line ist appended to problem name. 
Description: 
Parameter Description Default value Input format, range 

Problem Name  short description of project / simulation model  ‘’  String 800 char  
(10 lines with  
max. 79 characters  
+crlfeach)  
Version Name  version name, date, etc.  ‘’  String 160 char  

&-PR-UNITS (Project Units) 
&-PR-UNITS 
| Unit Conversion Definitions | | Name | Input | Output | |_________|__________|__________| 
Example 1  pres  Pa  Pa-OSR  
temp  C  F  
humi  g/kg  g/kg  
INPUT  
cflo  m3/s  
prof  alpha  
OUTPUT  
mean  s  

Example 2 	sour_co2 kg/s mg/s sour_h2o kg/s mg/s sour_odour olf olf conc ppm ppm conc g/kg g/kg conc decipol decipol 
If the keyword INPUT is seen, the units in the following lines are only used for input. Conversely, if the word OUTPUT is seen, the units are used only for output. 
If neither INPUT nor OUTPUT is seen, the .rst value following the unit identi.er is used for input and the second for output. 
The wind velocity pro.le “unit” is available for input only (no pro.le output). 
The air change rate (ach), mean age of air (meanage) and energy units are only available for output and must follow the OUTPUT keyword. All the other units may be used for both input and output conversions. 
The data section &-PR-UNITS can be used more than once. This allows having di.erent units in di.erent data sections within one input .le. The units declared by &-PR-UNITS are valid for all data sections following these declarations until the end of the input .le or until another unit declaration is encountered that changes the units de.ned explicitly before. 
Description:  
Parameter  Description  
Name Input  identi.er for physical quantity; also used as reference in the headers to identify the corre­sponding quantities; or: keyword INPUT or OUTPUT, if only one unit is given unit for input values  
Output  unit for output values  

Default value — 
see table see table Input format, range 
string element from table below, 4 signif­icant characters; or INPUT or OUTPUT 
string element from table string element from table 
4.1 Project Description 
However, it is recommended to use the unit conversion only once per input .le. It is also advisable to place the data section &-PR-UNITS as early as possible. 
The &-PR-UNITS input is the preferable method of de.ning the unit conversions because all infor­mation on the simulation situation is fully contained in the input .le. It is not recommended to use the COMIS.SET .le to de.ne the units (see also apppendix C). If units are set in the SET-.le, it is impossible to tell which input units were used unless this .le is kept with the project .les, too. 
The values of the quantities listed in the table below can be converted from input units to COMIS internal units, or from COMIS internal units to output units. The internal units are at the same 
time the default units for input and output. 
Name Quantity AIRLeakage Air Leakage 
FLOW Air Flow PRESsure Ventilation Pressure 
TEMPerature Temperature HUMIdity Humidity SOURce Pollutant Source SINK Pollutant Sink CONCentration Pollut. Concentration 
VELOcity Wind Speed Input option only CFLOw Component Flow PROFile Pro.le Output option only ACHAnge Air Change Rate MEANage Mean Age of Air ENERgy Energy Default Unit Cm(kg/s@1Pa) 
kg/s Pa 
C g/kg kg/s kg/s kg/kg 
m/s 
m3/s alpha 
1/h h KWh Other possibilities kg/h@1Pa, kg/s@10Pa, kg/h@10Pa, dm3/s@1Pa, m3/s@1Pa, m3/h@1Pa, dm3/s@10Pa, m3/s@10Pa, m3/h@10Pa, ELA4, ELA10 g/s, g/h, kg/h, m3/s, dm3/s, dm3/h, m3/h mmH2O, mmHg, inH2O, inHg, hPa, kPa option -OSR to each unit K,F, Ra,Re kg/kg, mass%, %rh g/s, g/h, kg/h, mg/s, ug/s a,olf b g/s, g/h, kg/h, mg/s, ug/s a,olf b g/kg, mg/kg, ug/kg, m3/kg, dm3/kg, ml/kg, ul/kg, mass%, ppm, ppb, part (any rational combination of g, kg, mg, ug, m3, dm3, ml, and ul are possible, 
e.g. mg/g, dm3/mg) a, decipol b cm/s, kt, ft/min, km/h, mile/h 
g/s, g/h, kg/s, kg/h, dm3/s, m3/h, dm3/h alpha, z0 
1/s s J 
a 
umeans µ 
b units for the special pollutant named ODOUR 

NOTE: 	In the headers all quantities are given with the corresponding unit identi.ers to indicate the used input units. For quantities which have only one valid unit, the prescribed unit is given explicitly in the corresponding header. For example, input values for barometric pressure always have to be in kPa. There is also no choice for length input. Depending on the quantity, the unit is always m or mm. 
NOTE: 	There is a option ‘-OSR’ which may be appended to the pressure unit (see example). With this option, the outside stack pressure is taken as pressure reference. For further details, see notes on pressure reference on page 33. 
NOTE: 	Di.erent units for source, sink and concentration may be de.ned for each pollutant. This is done by entering multiple lines for sour, sink and conc as shown in example 2. As only four characters of the name are used to identify the physical quantity, the name may be longer e.g. to indicate for which pollutant the unit is used. The .rst unit de.nition will be used for pollutant number 1, the second for pollutant number 2 and so on. If more than one pollutant unit is entered, but fewer than the number of pollutants de.ned, then the last line will be used for the unit conversion for the remaining pollutants. If only one line is entered, the same units will be used for all pollutants (so COMIS 3.1 is backwardly compatible with older CIF-.les). 
NOTE: The units ‘olf’ for source strength and ‘decipol’ for concentration must be used for the pollutant ‘ODOUR’. They must be de.ned for input and output. They must not be used for other pollutants. 
4.1 Project Description 
&-PR-SIMU lation (Project Simulation Options) 
&-PR-SIMUlation options 
| Simulation Option Keywords: One keyword per line | | Keywords may be preceded by NO | |____________________________________________________________| | VENTilation CHECKCondensation | | 2VENT INPUT | | POLutants <no> DEFAULT <no> | | POLSTEP <step> [<time> <step2>] SET | | UNIT | | ECHOSCHedule | | ONSCREEN [time|progress | | SCHEDtime <time> |niter|pol<n>| error]| | HISTOtime <time> STEADY | | STARTtime <time> [CONT|REUSE] DEBUG <no> | | STOPtime <time> [KEEP] LOOPRHO | |____________________________________________________________| 
Example 	VENTilation POLlut 2 DEFAULT 1 POLSTEP 60 7200 600 STOPtime 1988jun01_11:00 keep 
Each keyword may be preceded by the word ‘NO’ thus canceling the keyword. Only one keyword per input line is allowed. Keywords may be given in any order. 
It is possible to have a start time, which is equal to the stop time. That means only one time-step is performed. It is not allowed to have a stop time earlier than the start time. If no times are given, the program will search the meteo schedule (see &-SCH-METeo section) for a time span. This will only work correctly, if the full time description (see section 3.3) is being used. Therefore, start and stop time of the simulation should be de.ned under the keyword &-PR-SIMU options. 
All schedules will be searched for the event at or before simulation start time. If no value is found, default values will be taken for the .rst time step. 
A third keyword handled by the time management system (TMS) is the keyword SCHED, which speci.es the time the program starts to read and process the schedules. The schedule time may be di.erent from the start time to allow some .xed pre-conditioning and delay the normal operation of the schedules, and is equal to the start time as a default. The SCHED keyword can be important, e.g., if one wants to split a run over one year into 4 runs simulating three months each. If one wants that the second run starts with the same conditions the .rst run ends, a schedule time equal to the start time of the .rst run can be speci.ed. 
In order to save some time the TMS .le (see COMIS .le structure on page 22) of the last run can be reused again. This saves time that would be necessary for creating and sorting the schedule data. 
If one wants to keep the TMS .le of the current simulation run for later use, the KEEP option must be used at the end of the stop time de.nition. 
To tell the program that the TMS .le from a former program run shall be used the CONT keyword or the REUSE keyword must be speci.ed behind the start time. In case the CONT keyword is used, the start time of the following run must be the same as the stop time of the preceding run for which the TMS .le was created and kept for later use . If the REUSE keyword is used, the whole TMS .le from the last run is used again. This option must be used carefully. It does not work if a line in the input .le or in a schedule .le has been inserted or deleted. Furthermore, start and stop time have to be the same as in the previous run. The values of schedule-data or other input values, however, can change as well as the weather .le. 
The keyword POLSTEP forces pollutant transport solving with prede.ned time steps, independent of scheduled events. In the example given above, the pollutant transport is evaluated every minute (<step>= 60), but 2 hours after starttime, (<time>= 7200) the time step is switched to 10 minutes (<step2 >= 600) 
It is suggested to force recalculation of the zone air density during iteration by setting the keyword LOOPRHO. 
4.1 Project Description 
Description: 
Parameter Descriptiona 

VENTilation 2VENT POLlutants [<No>] 
POLSTEP <step> [<time> <step2>] 
CHECKCondensation 
INPUT DEFAULTs[<No>] 
SET UNIT 
ECHOSCHedule 
ONSCREEN [TIME | | PROGRESS | NITER | | POL<No> | ERROR] 
STEADY 
DEBUG <no> 

LOOPRHO 
SCHEDtime <time> 

HISTOtime <time> 

STARTtime 
<time> [CONT | REUSE] 

STOPtime <time> [KEEP] 

Calculation with COMIS, ventilation results written to COF-.le (concise format) Calculation with COMIS, ventilation results written to COF-.le (detailed format) pollutant routines are called; if a No is speci.ed, only pollutants up to number <No> (de.ned under &-POL-DES) are active; if no number is speci.ed, the maximum number of pollutants (5) is made active <step> is the timestep (in seconds) for pollutant calculations until <time> (in seconds), then <step2> (in seconds) is used as pollutant calculation timestep for remainder of simulation Warns if condensation occurs (i.e. if air relative humidity reaches 100%; does not evaluate condensation due to low surface temperatures) Input (CIF-) .le is copied to COF-.le Lack of data and d[e[f[a[u[l[t]]]]]] values are speci.ed in COF-.le; provides three levels (<No> = 1..3): 1=Echo all defaults (Default option) 2=Echo only defaults used whenever “d[e[f[a[u[l[t]]]]]]” appears in the CIF-.le 3= Echo only defaults used whenever there is no more data at the end of input lines SET-.le is copied to COF-.le Implemented keywords are summarized in COF-.le (be aware that this list has not been updated!) Echo all changes in schedules in COF-.le Output of scheduled time or simulation progress, number of iterations, concen­tration of pollutant No, or convergence error in mass .ow in the bottom line of the screen. If too much output is written to the screen, this bottom line output is disturbed. In this case the QuickWin application executable comis32QW.exe can be used instead of the normal console application executable comis32.exe. The comis32QW.exe opens a separate window just for the ONSCREEN output. Calculate steady state concentrations for all time steps Echo the temporary time management .les to COF-.le; <no> =1 echo COMIS.DAF; <no> = 2 echo COMIS.DAF; <no> = 3 echo COMIS.DAF and COMIS.TMS Recalculate air density in zones during the network pressure iteration loop Start time of processing the schedules <time> is the date and time in date 
time string format (see section 3, page 30) Start time of processing data for histograms (if not given, simulation period is assumed) <time> is the date and time in date 
time string format (see section 3, page 30) Start time of simulation <time> is the date and time in date 
time string format (see section 3, page 30) CONT after the start time means an old TMS-.le has been kept and shall be reused, with the start time of the new run equal to the stop time of the previous run. REUSE stands for using the whole TMS-.le of the last run again, with the same start and stop time and unchanged length of the input .le(s). End time of simulation <time> is the date and time in date 
time string format (see section 3, page 30) KEEP after the stop time means that the TMS-.le shall be kept after the simulation is completed. 
”1900” is used if the year is missing and ”1900jan01” if the date is missing in the date time string for <time>. ”1900jan01 00:00:00” is used if no date time string or “d[e[f[a[u[l[t]]]]]]” is speci.ed. 



a 
for the meaning of the .le names, please refer to section 2.4 
&-PR-OUTP ut (Project Output Options) 
&-PR-OUTPut options 
| Output Options Keywords: One keyword per line | |--------------------------------------------------------------------------| | Format: | | Keyword-mode [name[,name][,name-name][,...]] | | Keyword-mode [name[,name][,name-name][,...]] | | mode: S : Storing each value in *.COS file | | T : mean value of Total simulation period in *.COF | | Hn: Histogram of Histo-period in *.COH | | name: corresponding to the keyword, name is a zone, a link or | | an external node name | |--------------------------------------------------------------------------| | Keyword Parameter | Keyword Parameter | Keyword Parameter | |--------------------------------------------------------------------------| | per Zone | per Link | Ambient conditions | | FZ Flow rate | FL Flow | WA Wind velocity | | PZ Pressure | TL Temperature | TA Temperature | | TZ Temperature | VL actual Value | HA Humidity | | HZ Humidity | PL Pressure | | | IZ Infiltration | DL Discharge |------------------------| | AZ outdoor Air | coefficient | per Building | | change rate |------------------------| FB Flow matrix | | MZ Mean age | per External node | FW Flow matrix W | | EZ air change | PE Pressure | IB Infiltration | | index |------------------------| AB outdoor Air | | On number of | | change rate | | occupants | | MB arithmetic | | Yn activity factor| | Mean age | | of occ type n | | RB disparity | | | | ofmeanage | | per Zone and |------------------------| NB Nominal time | | Contaminant | Examples: | constant | | Cn concentration | FZ-S zn1,zn2-zn7,zn10 | EB air change | | Sn sink | FL-T li1,>li3,<li3 | Efficiency | | Qn source | > := flow From --> To | LB ventilation | | Fn eff flow | < := flow From <--To | heatloss | |________________________|________________________|________________________| 
Example 	PZ-S 1-3,38,100-115,200 PZ-H2 1-3 PZ-T 1-5,4-7,6-10,10,38,100,101 PZ-T 200 FL-S >L01, <L01, >L12, <L12 TZ-S z1-z20 TZ-T zon3-zon5,kit,liv TZ-H2 zon3-zon5,kit,liv TA-S C1-T 1,2,3 C1-H1 1,2,3 C1-H1 occ1, occ2, occ3 
4.1 Project Description 
The general syntax of the output de.nition is keyword-mode namelist Keywords are used for creating output .les (COS-and COH-.les) that may later be used by a  
Description: Parameter  Description  

keywords with namelist FZ PZ TZ HZ IZ AZ MZ EZ On Yn Cn Sn Qn Fn FL 
TL VL PL DL 
PE keywords without namelist WA TA HA FB FW IB AB MB RB 
NB EB LB modes -S -T -Hn 
Flow per Zone Pressure per Zone air Temperature per Zone Humidity per Zone outdoor air In.ltration per Zone outdoor Air change rate per Zone room Mean age of air per Zone room air change index per Zone number of Occupant type n per zone, 1 = n = 5 ActivitY level factor of occupant type n per zone, 1 = n = 5 Concentration of contaminanta n perzoneorexternal node, 1 = n = 5 pollutant Sink of contaminanta n per zone, 1 = n = 5 pollutant source strength of contaminanta n per zone, 1 = n = 5 e.ective Flow calculated with .ctive source n per zone, 1 = n = 5 mass Flow per Link; link name only: net .ow rate, < before link name: .ow ‘To to From’, > before link name: .ow ‘From to To’. Temperature per Link “actual Value” per Link in accordance with the respective link schedule Pressure per Link Discharge coe.cient (Cd) per Link if it is a large opening (otherwise the output is zero) wind Pressure per External node 
Wind velocity (Ambient) outdoor air Temperature (Ambient) outdoor Humidity (Ambient) Flow matrix for the Building Flow matrix for the building including external nodes (Wind nodes) outdoor air In.ltration for the Building outdoor Air change rate for the Building arithmetic Mean of Building mean age of air Root mean square (RMS) disparity of zones mean age of air with respect to Building mean age of air Nominal time constant of Building mean age of air air Change E.ciency of Building ventilation heat Loss energy of Building 
Output to COS-.le for each timestep Output of mean values for simulation period to COF-.le Output of histograms for histogram period to COH-.le 
a 
‘Contaminant’ and ‘pollutant’ are used synonymously 
spreadsheet program, and for summary output to the COF-.le. They consist of two letters or one letter and one digit. The .rst character denotes the physical quantity. The second describes the component for which the quantity is to be output. If a digit is required, the component is a pollutant or an occupant type in a zone. The range is n =1 ...5, as up to .ve pollutants or occupants may be de.ned (see sections 4.6 on page 125 and 4.7 on page 127). 
A keyword is followed by a mode indicator. In mode ‘-S’ actual values of the timestep are stored 
(i.e. sent to the COS-.le). Mode ‘-Hn’ produces a histogram of type n for the histogram period (default: simulation period) in the COH-.le. Histogram types are de.ned with a separate keyword &-HISTO, see page 61. The .le names are composed of the keyword and the root name de.ned in the progamm call or the set-.le (see section 2.4, page 23), and the extension is .COS in ‘-S’ mode or .COH in ‘-Hn’ mode, respectively. In ‘-Hn’, n is the type number of the histogram to be used. It must be de.ned under section &-HISTO. Mode ‘-T’ produces a table of mean values for the whole simulation period in the COF-.le. 
NOTE 	The ‘-Hn’ option works only if the element covered by the keyword allows a further speci.cation, 
i.e. for zones, links and external nodes (such as the list of zones in PZ-H2 1-3, i.e. ‘Store Pressure for Zones 1 to 3’). 
A namelist must follow the keywords for zones and links. Building and ambient output per de.nition have only one element, therefore no namelist speci.cation is necessary. A namelist consists of single element names or ranges of element names, separated by commas or spaces. Ranges are two element names separated by a dash, e.g. zon3-zon5. In this example it is assumed that zon3 is de.ned before zon5 under &-NET-ZONes (see page 94). Then output will be produced for all zones from zon3 to zon5 in the list of zone de.nitions. 
For example, PZ-S 1-3 would output the zone pressure for zones 1 to 3, and TA-S would output the ambient temperature. Note that the de.nition of ‘Ambient Temperature’ (‘TA’) does not have any parameters, since there is only one element ‘outdoor conditions’. 
Occupant type names de.ned under &-SCH-OCCpant may appear in the place of a zone name, if (and only if) the mode ‘-Hn’ is chosen for a zone output. If an occupant type is speci.ed instead of a zone name, the histogram is established by evaluating the quantity denoted by the keyword in all zones where that occupant type resides. The frequency distribution is weighted by the number of occupants present in the respective zones. For the use of histograms see details on COMIS histograms on page 40) and an example for occupant-weighted frequency distributions on page 135). 
NOTE 	However, ranges of occupant type names are not allowed. If output for occupant types 1 to 3 is desired, use e.g. C1-H1 occ1, occ2, occ3. 
NOTE 	For the output keyword ‘Cn’, names of external nodes may be given. Thus ambient pollution concentration can be output. If the same name is used for a zone and an external node, the zone concentration is output. 
NOTE 	The FL-... option, mass .ow per link, normally gives the net .ow rate. To get the .ow separately for each direction, put a ‘<’ in front of the link name for .ow ‘To to From’, and a ‘>’in front of the link name for .ow ‘From to To’. 
NOTE 	The .ow matrix with the mean values is written to the COS-.le and not into the COF-.le. There­fore, to get the .ow matrix with mean values, the FB-S option has to be speci.ed in addition to FB-T. 
The de.nition of temperature output with TZ-S z1-z20 as given in the example means that the values for zones z1 to z20 are stored in the .le <name>-TZ.COS.The TZ-T ... makes COMIS write the mean values in the COF-.le. The speci.cation C1-S 1,2,3 as given in the example means “create output in a COS-.le for concentration of gas number 1 in zones 1, 2 and 3”. 
NOTE 	The de.nitions of the output produced by the building output options, keywords xB and FW,are described in more detail in [9]. 
4.1 Project Description 
&-PR-CONT rol (Project Control Parameters) 
&-PR-CONTrol parameters 
|1.|Under| T oler ance s |Start |LinkFlow | |__| Relax-|____________________________________|Number |Pressure | | ation | absolute | Relative | |of Ite-|Laminar Flow| | Factor| EpsFA | EpsFR | EpsCJ |rations|DifLim | | [-] | [flow] | [-] | [flow] | [-] | [pres] | |__________|___________|__________|_____________|_______|____________| 
|2.| Pressure | Pressure | Max | Solver selector (OPTIONAL)| |__| initialization | initialization | Iterations | | | frst time step | later time steps| allowed | | | | | | 1=Newton (with given Relax)| | 0=zero Pressure | 0=zero Pressure | | 3=Walton Steffensen | | 1=linear system | 1=linear system | | 5=Walton 2 fixed relax.fact| | | 2=previous value| | 6=trust region line search | | stp1Init | stp2Init | Miter | slvSel | | [-] | [-] | [-] |[-] | |___________________|_________________|____________|____________________________| 
Example 	1 1.E-6 1.E-4 d 1 1.0E-4 1 2 50 6 
Link .ows are approximated by a linear function at pressures smaller than DifLim. This is e.ective to avoid problems with large openings. 
Values mean the same thing for both initialization parameters in data block 2. While stp1Init applies to the .rst time step of the simulation, stp2Init applies to all subsequent time steps. 
The meaning of the values is: 
0: 	Zero pressures, accounting only for hydrostatic variations, before starting solution at the in­dicated time step. Initial zone densities are based on zero pressures. 
1: 	Find initial pressures by solving a semi-linearized version of the system (“semi-” because not all .ow elements de.ne a linearized model). The solver takes one step on the semi-linearized system. It does not attempt to solve the mix of linearized and nonlinearized models. Initial zone densities are based on zero pressures. 
2: 	Take pressures calculated at previous step as initial guess for pressures at this step. Initial zone densities are based on the pressures found at the last step. 
By default, the zone density remains unchanged throughout the solution at each time step. To make the solver update zone densities as it updates zone pressures, add the line LOOPRHO to the &-PR-SIMUlation options section (see page 52). 
The fourth parameter in data block 2, can take the values slvSel = 1,3,5,and 6. Solver 6 (default) should be slightly more reliable than solver 5. In some cases it will take fewer iterations at each time step, and in other cases it will require more iterations. A description of solver 6 and a report on tests with solver 5 and 6 can be found in reference [23]. 
In all cases, solver 6 should converge whenever solver 5 can converge, and it should also converge in many cases that caused solver 5 to fail (when using duct T-junctions, all bets are o.). When using slvSel = 5, you should probably set stp1Init=0 in order to minimize the number of iterations taken at the .rst time step. On the other hand, slvSel=6 works better with stp1Init=1. Both solvers should take many fewer iterations at subsequent iterations when using stp2Init=2, as opposed to 0 or 1. When using solver 6, the underrelaxation control parameter (.rst parameter of data block 1) has no e.ect. 
Recommended parameter values for solvers number 5 and 6 are summarized in the following table: 
slvSel 
underrelaxation factor stp1Init stp2Init 

5 
0.5 ...1.0 0 2 
6 
no e.ect 	1 2 
Description: 
Parameter Description Default value Input format, range 

Under Relaxation Newton pressure corrections are multiplied 1.0 Factor with this factor if pure Newton iteration steps 
are used; practical range Relax=0.5, . . . , 1.0 Tolerances 
Stop criteria for iteration 

Absolute EpsFA Absolute tolerance for mass .ow balance per .ow Relative EpsFR Relative tolerance for mass .ow balance per .ow (100% is total .ow through the zone) EpsCJ Tolerance for CORR*JAC(i,i), 
i.e. the Newton pressure correction multiplied 
with the derivative d ((flow)) /dpz.This 
link
is an estimation of the error in the sum of the 
.ow per zone. Start Number of The number of pure Newton iteration steps Iterations before switching over to optimum relaxation Link Flow Pres-Link .ows are approximated by a linear func­sures Laminar tion at pressures smaller than DifLim. Flow DifLim 
1.0E-6 kg/s 1.0E-4 0.2*EpsFA 
1 1.0E-4 Pa 
Pressure Initializa­tion frst time step 
Pressure Initial­ization later time steps 
Pressure initialization in the .rst time step of 1 the simulation stp1Init=0: Zero pressures before starting solution; initial zone densities are based on zero pressures stp1Init=1: Find initial pressures by solving a semi-linearized version of the system. 
Pressure initialization for all but the .rst time 2 step of the simulation stp2Init=0,1: see stp1Init=0,1 stp2Init=2: Take pressures calculated at previous step as initial guess for pressures at this step: initial zone densities are based on the pressures found at the last step 
Max Iterations al-	If a solution is not found before the given num-50 
lowed 	ber of allowed iteration steps, the program breaks and reports that the output for this time step may be wrong 
Solver selector 	1 = Newton (with given Relaxation) 6 
(OPTIONAL) 	3 = Walton Ste.ensen 5 = Walton 2 .xed relaxation factor 6 = trust region line search 
Integer 0 ...1 
Integer 0 ...2 
Integer 
Integer 1,3, 5,6 
4.1 Project Description 
Solver 5: Walton 2 .xed relaxation factor 
The solver .rst starts with a number of pure Newton iterations using the under-relaxation factor (data block 1 data 1). The start number of iterations is given as user input under &-PR-CONT data block 1 data 5. Useful values are 2 or 1. 
After those iterations the Walton solver5 is used. It makes use of the air .ow rate and the derivative d/dP of the .ow per air .ow component. This is a very simple solver that only switches the relaxation factor, depending on the convergence, but the performance is very good. 
convergence  relaxation factor  
=0.3  1.0  
0.3to0.7  0.75  
> 0.7  0.5  

5 The Solver has been developed by George Walton of NIST for the AIRNET program 
&-HISTO gram (Histogram De.nition) 
&-HISTO 
| Histogram | Number of | Lowest Class| Highest Class| 
| | Classes | | | 
|(-) |(-)|(?) | (?) | 
|___________|___________|_____________|______________| 

Example 	3 10 0.0 1 1 21 0.0 10.E-3 2 6 -50.0 50.0 
&-HISTO de.nes histograms to be used in &-PR-OUTPut section. Histograms are identi.ed by a unique number. This number n is used to specify the histogram type in the output mode ‘-Hn’ under &-PR-OUTPut. Each histogram is described by a number of classes nc and the center values of the lowest and the highest class, cl and ch. 
Therefore, the class width is given by 
ch - cl
.c= 
nc - 1 
and the range covered by the histogram is 

11 
cl - .c ... ch +.c
22 
In paragraph Histograms on page 40 it is explained how COMIS histograms are established. 
The units for lowest and highest class depend on the elements which will be output using the histogram type in question. So the lowest and highest class must be given in the actual output User Units. If User Units have been declared before this keyword section, the ranges have be to input in these units. Histogram Types can be used for more than one output variable that can have individual conversion factors: in the output example on page 55 H2 is used for PZ but also for TZ. The conversion factors are listed in the histogram summary. 
In the example “Factory” on page 135 the histogram summary is explained in more detail. 
NOTE 	If concentrations are used in the histogram, then this section must come after the section 
&-POL-DEScription ! 

Description:  
Parameters  Description  
Histogram  Unique histogram number  
Number of Classes  Number of Classes  
Lowest Class  Center of lowest Class  
Highest Class  Center of highest Class  

Default value 1 
100 
0.0 
100.0 
Input format, range 
Integer between 1 .. 20 Integer Real Real 
4.2 Network Description 
4.2 Network Description 
&-CR (Crack) 
&-CR CRACK 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| Cs |Exp n | Length | Wall Properties | |__| | | |Thickness| U-value | | (airl) | (-) | [m] | [m] | [W/m2/K]| |____________|________|_________|_________|_________| 
|3.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example *CR1 Window_cracks 
0.01 0.667 
0.0 
*CR2 Door_cracks 

0.03 0.60 
0.0 
*CR3 Wall_crack 

0.005 0.85 
0.0 0.5 0.9 
*CR4 Crack Example 

0.003 0.667 
0.0 0.3 0.7 
The mass .ow coe.cient Cm used in the simulation is calculated with Cs and the length l of the crack from above (data block 2, column 1 and 3), and the actual value a in &-NET-LINks, column 8 (see page 102). 
a 
Cm = · Cs 
l 
Description: 
Parameters Description Default value Input format, range 
Pre.x and Name unique identi.er ‘’ 15 character string, starting with *CR Description description of component ‘’ string 
Cs Air mass .ow coe.cient Exp n Air .ow exponent Length Crack length in wall plane Wall Properties 
Thickness Thickness of the wall U-Value Heat transfer coe.cient Filter 1 ...Filter 5 Filter e.ect; capability to hold back pollutants 1 ...5 
0.001 
kg/s@1 Pa 

1. 


0.65 
0.0 
0.3 
0.0 
Real 
0.5 ...1.0 Real 
Real Real Real 0.0 ...1.0 
The default value for the length is l =1. 
NOTE 	The length of the crack given here and the actual value for the crack length for a certain link in &-NET-LINks, column 8 must be chosen so that the desired value for Cm is obtained. If no temperature correction has to be calculated, it is perfectly satisfactory to give a “length” of 1.0 for a crack that is in fact 100 m and an actual value of 1.0, for this leads to 
Cm = Cs 
In a building with only slightly di.erent leakages in the various facades or windows, giving values of 1.1, 0.95, 1.3, and so on for the actual value can provide a very realistic simulation while only one (average or normalized) crack has to be de.ned in the section &-CR. 
A temperature correction factor can be calculated to take into account the di.erence of the actual air temperature and the temperature at which the crack parameters were measured (the latter temperature is given in &-NORMCR, see page 64). This correction factor ranges from 0.9 to 1.15 additionally depending on the air .ow exponent n. With air .ow exponent n=0.65 it is almost constant=1. (see [14], section 2.2.1.2.6.4 “Walls”) This temperature correction will only be initiated if the last two parameters of the second data block, the thickness and the U-value of the wall are entered. Together with the crack length they are used to determine the actual air temperature in the crack. Therefore, real crack lengths must be given if temperature corrections shall be calculated. 
The values given for .lters .lter1 . . . .lter 5 represent the .lter e.ect, i.e. the capability to hold back pollutants; it is expressed as the fraction of the pollutant that will not pass through the link. .lter1 = 0.3 means 30% of the .rst pollutant de.ned in &-POL-DEScription disappear in the link, 70% go through. 
NOTE 	At least one .lter value must appear for each crack. 
The most reliable values for air mass .ow coe.cients and exponents are derived from building airtightness data from blower-door tests. The best general source for air mass .ow coe.cients and exponents is the AIVC’s numerical database. A useful summary of the database is given in Technical Note 44 [1]. 
4.2 Network Description 
&-NORMCR (Standard condition for crack data) 
&-NORM-CR Standard temperature for crack data |Standard Temperature| Standard Barometric Pressure | Standard Humidity | 
| for  the Crack  Data |  for  the Crack  Data  |  for  Crack  Data  |  
|  (default 20  C)  |  (default 101.325 kPa)  | (def ault 0  g/kg)  |  
|  [temp]  |  [kPa]  |  [humi]  |  

|____________________|______________________________|___________________| 
Example 18 101.320 5 
This data section is used only for the optional crack temperature correction calculation (see keyword &-CR on page 62). 
The conditions must either re.ect the situation during the measurement of the provided crack data or the conditions to which the data has been normalized. 
Compared to the default temperature, a lower normalized value will provide lower mass .ow rates in the network. 
Description: 
Parameters Description Default value Input format, range 

Standard Temper­ature for the Crack Data Standard Baro­metric Pressure for the Crack Data Standard Humid­ity for Crack Data Standard Temperature for the Crack Data 
Standard Barometric Pressure for the Crack Data Standard Humidity for Crack Data 20oC 
101.325 kPa 0 g/kg 
Real Real > 0 Real > 0 
&-FA (Fan) 
&-FA FAN # line1= Fan name.... #line2=flag.... #line3=Pminimum.... #line4=CO # line5 up to maybe line8=data pairs # the last line is always the filter line 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.|# Flag: 1,2 = Polynomial C0,..C5, input provided by user | |__| 3 = Interpolation calculated by COMIS | | from data pairs | | ____________________________________________________________| | Flag|Exp Polynom.|RhoI | NfI | Cs | Exp n | | (-) | (-) |(kg/m3) | [rpm] | [airl] | [-] | |_____|____________|________|________|_______________|________| 
|3.| Pmin | Pmax | Slope | Intercept | 
|__| (pres)| (pres) |(cflo/pres)| (cflo) | 
|__________|__________|___________|___________| 

|4.|C0|C1 |C2 |C3 |C4 |C5 | |__|(cflo) | [cflo/ | [cflo / | [cflo/ | [cflo/ | [cflo/ | | | pres] | pres^2] | pres^3] | pres^4] | pres^5] | |__________|___________|___________|___________|___________|___________| 
|5.| Fan Curve: Pressure Rise vs. FlowRate, maximum 4 Lines | |__| Data Pairs: minimum 3 Pairs, maximum 12 Pairs | | (pres) | (cflo) | (pres) | (cflo) | (pres) | (cflo) | |__________|___________|__________|___________|__________|___________| 
|9.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| 

Example *FA1 Bathroom Exhaust Fan (Data pairs) 
3 	2 1.1 1400 0.1 0.6 dd d d d 
1040 20 35 3030 4020 50 10 
0.0 
or 
*FA-EX3 (Coefficients are given to describe fan-curve) 
1 3 1.2 1 0.00001 0.5 

0 57.8 -0.73 42 
42 -0.11 -0.01 -0.8E-7 



0.0 
NOTE Pressure di.erence in fan data is de.ned in opposite direction than in all other air .ow components: 
Fan: 	.p = pTo - pFrom 
other Air.ow components: .p = pFrom - pTo 
In consequence, the fan “blows” in direction of positive .ow. 
4.2 Network Description 
To determine the fan characteristic, COMIS uses either polynomial coe.cients input in data block 
.
4(Flag 1and 2, forhistorical reasons, ¨) or interpolates data pairs given under data block 5 
(Flag 3). For the capabibility of an interface to supply polynomial coe.cients, please refer to the respective user guides! 
If the .ag is set to 1 or 2, COMIS uses data from column 2 under data block 2, from data block 3 and from data block 4. If the order of the polynomial is n,thencoe.cients C0, through Cn must be given. According to the second example, the fan performance is calculated as follows 
3
Q =42 - 0.11.p - 0.01.p 2 - 0.810-7.p 
The validity of the polynomial is limited to the range [Pmin, Pmax]. Beyond this range, a linear ap-
Description: 
Parameters 	Description Default value Input format, range 
Pre.x and Name unique identi.er ‘’ 10 character string, starting with *FA Description description of component ‘’ string 
Flag 	Choice of input 
Exp Polynom 	Order of the polynomial used to describe fan curve; used with .ag 1 or 2 
RhoI 	Air density at fan inlet (test condition) 
NfI 	Revolution per minute, fan speed used to de­termine fan curve; see text! 
Cs 	Flow coe.cient if fan is o. 
Exp n 	Flow exponent if fan is o. 1 5 
1.2 
1.0 
0.005 kg/s@1 Pa 
0.65 
Integer 1, 2 or 3 Real = 5 
Real Real 
Real Real 
used if .ag 1 or 2 is set in column 1 of data block 2 
Pmin  lowest pressure point for polynomial  
Pmax  highest pressure point for polynomial  
Slope  slope of the linear extrapolation for polyno­ 
mial  
Intercept  intercept between the linear extrapolation and  
the .ow axis  

0.0 Pa 
200.0 Pa -0.0005 m3/s/Pa 
0.1 m3/s/Pa 
Real Real Real 
Real proximation is used to ensure that the network solver will .nd a valid solution and not become stuck outside the correctly approximated curve. The slope and intercept have to be calculated outside of COMIS. They are determined by the demand that the polynomial and the linear approximation have equal .ows at Pmin and Pmax, respectively (see .gure 4.1). 
used if .ag 1 or 2 is set in column 1 of data block 2  
C0 ..C5  Coe.cients for polynomial  0.0 m3/s,  Real  
0.0 m3/s/Pa,  
0.0 m3/s/Pa2 ,  
0.0 m3/s/Pa3 ,  
0.0 m3/s/Pa4 ,  
0.0 m3/s/Pa5  

used if .ag 3 is set in column 1 of data block 2; may be omitted with .ag 1 or 2  
Pressure  Pressure Value  0.0 Pa  Real  
Flow rate  Flow rate Value  0.0 m3/s  Real  

last line in data set  
Filter 1 ...Filter 5  .lter e.ect; capability to hold back pollutants  0.0  Real 0.0 ...1.0  
1 ...5  


The pressure range [Pmin, Pmax] will normally run from 0 Pa up to the pressure where the .ow through the fan is zero, as seen from the polynomial. However if the fan characteristic is known for reversed .ow (which is unusual for fans) or in the quadrant of reversed pressure (another fan in series over-blows this fan so that it forms a resistance rather than a pump) then the polynomial canbe usedfor the whole range. 
NOTE 	As polynomial fan approximations tend to oscillate, it is recommended to check the polynomial coe.cients (Flag 1 and 2) very carefully (with a graph of the polynomial), or to use data pair input (Flag 3) . 
If the .ag in data block 2 is set to ‘3’, COMIS expects data pairs in line 5 up to the next to last line of a data set. Between the data pairs, a spline interpolation is used to suppress oscillating. The Catmull-Rom spline [5] used here has the property that its curve will pass through the control points it uses. Further, for a point Pi on the curve, the tangent vector at Pi is parallel to the line connecting points Pi-1 and Pi+1. Data lines for data blocks 3 and 4 must be given, but the data are not used (see .rst example). 
The fan speed NfI for which the given characteristic is valid, can be input as absolute value in rpm. In this case also the actual fan speed (&-NET-LINks section column 8) has to be input in rpm. The other possibility is to normalize the fan speed and set NfI=1, then under &-NET-LINks the ratio of actual and test fan speed has to be input. 
If the fan is o. (actual fan speed is less than 1% of the test fan speed NfI), the fan will be simulated with a bypass aperture of Cs and Exp n given in FA data block 2 column 5 and 6. 
NOTE 	It should be noticed that in all input data of air .ow components the .ow is de.ned as a function of the pressure di.erence. This is opposite to the de.nition in data sheets for fans, where pressure di.erence is a function of the .ow. As a consequence it is impossible to input fan curves with a local minimum of p = f(.ow) (contra.exure, right part of “Real fan characteristic” in .gure 4.1). 
NOTE 	Care has to be taken if data pair input (Flag 3) is used: a missing .lter data block is not recognized because the last line is always interpreted as .lter data. Subsequently, no error message can be issued. 
4.2 Network Description 
&-DS (Straight Duct) 
&-DS duct straight # a duct fitting given here will result in an extra dynamic pressure # loss, Zeta 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| Ducts straight part | one Fitting | | |__|______________________________________________|______________________|________| | Diam1 | Diam2 | Rough | Lduct | Zeta1 | Type |Param1 |Param2 | Zeta2 | | (m) | (m) | (mm) | (m) | [-] |[-] |[?] |[?] | [-] | |_________|_________|_________|_________|_________|______|_______|_______|________| 
|3.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example *DS-1 Round duct /w diffusor 
0.3 0.0 0.03 12 1.2 7 0.5 30 2.8 
0.0 
or 
*DS-1 Rectangular duct 
0.3 0.3 0.03 12 1.2 def def def 2.8 
0.0 
The duct is characterized by the values of the duct diameters Diam1 and Diam2. If both are non­zero, a duct with a rectangular cross section is assumed. If only Diam1 is non-zero and Diam2 is 0.0, a round duct with a diameter of Diam1 is assumed. The wall roughness is given in mm. The length of the duct, Lduct, must be the real length. Zeta1 and Zeta2 represent known dynamic pressure loss coe.cients for positive and reverse .ow direction respectively. They will be multiplied with 
Description: 
Parameters Description Default value Input format, range 
Pre.x and Name  unique identi.er  
Description  description of component  
Diam1  Width of duct or diameter  
Diam2  Height of duct  
Rough  Roughness of duct (unit is [mm]!)  
Lduct  Length of straight duct  
Zeta1  Dynamic loss coe.cient of duct for positive  
.ow direction ’FROM’ . ’TO’  
Type  Type of .tting  
Param1, Param2  See .gures 4.2  
Zeta2  Dynamic loss coe.cient of duct for  reverse  
.ow direction ’FROM’ . ’TO’  
Filter 1 ...Filter 5  .lter e.ect; capability to hold back pollutants  
1 ...5  

‘’ 
‘’ 
0.1 
0.0 
0.1 
10.0 
0.0 
0 0.0, 0.0 Zeta1 
0.0 
10 character string, starting with *DS string 
Real Real Real Real Real 0.0 ...1.0 
1 ...11, 13 See table on page 69 Real 0.0 ...1.0 
Real 0.0 ...1.0 
the ’Actual Value’ given under &-NET-LINks (see page 102). 
Fittings are not available as separate components. However, one .tting can be directly attached to the duct using the optional parameters Type, Param1,and Param2. The program calculates the dynamic loss coe.cient Zetaf for this .tting according to the given parameters and the actual .ow direction. The total pressure loss coe.cient of the duct is then: 
For .ow in positive direction: 
Zeta = Zeta1 · ActualV alue + Zetaf 
for .ow in reverse direction: 
Zeta = Zeta2 · ActualV alue + Zetaf 
Available .ttings are shown in .gure 4.2. Their parameters are described in the table on page 69. 
Type  Name  
1  Entry  
2  Entry with screen  
3  Hood  
Type 1: round  
Type 2: rectangular  
4  Exit  
5  Exit with screen  
6  Elbow round  
7  Di.user round  
8  Contraction round  
9  Obstruction Screen  
10  Perforated plate  
11  Ori.ce Aa  
12  DIN ori.ceb  
13  Damper round  

No of 
Param 2 1 2 
0 1 1 2 2 1 2 
1 
1 
Parameter Description 
Parameter 1 
t/Dh screen% Type 
-screen% r/D A1/A2 A2/A1 screen% T/d 
A1/A2 
ßd 
Parameter 2 
L/Dh 
-angle 
---
ß ß 
-screen%/100 
-
-Validity, range 
no limits screen% < 100%, L =0 no limits 
-screen% < 100% 0 <r/D < 5 A1/A2 < 1, ß< 180o A2/A1 < 1, 15o <ß< 45o screen% < 100% 
0.015 <T/d < 0.8 
0.0 < screen%/100 < 1.0 A1/A2 < 1 
ßd < 75o 
a 
Routine according to Feustel [12] b This duct .tting is not available 
Quantity 
t 
L 
D 
Dh 

H; W 
r 
Ai 
ß 
ßd 
T 
d 
screen% 

Description Thickness of duct wall Length of duct inlet Net diameter of round duct Net hydraulic diameter of duct Dh =2HW/(H + W ) Height and Width of rectangular duct curvature of duct Netareaof ductatplace i opening angle of duct angle of damper and duct axes Thickness of perforated plate Diameter of hole in screen .ow area/net duct area*100 
Unit 
[m] 

[m] 

[m] 

[m] 

[m] 
[m] [m2] [o] [o] [m] [m] [%] 

4.2 Network Description 

&-F1 (Flow Controller, ideal symmetric) 
&-F1 FLOWCONTROLLER IDEAL SYMMETRIC 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 
|2.| | Range1 | Range2 | |__| |___________________________|______________| | RhoI | Cq | Exp n | Fva Setpoint | | (kg/m3) | (cflo@1Pa) | (-) | (cflo) | |_____________|_____________|_____________|______________| 
|3.| Facade Leakage | |__|________________________| | Cs |Expn| | (airl) | (-) | |_____________|_____________| 

|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example  *F1-Ex1 Example  F1  Flowcontroller  
1.2  0.1  0.65  0.2  
0.1  0.65  
0.0  

For a general description of the .ow controller models, please refer to the notes on .ow controllers, page 35 .. 
With the component F1 a symmetrical ideal .ow controller can be modeled. By “symmetrical” it is meant that the curve will be the same for .ows in either direction except for the opposite sign 
Description: 
Parameters 	Description Default value Input format, range 
Pre.x and Name unique identi.er ‘’ 10 character string, starting with *F1 Description description of component ‘’ string 
RhoI Air density at test conditions Range 1: Cq Flow coe.cient of .ow controller (volume .ow) Exp n Flow exponent of .ow controller Range 2: Fva Setpoint Volume .ow at setpoint 
1.2 
0.1 m3/s@1 Pa 
0.65 
0.0 m3/s 
Real Real Real Real 
Cs 	Flow coe.cient of facade leakage (mass .ow) 0.001 kg/s@1 Pa Real 
ExpN 	Flow exponent of facade leakage 0.65 Real 
Filter 1 ...Filter 5 	.lter e.ect; capability to hold back pollutants 0.0 Real 0.0 . . . 1.0 1 ...5 
4.2 Network Description 

-5  -4  -3  -2  -1  0  1  2  3  4  5  

 Facade Leakage Flow Controller  Dp [Pa]  


Figure 4.3: Flow controller ideal symmetric (Component F1 with parameters given in the example input) 
of pressure and .ow. The word “ideal” means that the controller, when used in a facade, has been compensated for the leak of the facade. In reality this means that a blower door test has given values for the air leaks and the .ow controller has a chance of adjustment to reduce its .ow curve as a function of pressure. The total e.ect will be that the sum of the .ow through the facade and the .ow controller is kept constant until the leak .ow through the facade exceeds the set-point .ow rate. In this case the .ow controller is closed and the total .ow will increase with increasing pressure according the leakage characteristic. 
The component F1 represents the sum of the .ow through the facade and the .ow controller. That means no additional link for the leakage may be de.ned in parallel to F1. With this approach the leakage is assumed to be at the same height as the .ow controller. In reality this is mostly not true. That’s why we have in reality (but not in the model) a small deviation from the ideal constant .ow due to di.erent stack pressures. 
The resulting .ow is temperature compensated according the relation of air densities at actual and test conditions. 
Note: The default units of the parameters for range 2 and 3 are volume .ow units. With the unit ‘c.o’ in the &-PR-UNIT section they can be changed to mass .ow units. 
&-F2 (Flow Controller, ideal non-symmetric) 
&-F2 FLOWCONTROLLER IDEAL NON-SYMMETRIC 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| | Range1 | Range2 Fva Setpoint | |__| |___________________________|_____________________| | RhoI | Cq | Exp n | positive | negative | | (kg/m3) | (cflo@1Pa) | (-) | (cflo) | (cflo) | |_____________|_____________|_____________|_____________________| 
|3.| Facade Leakage | 
|__|________________________| 
| Cs |Expn| 
| (airl) | (-) | 
|_____________|_____________| 

|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| 

Example *F2-Ex1 Example F2 Flowcontroller 
1.2 0.1 0.65 0.2 -0.15 
0.1 0.65 
0.0 
For a general description of the .ow controller models, please refer to the notes on .ow controllers, page 35 .. 
Description: 
Parameters Description Default value Input format, range 

Pre.x and Name unique identi.er ‘’ 10 character string, starting with *F2 Description description of component ‘’ string 
RhoI Air density at test conditions Range 1: Cq Flow coe.cient of .ow controller (volume .ow) 
Exp n Flow exponent of .ow controller Range 2 Fva Setpoint: 
positive Positive volume .ow at setpoint 
negative Negative volume .ow at setpoint Cs Flow coe.cient of facade leakage (mass .ow) ExpN Flow exponent of facade leakage 1.2 
0.1 m3/s@1 Pa 
0.65 
0.0 m3/s 
0.0 m3/s 
0.001 kg/s@1 Pa 
0.65 
Real 
Real 
Real 
Real Real Real Real 
Filter 1 ...Filter 5 .lter e.ect; capability to hold back pollutants 0.0 Real 0.0 . . . 1.0 1 ...5 
4.2 Network Description 

-5  -4  -3  -2  -1  0  1  2  3  4  5  
Facade Leackage  Dp [Pa]  
Flow Controller  


Figure 4.4: Flow controller ideal non-symmetric (Component F2 with parameters given in the example input) 
F2 is an asymmetric ideal .ow controller which is almost identical to F1 but which has a separate .ow rate set-point for negative .ow-directions. 
Please pay attention to the .ow direction when using an asymmetric .ow controller in &-NET-LINKs. It makes a di.erence in the result, if the From and To zones are exchanged. For .ow direction and sign conventions, see page 32. 
The resulting .ow is temperature compensated according the relation of air densities at actual and test conditions. 
Note: The default units of the parameters for range 2 and 3 are volume .ow units. With the unit ‘c.o’ in the &-PR-UNIT section they can be changed to mass .ow units. 
&-F3 (Flow Controller, non-ideal symmetric) 
&-F3 FLOWCONTROLLER NON-IDEAL SYMMETRIC 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| | Range1 | 
|__| |___________________________| 
| RhoI| Cq |Expn| 
| (kg/m3) | (cfl@1Pa) | (-) | 
|_____________|_____________|_____________| 

|3.| Range2 | |__|________________________________________________________________________| | R2Dp1 | R2C0 | R2C1 | R2C2 | R2C3 | R2C4 | R2C5 | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ | | | | pres) | pres^2) | pres^3) | pres^4) | pres^5) | |________|________|_________|___________|___________|___________|___________| 
|4.| Range3 | |__|__________________________________________________________________________| | R3Dp1 | R3C0 | R3C1 | R3C2 | R3C3 | R3C4 | R3C5 | Pmax | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ |(pres)| | | | pres)| pres^2)| pres^3)| pres^4)| pres^5)| | |________|________|________|__________|__________|__________|__________|______| 
|5.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| 

Example *F3-Ex1 Example F3 Flowcontroller 
1.2 4.0 0.63 
4.2 5.36 1.41 -7.78e-2 0.0 0.0 0.0 
10.5 0.78 4.41 -0.32 0.0 0.0 0.0 14.0 
0.0 
For a general description of the .ow controller models, please refer to the notes on .ow controllers, page 35 .. 
F3 is a symmetric non-ideal .ow controller. Non-ideal means that no compensation for other facade leaks is included in the .ow controller model. Only the actual characteristic of the controller is considered. The ranges 2 and 3 have to be input with the coe.cients of their polynomial approxi­mation. 
To evaluate the exact pressures at the intersections of the di.erent curves, the program needs a rough estimation of these values, because the curves could in fact have several points of intersection. 
The resulting .ow is temperature compensated according the relation of air densities at actual and test conditions. 
Note: The default units of the parameters for range 2 and 3 are volume .ow units. With the unit ‘c.o’ in the &-PR-UNIT section they can be changed to mass .ow units. 
4.2 Network Description 
-15-10-5 0 5 1015 
Dp [Pa]

Figure 4.5: Flow controller non-ideal symmetric (Component F3 with parameters given in the example input with decreasing range 3) 

Description:  
Parameters  Description  Default value  Input format, range  
Pre.x and Name  unique identi.er  ‘’  10 character string,  
starting with *F3  
Description  description of component  ‘’  string  

RhoI  Air density at test conditions  1.2  Real  
Range 1:  
Cq  Flow  coe.cient of  .ow  controller (volume  0.1 m3/s@1 Pa  Real  
.ow)  
Exp n  Flow exponent of .ow controller  0.65  Real 0.5 ... 1.0  

Range 2:  
R2Dp1  Estimation for pressure where range 2 starts  0.0 Pa  Real  
R2C0 ... R2C5  Polynomial coe.cients for range 2 (volume  0.0 m3/s,  Real  
.ow)  0.0 m3/s/Pa, etc  

Range 3:  
R3Dp1  Estimation for pressure where range 3 starts  
R3C0 ... R3C5  Polynomial coe.cients for range 3 (volume  
.ow)  
Pmax  Maximum pressure for polynomial approxima­ 
tion in range 3. If range 3 is decreasing, above  
this pressure the .ow is zero. If range 3 is in­ 
creasing, it is proportional to the pressure.  

0.0 Pa 
0.0 m3/s, 
0.0 m3/s/Pa, etc 
0.0 Pa 
Real 
Real 

Real 

Filter 1 ...Filter 5 .lter e.ect; capability to hold back pollutants 0.0 Real 0.0 ...1.0 1 ...5 
&-F4 (Flow Controller, non-ideal non-symmetric) 
&-F4 FLOWCONTROLLER NON-IDEAL ASYMMETRIC 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| | Range1 | 
|__| |___________________________| 
| RhoI| Cq |Expn| 
| (kg/m3) | (cflo@1Pa) | (-) | 
|_____________|_____________|_____________| 

|3.| Range2 positive flow | |__|________________________________________________________________________| | R2Dp1 | R2C0 | R2C1 | R2C2 | R2C3 | R2C4 | R2C5 | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ | | | | pres) | pres^2) | pres^3) | pres^4) | pres^5) | |________|________|_________|___________|___________|___________|___________| 
|4.| Range3 positive flow | |__|__________________________________________________________________________| | R3Dp1 | R3C0 | R3C1 | R3C2 | R3C3 | R3C4 | R3C5 | Pmax | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ |(pres)| | | | pres)| pres^2)| pres^3)| pres^4)| pres^5)| | |________|________|________|__________|__________|__________|__________|______| 
|5.| Range2 negative flow | |__|________________________________________________________________________| | R2Dp1 | R2C0 | R2C1 | R2C2 | R2C3 | R2C4 | R2C5 | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ | | | | pres) | pres^2) | pres^3) | pres^4) | pres^5) | |________|________|_________|___________|___________|___________|___________| 
|6.| Range3 negative flow | |__|__________________________________________________________________________| | R3Dp1 | R3C0 | R3C1 | R3C2 | R3C3 | R3C4 | R3C5 | Pmax | | (pres) | (cflo) | (cflo/ | (cflo/ | (cflo/ | (cflo/ | (cflo/ |(pres)| | | | pres)| pres^2)| pres^3)| pres^4)| pres^5)| | |________|________|________|__________|__________|__________|__________|______| 
|7.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example *F4-Ex1 Example F4 Flowcontroller 
1.2 4.0 0.63 
4.2 5.36 1.41 -7.78e-2 0.0 0.0 0.0 
10.5 111. -20.0 1.0 0.0 0.0 0.0 13.0 
-3.5 -51.4 -0.078 -0.008 0.0005 0.00001 0 -11.0 -338. -63. -3. 0.0 0.0 0.0 -13.0 
0.0 
For a general description of the .ow controller models, please refer to the notes on .ow controllers, 4.2 Network Description 
page 35 .. 
F4 is an asymmetric non-ideal .ow controller. Parameters for range 2 and 3 have to be de.ned for positive and negative .ow directions respectively. 
Please pay attention to the .ow direction when using an asymmetric .ow controller in &-NET-LINKs. It makes a di.erence in the result, if the From and To zones are exchanged. For .ow direction and sign conventions, see page 32. 
To evaluate the exact pressures at the intersections of the di.erent curves, the program needs a rough estimation of these values, because the curves could in fact have several points of intersection. 
Description: 
Parameters Description Pre.x and Name unique identi.er 
Description description of component RhoI Air density at test conditions Range 1: 
Cq Flow coe.cient of .ow controller (volume .ow) Exp n Flow exponent of .ow controller 
Default value ‘’ 
‘’ 
1.2 
0.1 m3/s@1 Pa 
0.65 
Input format, range 
10 character string, starting with *F4 string Real 
Real 
Real. 0.5 ... 1.0 
Range 2 positive .ow: R2Dp1 (pos.) Estimation for pressure where range 2 starts R2C0 ... R2C5 Polynomial coe.cients for range 2 (positive 
volume .ow) Range 3 positive .ow: 
R3Dp1 (pos.) Estimation for pressure where range 3 starts R3C0 ... R3C5 Polynomial coe.cients for range 3 (positive volume .ow) 
Pmax 	Maximum pressure for polynomial approxima­tion in range 3. Above this pressure the .ow is proportional to the pressure or zero 
Range 2 negative .ow: R2Dp1 (neg.) Estimation for pressure where range 2 starts R2C0 ... R2C5 Polynomial coe.cients for range 2 (negative volume .ow) 
0.0 Pa 
0.0 m3/s, 
0.0 m3/s/Pa, etc 
0.0 Pa 
0.0 m3/s, 
0.0 m3/s/Pa, etc 
0.0 Pa 
0.0 Pa 
0.0 m3/s, 
0.0 m3/s/Pa, etc 
Real 
Real 

Real 
Real 

Real 

Real 
Real 

Range 3 negative .ow: R3Dp1 (neg.) Estimation for pressure where range 3 starts R3C0 ... R3C5 Polynomial coe.cients for range 3 (negative volume .ow) 
Pmax 	Minimum pressure for polynomial approxima­tion in range 3. Below this pressure the .ow is proportional to the pressure or zero 
0.0 Pa 
0.0 m3/s, 
0.0 m3/s/Pa, etc 
0.0 Pa 
Real 
Real 

Real 

Filter 1 ...Filter 5 .lter e.ect; capability to hold back pollutants 0.0 Real 0.0 ...1.0 1 ...5 

-15  -10  -5  0  5  10  15  
Component F4 (Flow Controller, Asymmetric, Non-Ideal  Dp [pa]  

Figure 4.6: Flow controller non-ideal non-symmetric (Component F4 with parameters given in the example input with increasing range 3) 
The resulting .ow is temperature compensated according the relation of air densities at actual and test conditions. 
Note: The default units of the parameters for range 2 and 3 are volume .ow units. With the unit ‘c.o’ in the &-PR-UNIT section they can be changed to mass .ow units. 
4.2 Network Description 
&-TV (Thermostatic Vent) 
&-TV Thermostatic 	vent 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2. |Minimum opening size | Interm. opening size | Maximum opening size | One-way | |___|Temp| Cs | Exp. n | Temp | Cs | Exp. n | Temp | Cs |Exp. n | damper? | | (temp)|(airl) | (-) |(temp)|(airl) | (-) |(temp)|(airl)| (-) | (-) | |________|_______|________|______|_______|________|_____________|________|_________| 
|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| 

Example *TV1 Example Thermostatic Vent 
15. 1.3E-5 0.8 20. 0.01 0.6 25 0.1 0.5 0 
0. 
Description: 
Parameters 	Description Default value Input format, range 
Pre.x and Name 	unique identi.er 
Description description of component Minimum opening size 
Temperature  Air temperature at ”FROM” zone, when the  
device cannot close any further (or becomes  
fully closed).  
Cs  Air .ow coe.cient for this temperature  
Exp. n  Air .ow exponent for this temperature  

Intermediate opening size 
Temperature 	Air temperature at ”FROM” zone, at inter­mediate vent opening position (used to split in two temperature ranges). 
Cs 	Air .ow coe.cient for this temperature 
Exp. n 	Air .ow exponent for this temperature 
Maximum opening size 
Temperature 	Air temperature at ”FROM” zone, when the device becoms fully open. 
Cs 	Air .ow coe.cient for this temperature 
Exp. n 	Air .ow exponent for this temperature 
One way damper ? 	0 : No one-way .ow damper; air can .ow in 
either direction. 
1 : The device has an integral one-way .ow damper; .ow direction is only ”FROM” . ”TO” as de.ned in the &-NET-LINKs datablock. 
Filter 1 ...Filter 5 	.lter e.ect; capability to hold back pollutants 1 ...5 
‘’ 
‘’ 
-5.oC 

0.001 kg/s@1Pa 
0.5 -5.oC 
0.001 kg/s@1Pa 
0.5 -5.oC 
0.001 kg/s@1Pa 
0.5 0 
0.0 
10 character string, starting with *TV string 
Real 
Real Real 
Real 
Real Real 
Real 
Real Real integer 0 ;1 
Real 0.0 ...1.0 
The thermostatic .ow device changes its .ow coe.cient and exponent depending on the air tem­perature in the ”FROM” zone of the respective link. Since vents generally do not close perfectly linear with temperature, the values have to be speci.ed for three di.erent temperatures. 
The program .nds the actual .ow characeristic values for any given temperature by linear inter­polation within the two temperature ranges de.ned this way. 
Optionally the device has an integral one way .ow damper which allows .ow only in the ”FROM” 
. ”TO” direction as de.ned in the &-NET-LINKs datablock. 
4.2 Network Description 
&-WI (Windows and Doors) 
&-WI Window / Door 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| Closed: | Expn | LVO Type | Lwmax | Lhmax |Type specific| |__|Cs | | | | |Length | | (airl/m) | (-) | (-) | [m] | [m] | [m] | |______________|______|______________|________|________|_____________| 
|3.| Open. | Cd | Width | Height | Start Height| 
|__| Fact. | | Factor | Factor | Factor | 
| (-) |[-]| [-] | [-] | [-] | 
|__________|_____|________|________|_____________| 

|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| 

Example *WI1 Window Example 
0.002 0.57 1 2.2 1.2 1.2 
0.0 
0.6 0.0 1.0 0.0 

1.0 
0.6 1.0 1.0 0.0 


0.0 
The air .ow component &-WI allows to model closed or (partly) opened windows or doors. Five types of “large vertical openings” (LVO) are available: 
. 	
LVO type 1 with rectangular opening with one or more vertical axes, 

. 	
LVO type 2 and 3 with rectangular openings and horizontal pivoting axis, 

. 	
LVO type 4 and 5 with triangular opening area. 


Closed window/door 
A closed window or door can be simulated either with a simple crack &-CR component or with the window air .ow component &-WI. The di.erence between these two possibillities is: 
. 	
The crack de.ned under &-CR is located at the link height given in &-NET-LINks. 

. 	
The crack of a closed window component is distributed over the height of the window (Lhmax). The crack length is calculated from the height and the width of the window. LVOs of type 1 that consist of more than one movable part might have an extra crack length which can be de.ned under Type specific Length. 

For a rectangular window/door (LVO type 1 to 3) the crack is distributed as follows: 

. 	
a bottom crack located at link height (crack length Lwmax), 

. 	
a top crack located at Lhmax above the link height (crack length Lwmax), 

. 	
a vertical crack uniformly distributed between the bottom and top of the window component, (crack length: LVO type 1: 2 · Lhmax + Type specific Length )LVO type 2 and 3: 2 · Lhmax 

For the triangular LVOs type 4 and 5 the crack is distributed as follows: 

. 	
a vertical crack uniformly distributed between the bottom and top of the window component, (crack length: Type specific Length ) 


The length parameters are de.ned in .gures 4.7 through 4.9. Link heights are described under keyword &-NET-LINks on page 102. 
Due to the distribution over the window height it is possible to have a two way .ow through the cracks of a closed window. 
Open window/door 
The &-WI component allows not only the de.nition of closed windows and doors. In addition, an open window or door can be de.ned. The state of the component (open, partly open or closed) may vary during a simulation run by de.ning a schedule for the window (see keyword &-SCH-WIN 
Description:  
Parameters  Description  
Pre.x and Name  unique identi.er  
Description  description of component  
Closed: Cs  Flow coe.cient for closed windows per  m  
crack length  
Exp n  Flow exponent  
LVO Type  Type of Large Vertical Opening  
1 = Rectangular LVO  
2&3= Horizontal Pivoting Axis LVO  
4&5= Triangular LVO  
Lwmax  Width of Window  
Lhmax  Height of Window  
Type  speci.c  Depending on LVO type, this parameter de- 
Lenght  .nes:  
Type 1: Extra crack length for LVOs with mul­ 
tiple openable parts  
Type 2 and 3: Height of the pivoting axis  
(measured from the bottom of the window  
frame)  
Type 4 and 5: Total crack length (closed LVO)  
uniformly distributed over Lhmax  
Opening Factor  Opening factor of window;  
for LVO Type 2 and 3: Opening Factor corre­ 
sponds to the opening angle between 0o and  
90o .  
Minimum two lines; this table is used for in­ 
terpolation; the actual value has to be given  
in &-NET-LINks!  
Cd  Discharge coe.cient  

Default value ‘’ 
‘’ 0.0001 kg/s@1 Pa/m 
0.7 1 
1.0 
1.0 
0.0 
0.0 
1.0 
0.0 
0.0 
Input format, range 
10 character string, starting with *WI string 
Real 
Real 0.5 ...1.0 Integer 1 ... 5 
Real Real 
Real 
Real 
Real 
Real 0.0 ...1.0 
Real 0.0 ...1.5 
used for LVO type 1, 4 and 5 ignored for LVO type 2 and 3 Width Factor Actual Lw/Lwmax 1.0 Real 0.0 . . . 1.0 Height Factor Actual Lh/Lhmax 1.0 Real 0.0 . . . 1.0 Start Height Fac-Actual Start Height/Lhmax 0.0 Real 0.0 . . . 1.0 tor 
Filter 1 ...Filter 5 	.lter e.ect; capability to hold back pollutants 0.0 Real 0.0 . . . 1.0 1 ...5 
4.2 Network Description 
on page 106). 
The geometry of the opening area for the di.erent LVO types is de.ned as follows: 

. 	
LVO type 1 with rectangular opening area (see .gure 4.7), 

. 	
LVO type 2 with a horizontal axis, leading to opening areas as sketched in .gure 4.9, upper left part, 

. 	
LVO type 3 with a horizontal axis, with an alternative geometry of the opening areas as sketched in .gure 4.9 upper right part, 

. 	
LVO type 4 with triangular opening area, vertex at the bottom (see .gure 4.7), 

. 	
LVO type 5 with triangular opening area, vertex at the top (see .gure 4.7). 


The triangular openings of LVO type 4 and 5 can be used together with the rectangular LVO type 1 to assemble any geometry of opening area by hand. This is often necessary if a window with horizontal axis is positioned closely to a ceiling or a wall or if the window has a reveal. In these cases the opening areas will be di.erent to those de.ned in LVO type 2 and 3. In cases where the overlapping of the window frames have to be taken into account the assembling by hand might also lead to a more correct opening geometry. Also for open skylights the opening areas have to be assembled by hand as both LVO types 2 and 3 are only allowed to use in vertical position and not in a slanted position as shown for the LVO type 1 in .gure 4.8. 
The di.erence between LVO type 2 and 3 for windows with horizontal axis is besides the di.erent geometry of the opening area an improved discretization of the opening area in LVO type 3 which prevents from a discretization error especially for small opening angles, where the top and bottom rectangles tend to totally disappear in LVO type 2. Additionally the program can determine the discharge coe.cient Cd for the LVO type 2 depending on the opening angle and the height to width ratio. 
Figure 4.10 shows an example of the .ow through a window with horizontal axis depending on the opening angle. The .ow is calculated with LVO type 2 and 3 and additionally with a CFD model. Although the geometry of the opening areas according to LVO type 3 seems to be more correct, the result of LVO type 2 shows a better agreement with the result from CFD calculation. The agreement of LVO type 2 is further improved with the optional internal Cd value calculation depending on the opening angle. 
If the window is opened, the size of the opening will be determined from Lwmax and Lhmax,the opening factor, column 1 in data block 3, and — for LVO type 1, 4 and 5 — the parameters given in columns 3, 4, and 5 in data block 3. Opening factor 0.0 means closed, 1.0 means fully open. For LVO type 2 and 3 this range of the opening factor corresponds to the range of opening angle from 0o to 90o. Example: opening factor 0.5 means the opening angle is 45o. For LVO type 2 and 3 the size of the opening is determined completely by the opening factor (see .gure 4.9 upper part). 
At least one line with opening factor 0.0 and one line with 1.0 must be supplied. There may be additional lines between the two. All values of the opening factor between 0.0 and 1.0 indicate that the parameters following on that line are for a partly opened window. During the simulation the geometry and parameters of the opening at the actual timestep will be determined by interpolation. The actual value of the opening factor for the window will be read .rst from the Actual Value in &-NET-LINks and then from schedule &-SCH-WINdow, if existant. 
The temperature drop caused by opening an external window can be calculated in case of single sided ventilation, using a simple thermal model of the room. If this temperature drop in a zone shall be calculated, zone thermal properties have to be input under NET-ZT (see page 101). 
From column 2 of data block 3 the discharge coe.cient Cd corresponding to the opening factor of that line is read. There is an option to calculate Cd internally, see paragraph “Calculation of Discharge Coe.dient” on page 88. 
LVO Type 1 LVO Type 4 LVO Type 5 
Lwmax 
Lwmax * Width Factor 


Lhmax * Start  
Height Factor  
Link  Lwmax  
Height  
From  
Zone reference plane  
Zone  Opening area of partially opened window  


Lhmax * Lhmax Height Factor 


Link 
Height 
From 


Link Zone reference plane 
Height To Zone 
Figure 4.8: Windows and doors, parameters for LVO Type 1, slanted window (or door). The OwnHeightF actor is input in &-NET-LINks. For the meaning and input of link heights, see keyword &-NET-LINks on page 102 
4.2 Network Description 
Open area geometry of a horizontal pivoting axis window LVO type 2 LVO type 3 

Opening Factor 


0.25 
0.2 
0.15 
0.1 
0.05 
0 0 10 20 30 40 50 60 70 80 90 opening angle alpha [°] 

CFD calculation LVO type 2; Cd=f(alpha) LVO type 2; Cd=0.6 LVO type 3; Cd=0.6 
Figure 4.10: Temperature di.erence driven .ow through a window with horizontal pivoting axis depending 
on the opening angle modelled with LVO type 2 and 3 and with CFD. 
(Window: height = 1.14m; width = 0.78m; temperature di.erence: 24 K) 

The geometry of a partly opened horizontal pivoting axis window (LVO type 2 and 3) is determined completely by its opening factor (see .gure 4.9). For openings with vertical axes (LVO type 1) and for triangular openings (LVO type 4 and 5) there must be additional factors which de.ne the size and position of the opening relative to Lwmax and Lhmax: 
Opening width: = Lwmax · WidthF actor 
Opening height: = Lhmax · HeightF actor 
Start height: = Lhmax · StartHeightF actor 
These parameters are input in columns 3, 4 and 5 of data block 3. 
Start Height is the distance between the bottom of the window frame and the bottom of the actual opened part of the window (see .gure 4.7). The sum of Height Factor and Start Height Factor must be less than or equal to 1.0 in order to have the actual opening within the window frame. 
Slanted windows may only be of LVO type 1, 4 and 5. For slanted windows (e.g. windows in a roof) the Own HeightFactor (see .gure 4.8), which is the cosine of the angle between the window plane and a vertical plane, must be given in &-NET-LINks (see page 102). With this factor the program will calculate the start height and the height of the opening in order to get the correct stack pressure di.erence pro.le. For calculating the area of the opening, the Own Height Factor will not be taken into account because the .ow is assumed to be perpendicular to the opening plane. With this de.nition it is even possible to input an opening which is horizontal (Own HeightFactor =0). 
NOTE 	Slanted openings of LVO type 2 and 3 (Own Height Factor < 1) are not allowed in the current version. Skylights in a roof have to be modelled by assembling the opening area by hand using rectangular and triangular openings. 
NOTE 	With Own Height Factor = 0, only one-way .ow is possible, because the pressure di.erence is constant throughout the opening. This means that single sided ventilation cannot be modelled for Own Height Factor =0. 
4.2 Network Description 
Calculation of the Discharge Coe.cient 
If the user inputs Cd = 0 in column 2 of data block 3, the program will determine the discharge coe.cient Cd from the other input parameters: 
For internal doors (LVO type 1): Cd is a function of the ratio height of the door/height of the room (see [24]); Cd will be in the range from 0.05 to 0.5. 
Measurements conducted by CSTB led to the following model equation: 
Cd =0.609 · Hrel - 0.066 
where Hrel = Hdoor/Hroom and 0.2 < Hrel < 0.9 
For external LVO type 1 : According to [7] Cd is in case of single sided ventilation in the range from 0.6 to 1.5 and will be calculated as a function of: 
U = wind velocity [m/s] 
.T = di.erence between room and outdoor air temperature [K] 
Tm = mean of room and outdoor air temperature [K] 
H = height of the opening [m] 
D = depth of the room [m] 

Cd =0.08 · ( gH3.T )-0.38 Tm
U2D2 
For LVO type 2: Cd is a function of the opening angle a and the height to width ratio and varies in the range of 0.2 to 0.6 (see .gure 4.10). 
Calibration with results from CFD calculations leads to the following equation [6]: 
Lhmax 
Cd =0.0147 · a - 0.0928 · +0.4116
Lwmax 
The calculated Cd values can be output with the otput option DL-under the &-PR-OUTP keyword (see page 55) 
If Cd is determined by the program, the following restrictions apply for the input: 
. 	
LVO mustbetype1 or 2. 

. 	
Cd = 0 for all opening factors. 

. 	
In addition for internal doors, 


. 	
the doorstep must be lower than 0.05 m, 

. 	
the zone reference height under &-NET-ZONes (see page 94) has to be at .oor level and must be the same in the From and the To zone, 

. 	
the zone volume must be input with the H/D/W form under &-NET-ZONes (see page 94); the height H has to be the same for the From and the To zone. 


. 	In addition for external openings, 
. 	
the opening must be linked to an external node under &-NET-LINks (see page 102), not to a speci.ed pressure, 

. 	
the zone volume must be input with the H/D/W form under &-NET-ZONes (see page 94), 


. 	only one open window or door per zone is allowed (one with opening factor di.erent from 0). 
&-TD (Test Data) 
&-TD TEST DATA COMPONENT 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 

|2.| RhoI | 
|__| [kg/m3] | 
|_______________| 

|3.| Pressure and Flowrate, maximum 6 Lines | |__| Data Pairs: maximum 18 Pairs | | (pres) | (cflo) | (pres) | (cflo) | (pres) | (cflo) | |_________|_________|_________|_________|_________|_________| 
|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example *TD-1 Testdata 
1.2 
10.1 1.0 20.0 1.5 30.3 1.9 
0.0 
The Test Data component is there so that measured results canbe usedinCOMIS withouthaving to de.ne a separate routine for this. Care should be taken if .ow is descending with ascending pressure di.erence. This leads to negative nodes and therefore convergence will be destroyed (see section: “Notes on Convergence” on page 44). 
RhoI is the density at which the (volume) .ow rates were measured. By default, .ow data is ex­pected to be volume .ow with [m3/s]. The .ow unit for test data can be changed under &-PR-UNITS (see page 49) by giving the desired unit using the keyword cflo. By chosing the appropriate unit, mass .ow data can be used, too. 
If one data pair is input, a constant .ow at all pressures is assumed. If two or more pairs are given, a linear interpolation between successive data pairs is made if the actual pressure is within the pressure range spanned by the data pairs. A linear extrapolation is made outside the maximum 
Description: 
Parameters Description Default value Input format, range 
Pre.x and Name unique identi.er ‘’ 10 character string, starting with *TD Description description of component ‘’ string RhoI Density of air at entry point 1.2 Real 
Test data pairs (have to be given in ascending order for pressures)  
Pressure  Pressure Value  0.0 Pa  Real  
Flow rate  Flow rate Value  0.0 m3/s  Real  
Filter 1 ...Filter 5  .lter e.ect; capability to hold back pollutants  0.0  Real 0.0 . . . 1.0  
1 ...5  

4.2 Network Description 
and minimum data. It is assumed that the data pairs are given in ascending order for pressures. The .ow rate given here can be scaled with the Actual Value given under &-NET-LINks (see page 102). NOTE Be aware that the pressure over a link is the pressure di.erence From-zone minus To-zone. This means that a crack has data like (p, q)=(-10, -0.05) (p, q)= (0, 0) (p, q)= (10, 0.05) A fan has its curve in the 2nd quadrant, like: 
(p, q)=(-100, 0) (p, q)=(-50, 0.05) (p, q)= (0, 0.07) This fan blows in the To-zone and sucks in the From-zone. For .ow directions and sign conventions see page 32. 
&-RF (Related Flow Component) 
&-RF Related Flow COMPONENT 
|1.| Prefix and Name | Description | |__| (-) | [-] | |____________________|_____________| 
|2.|Unit Flag | RhoI | |__| 1: ?=cflo | | | 2: ?=flow | [kg/m3] | |_______________|___________| 
|3.| Reference Flowrate and related flowrate, max 6 Lines | |__| Data Pairs: minimum 3 Pairs, maximum 18 Pairs | | (?) |(?) |(?) |(?) |(?) |(?) | |__________|_________|_________|_________|_________|_________| 
|4.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | |__|(-) |[-] |[-] |[-] |[-] | |_____________|__________|__________|__________|__________| 
Example  *RF1  Flowhood  
2  1.2  
#  2  means  the  flows given  below are  volumetric flowrates  
#  pair  1  pair  2  pair 3  
-0.1  0.2  0.02  0.2  0.045 0  
#  pair  4  
0.4  0  
0.0  

The component name RF stands for Related Flow. The .owrate through this component is a function of the .ow through a reference link. The link to be used as reference link is given at &-NET-LINks (see page 102) in the column where schedules and reference links for duct junctions 
Description:  
Parameters  Description  Default value  Input format, range  
Pre.x and Name  unique identi.er  ‘’  10 character string,  
starting with *RF  
Description  description of component  ‘’  string  
Unit Flag  Flag=1 : c.o unit is used; Flag=2 : .ow unit is  0  Integer 1 or 2  
used for both Reference and Related .ow rate  
RhoI  Density of air at entry point  1.2  Real  

Related .ow data pairs  
Reference Rate  Flow  Reference .ow rate  0.0 m3/s  Real  
Related Flow Rate  Component .ow rate, function of reference .ow rate  0.0 kg/s  Real  
Filter 1 ...Filter 5  .lter e.ect; capability to hold back pollutants 1 ...5  0.0  Real 0.0 . . . 1.0  

4.2 Network Description 



pollutant 
source 

Figure 4.11: Related Flow Component, .ows for example kitchen hood. 
are de.ned. 
To avoid convergence problems, the Related Flow component has no .ow rate derivative. This means that a zone cannot be linked only with RF components, there must also exist some normal links, like a crack or a fan. 
The component has been developed to model kitchen hoods. Therefore, the examples given here deal with kitchen hoods. Alternative ways to model such components are shown in .gure 4.12. 
If a given hood e.ciency is known as a function of the hood extract .owrate (through link 3) then the spread .owrate (link 4) can be modelled with the component RF. 
For a kitchen hood the reference .ow qref is the .ow through the hood, an eventually built in fan and the following duct. The (unwanted) .ow from the cooking range that is leaking/circulating out of the hood into the kitchen zone is given by the RF type. If q is the .ow leaking to the kitchen zone, the e.ciency of the hood .h can be de.ned as 
qref 
.h = · 100% 
qref + q 
for positive q and positive qref . 
The e.ciency for the data pairs presented in the example above range from 9.1% to 100%. 
#pair e.ciency 
#1 – 
# 2 9.1% (.ow into the room is much more than the hood extract .ow) 
# 3 100% 
# 4 100% 
Between pair 2 and pair 3 is the normal operation range of the hood. The pairs 1 and 4 have been added to make well de.ned extrapolations. 
How a hood is being integrated into the network is shown in the section &-NET-LINks on pages 105.. The link to be used as reference link is given at &-NET-LINks in the same column where schedules and reference links for duct junctions are given. 
As shown in the lower part of .gure 4.12, it is recommended to use these RF types always in pairs with opposite .ow directions to force balanced .ow. In this case there is no e.ect on the .ow balance during the iteration process. Nevertheless it will result in the desired .ow exchange that can spread pollutants. 

Hood with resistance  Hood with fan  
Normal COMIS model pollutant source extracted zone (hoo) spread? 4 1 2 3 zone (kit) hood resistance hood cooking range  pollutant source extracted zone (hoo) spread? 4 1 2 3 zone (kit) hood fan hood cooking range  
RF-model pollutant source extracted zone (hoo) spread? 4 RF 1 2 3 zone (kit) hood resistance hood cooking range  pollutant source extracted zone (hoo) spread? 4 RF 1 2 3 zone (kit) hood cooking range hood fan  
Balanced RF-model pollutant source extracted zone (hoo) spread? 4 RF 1 2 3 zone (kit) hood cooking range hood fan 5 RF  

Figure 4.12: Kitchen Hoods Five ways to simulate akitchen hood in COMIS are showninthis.gure. Inthe normal COMISmodel link 4 is a normal opening (CR) or a large opening. The zone above the cooking range is given a higher temperature, and spread can occur to the kitchen if the .ow through the hood (link 3) is insu.cient. The same setup is shown to the right except that there is a fan in the hood. In both cases the spread simulated by COMIS, is caused by the stack pressure between link 2 and the higher positioned link 4. The corresponding RF-models are shown beneath the normal models. 
4.2 Network Description 
&-NET-ZON es (Zones De.nition) 
&-NET-ZONes 
|Zone| Name | Temp |Ref. | Volume | Humid.| Schedule | |ID | | |Height| [m3] | | Name | || || |H/D/W| | | | (-)| [-] |[temp]| [m] | [m/m/m] |[humi] | [-] | |____|______________|______|_______|_____________|_______|__________| 
Example 	E01 Kitchen 18.1 -0.85 100. 10.0 T1/H1 
W02 Living1 20. 0.50 200. 12.0 
N04 Bedr.Child 19 2.85 150 0.0 H3 
N05 Dining 21 0.15 2.4/3.3/4.0 1.5 
a2 auxiliary_node d d 0.01 

The height of the zone reference plane, measured from the building reference plane must be at the .oor level of the room 
. 
if the zone is layered or 

. 
if temperature drop in a single-sided ventilated zone has to be calculated 

. 
if it has an opening for which Cd shall be calculated. 
For details, please see .gure 4.15. 
The volume of the zone must be input as Height/Depth/Width 



Description: 
Parameters Description 	Default value Input format, range 
Zone ID  Zone Identi.cation  
Zone Name  Name of speci.c zone  
Temp  Temperature setting in zone  
Ref. Height  Height of zone reference plane measured from  
ground plane (see .gure 4.15)  
alternative volume  
input:  
Volume  Volume of zone  
H/D/W  Height/Depth/Width of the room.  
Humid.  Humidity in zone; 0 if H2O is used as pollu­ 
tant.  
Schedule Name  Names of schedules applicable to zones. The  
.rst character of the name indicates the sched­ 
ule type:  
T : Temperature schedule  
H : Humidity schedule  
S : Sink schedule  
Q : Source schedule  
Use ‘/’ to separate schedules;  no  blanks  or  
commas allowed  

‘’ ‘’ 
20.0oC 
0.0 
75.0 3.0/5.0/5.0 
0.0 g/kg 
‘’ String 20 char String 20 char, but no blanks between words Real Real 
Real Real/Real/Real Real 
String 50 char 
. 
if the zone is layered, or 

. 
if the temperature drop in a single-sided ventilated zone ist to be calculated, or 

. 
if it has an opening for which Cd shall be calculated, or 

. 
if .ctive sources and their room size dependencies shall be used. 


NOTE 	The humidity in the zone must be input here only if it shall be used for calculating the air density. It must be set to zero in all zones if it is de.ned as pollutant under &-POL-DES and under &-NET-ZP, and transport mechanism shall be studied. For details, see page 36. 
It is possible to have more than one source and/or sink schedule per zone. 
4.2 Network Description 
&-NET-ZL (Zone Layers) 
&-NET-ZL zone-layers 
| Zone | Start | Temp. | Hum. | Poll. | 
| *ID | Height | Grad | Grad | Grad | 
| | | | Factor | Factor | 
| (-) | (m) |[temp/m]| [1/m] | [1/m] | 
|_______|________|________|________|________| 

Example 	*E01 0. 0. 0. 0. *1 -.25 2.0 0.10 0.0 
1.5 3.0 -0.15 0.0 
*123 1.1 1.5 0.0 0.0 

A zone may be devided in sub-zones by de.ning layers. Layers can be de.ned for any number of zones. There is no limit to the number of layers per zone as long as the the total number of layers does not exceed the maximum of (currently) 50. The layers must be given per zone, in a rising sequence. Every next layer must have a start height which is higher than the one of the previous layer in the same zone. The start height is measured relative to the zone reference plane (positive above zone reference plane). 
Layers can start anywhere in the zone including outside the range of the .oor and ceiling. The following restrictions apply to input under &-NET-ZONes (see page 94) for layered zones: 
. 
the zone reference height has to be at .oor level, and 

. 
the zone volume must be input with the H/D/W form. 


Starting from the values in the zone reference plane, the pro.les are established using the gra­dients within one layer to determine the values at the start height of the next layer. According to .gure 4.13, the concentration gradient m of pollutant no 1 in a layer l is the product of the Poll. Grad Factor ml and the concentration c0 in the zone reference plane. The concentration cl+1 at the start height hl+1 of the next layer is 
cl+1 = cl + m · (hl+1 - hl) 
Description:  
Parameters  Description  
Zone ID  Identi.cation of zone in which layers are de­.ned. The zone must be de.ned!  
Start Height Temp. Grad Hum. Grad Factor  Height of the lower boundary of the individual layer measured from the zone reference plane Temperature gradient within speci.c layer The humidity gradient is the product of Hum. Grad Factor and the moisture content in the  
Poll. Grad Factor  zone reference plane. The pollutant gradient m is the product of Poll. Grad Factor ml and the pollutant con­centration c0 in the zone reference plane. The data refer to the pollutant de.ned as No 1.  

Default value ‘’ 
0.0 
0.0 oC/m 
0.0 
0.0 
Input format, range String 
Real 
Real Real 
Real 
z 

Concentration 


h zLayer 3 
h

3 
Layer 2 
h
2 
Layer 1 
h = 0
1
Zone reference 
;; 
Figure 4.13: Construction of concentration pro.le in layered zone. 
The gradients are used to enable height dependent driving forces (temperature, concentrations). However, they are not in.uenced by the resulting .ows. For the next time step, the zone volume is .rst assumed to be fully mixed, then the gradient is used to calculate layer characteristics. No further exchange between layers is taken into account. 
NOTE Layers may not be de.ned for single sided ventilated zones. 
4.2 Network Description 
&-NET-ZP (Zone Pollutants) 
&-NET-ZP zone-pollutants 
| Zone | Pollutant | | |_______________________________________________| | *ID | Initial | Source | Sink | Decay | | | Concentration| | | | | (-) | (conc?) | [sour?] | [sink?] | [1/s] | |________|______________|__________|__________|__________| 
Example *E01 0. 	0. 0. 0. 
*E02 0. 	0. 0. 1.E-4 
*001 0.00 0.00 1.005 0. 
0.00 1.25 0.000 0. 
0.00 0.00 1.005 0. 
The initial values for pollutant concentrations can be given together with the nominal value of the source strength, sink strength and a decay constant. Exponential decline of the pollutant concentration due to e.g. absorption processes can be modelled with the decay constant. 
The .rst data line refers to the pollutant with no. 1 de.ned in the pollutants de.nition data section &-POL-DEScription (see page 125). The second data line refers to pollutant with no. 2, and so on. 
NOTE To run the pollutant module, appropriate input must be given in several data sections: 
. 	
&-PR-SIMU (see page 52) keyword POL [<no>] to enable pollutant transport for all or the given number of pollutants 

. 	
&-NET-ZP (this data section) at least data for one pollutant in one zone must be given here to activate the pollution routines 

. 	
&-POL-DES (see page 125) de.nition of pollutants 


Description: 
Parameters Description 	Default value Input format, range 
Zone ID  starting with ‘*’, followed by the identi.cation  
of a de.ned zone  
Pollutant  
Initial  Concentration of speci.c pollutant at the be- 
Concentration  ginning of the simulation;  mass  or  volume  
of pollutant per mass of clean, dry air (see  
page 36)  
Source  Nominal source strength  
Sink  Nominal sink strength  
Decay  Zone and pollutant speci.c decay constant of  
pollutant due to e.g. absorption or adsorption  
(will be added to the pollutant speci.c de­ 
cay constant de.ned under &-POL-DEScription  
(see page 125))  

‘’ 
0.0 kg/kg 
0.0 kg/s 
0.0 kg/s 
0.0 1/s 
String 
Real 
Real Real Real = 0.0 
Optionally, schedules &-SCH-SIN and &-SCH-SOU can be de.ned for pollutants to change sink and / or source strength. 
NOTE 	The humidity must be set to zero in all zones under &-NET-ZON if ‘H2O’ is de.ned as pollutant and transport mechanism shall be studied. For details, see page 36. 
4.2 Network Description 
&-NET-EXT ernal (External Node Data) 
&-NET-EXTernal node data 
| External | Facade | Outside | | Node Name | Elem Name | Conc Factor | |(-) |(-) |[-] | |____________|____________|_____________| 
Example  1a  2  1.0  
1b  2  0  
2  5  1  
3  7  1  
4  9  1.1  

The building is linked to its ambiance via external nodes, i.e. nodes which are just outside the building. External nodes are associated to facade elements of the building (see Cp value input under &-CP-VALUes and building orientation under &-ENV-BUIlding). Wind pressure data are de.ned for facade elements. 
The distinction between external nodes and facade elements allows for having more than one node per facade element. Therefore, one facade element may have di.erent outside concentration factors for di.erent links. 
Outdoor pollutant concentrations can be activated by de.ning a schedule for them (see &-SCH-POL). The outside concentration factor can modify these global concentration for each node individually. 
NOTE The section &-NET-EXTernal must appear before the section &-CP-VALues 
Description: 
Parameters Description Default value Input format, range 

External  Node  External node name. This name or number  ‘1’  String 20 char  
Name  appears with a preceding minus sign in the  
part &-NET-LINks  
Facade  Element  Name or number of related facade element.  ‘-’  String  
Name  Cp values are linked to the respective facade  
element  
Outside  Concen- Ratio of outside pollutant concentration at  1.0  Real  
tration Factor  this external node and outdoor pollutant con­ 
centration  

&-NET-ZT (Zone Thermal Properties) 
&-NET-ZT zone thermal properties 
| Zone | Conduc-| Density | Capacity| Wall | 
| *ID | tivity | | |Thickness| 
| (-) | (W/mK) | (kg/m3) | (J/kg/K)| (m) | 
|_______|_________|_________|_________|_________| 

Example *E01 0.8 1420 1000 0.2 
Zone thermal properties are required to estimate the temperature drop in a zone caused by opening an external window. Only for single sided ventilation, this temperature drop can be calculated using a simple thermal model of the room. The walls are characterized by their thermal di.usivity. No conduction to adjacent zones is taken into account. The thermal properties are mean values of all walls in the zone. 
The thermal model is only valid for openings of LVO type 1 (rectangular vertical opening). If a window with LVO type 2 (horizontal pivoting axis) is selected, the program calculates the temper­ature drop as if it is a rectangular opening with open area equal to Lhmax·Lwmax (corresponding to opening factor 1.0). 
In addition to the thermal properties, the zone volume must be input with the H/D/W option in &-NET-ZONes and only one window to an external node may be de.ned. 
As soon as the window to outside is opened, the actual zone temperature will be taken as the initial value for the thermal model. The zone temperature as de.ned in &-NET-ZONesor inaroom temperature schedule will be replaced with the time dependent zone temperature calculated with 
the thermal model. 
Description: 
Parameters 	Description 
Zone ID starting with ‘*’, followed by the identi.cation of a de.ned zone Conductivity Mean value of thermal conductivities of all walls in the zone Density Mean value of the densities of all walls in the zone 
Capacity 	Mean value of the thermal capacities of all walls in the zone. Obs.: capacity has the unit [J/kg/K] ! 
Wall Thickness 	Mean value of the thickness of all walls in the zone 
Default value ‘’ 
0.0 
0.0 
0.0 
0.0 
Input format, range String Real Real Real 
Real 
4.2 Network Description 
&-NET-LIN ks (Net Links) 
&-NET-LINks 
|Link|Type | Zone ID | Height | Own | Act. | 3Dflow | Schedule Name | | | |_________|_________| Height | Val. | or | (10char) | | | | | | | | Factor | | Press. |_______________| | ID |Name |From|To |From|To | | | | Ref Link Name | |(-) |(-) |(-) |(-) |[m] |[m] | [-] | [-] | [pres] | [-] | |____|_____|____|____|____|____|________|_______|________|_______________| 
Example 5 CRxx z1 z5 0. 0. 1. 1. # Links L1, L2 and L3 form a T-junction L1DS-1-1200 d 1 0 L2 L2DS-12z3 0 0 # Link from zone 2 to a zone with 4 Pa L3 DS-1 2 4Pa0 0 # Window with window schedule, fan with fan schedule L4WI-14500 1 1 0 W1 L5FA-15600 1 1 0 F1 
The zone identi.er denotes 
. 	
internal zones, 

. 	
external nodes (characterized by a preceding minus sign), or 

. 	
nodes with constant pressure (a value immediately followed by the key characters ‘Pa’ denote the pressure level in Pascal). 


A node with a constant pressure has a .xed wind pressure equal to the value given under Zone ID. For the total pressure, a stack pressure according to link height and ambient temperature is added. 
Height relations are shown in .gure 4.15. The absolute heights are the sum of the height of the zone reference plane plus link height in the respective zone. The absolute From and To height values are equal for horizontal links. If they are di.erent, the link is not horizontal and the .ow path is calculated as having a vertical component (e.g., a ventilation shaft). 
NOTE 	Internal (i.e. zone) nodes are located in the zone reference plane. External nodes are located in the ground plane. 
NOTE 	Window components may not have a vertical component. The program’s internal tolerance for warning about di.erences in the absolute From and To height of the window component is set to 
0.02 m. 
Three links consisting of duct components (&-DS) which connect one node with three other nodes represent a T-junction (see .gure 4.14). If the dynamic pressure loss due to converging or diverging .ow in the T-junction has to be taken into account automatically, the three links have to be input according to the following conventions: 
One part of the main (straight) duct must have the junction-node on its To side of the link. In the input line of this link, the ID of the link with the branch duct has to be given as reference link. (column Ref Link Name). The third link connecting the junction node is then interpreted as second main duct part. In the example, links L1 and L3 are the two main duct parts and link L2 is the related branch. Zone ‘a2’ is an auxiliary zone. In the current version of T-junction model, equal diameters for all of the three ducts and an angle of 90o for the branch duct are assumed. 
It is not allowed to have more than these three links to the central node (node ‘a2’ in the example). 
NOTE 	T-junctions often cause convergence problems. If this happens, even is solver type 6 (see page 58) is chosen, it is recommended not to use it, but to input the dynamic pressure loss in the junction as 
FROM TO L1 L3 

2 
4Pa
-1 L2 
Figure 4.14: De.nition of T-Junction nodes: 
At the link which constitutes the main (straight) part of a T-junction node, the TO node represents the 
junction node. In the input line of this link, the branch link has to be referenced in column Ref Link Name. 
The .gure corresponds to the example input. 

.xed coe.cients (zeta values) with the corresponding ‘DS’ components, according to an estimated 
Description: 
Parameters Description Default value Input format, range 

Link ID  Name of link  
Type Name  Pre.x and name of de.ned air .ow component  
(without preceding ‘*’)  
Zone ID From  From zone identi.er (zone must be de.ned!)  
Zone ID To  To zone identi.er (zone must be de.ned!)  
Height From  Height of link relative to From zone reference  
plane (see .gure 4.15)  
Height To  Height of link in relative to To zone reference  
plane (see .gure 4.15)  
Own Height Factor  Cosine of the angle between opening plane and  
vertical plane for slanted windows (see section  
&-WI, page 82 and .gure 4.8).  
Act. Val.  Actual Value for Crack (s. page 62)  
Actual RPM or Factor for Fan (s. page 65)  
OpeningFactorfor Window orDoor(s.  
page 82)  
Actual Scale Factor for Test Data (s. page 89)  
Factor for Zeta value for Duct (s. page 68)  
3D.ow or Press.  (not implemented)  
alternatively, if ap­ 
plicable:  
Schedule Name  Name of schedule applicable to the air .ow  
component. The .rst character of the name  
indicates the schedule type:  
W : Window schedule  
F : Fan schedule  
Ref Link Name  Reference link for T-junction  
or for Related Flow component  
(link must be de.ned!)  

--
--
0.0 
0.0 
1.0 
1.0 
0.0 Pa 
‘’ 
‘’ String 20 char String 10 char 
String 20 char String 20 char Real 
Real 
Real 0.0 ...1.0 
Real 
Real 
String 10 char 
String 5 char 
4.2 Network Description 

height 	Ground plane 
relationship between the .ows in the junction. 
NOTE 	A zone cannot be linked only with ‘RF’ components, there must also exist some normal links, like acrack or afan. 
Kitchen Hood Description under &-NET-LIN ks 
The following input under &-NET-LINks is required for the kitchen hood modelled with an unbal­anced related .ow component according to .gure 4.12 on page 93 
Example &-NET-LINks 
|Link|Type | Zone ID | Height | Height | Act. | 3Dflow | Sched Name | | | |_________|_________| Factor | Val. | or | (10char) | | | | | | | | | | Press. |_______________| | ID |Name |From|To |From|To | | | | Ref Link Name | |(-) |(-) |(-) |(-) |[m] |[m] | [-] | [-] | [pre] | [-] | |____|_____|____|____|____|____|________|_______|________|_______________| 
L1 CR1 -1 kit 1.1 1.1 L2 CR2 kit hoo 1.5 1.5 L3FA1hoo-23 3 d 800 d F1 L4RF1 hookit2.52.5 d d d L3 
The fan has a normal speed of 800 rpm and a schedule F1, which switches the fan in di.erent positions. To be able to use link L3 as reference, it must appear before the RF that is using it, or else the reference .ow rate would not be known or contain an old value at the time the related .owrate is calculated. 
It is recommended to use Related Flow types always in pairs to have balanced .ow, like in the next example. 
Example &-NET-LINks 
|Link|Type | Zone ID | Height | Height | Act. | 3Dflow | Sched Name | | | |_________|_________| Factor | Val. | or | (10char) | | | | | | | | | | Press. |_______________| | ID |Name |From|To |From|To | | | | Ref Link Name | |(-) |(-) |(-) |(-) |[m] |[m] | [-] | [-] | [pre] | [-] | |____|_____|____|____|____|____|________|_______|________|_______________| 
L1 CR1 -1 kit 1.1 1.1 L2 CR2 kit hoo 1.5 1.5 L3FA1hoo-23 3 d 800 d F1 L4RF1 hookit2.52.5 d d d L3 L5RF1 kithoo2.52.5 d d d L3 
This results in .ows in both directions and will have no e.ect on the .ow balance during the iteration process. It will result in the desired .ow exchange that can spread pollutants (see page 91). 
4.3 Schedules 
4.3 Schedules 
&-SCH-WIN dow (Window Schedules) 
&-SCH-WINdow schedules 
| Schedule | Time | Opening | 
| *WName | | Factor | 
|(-) | (-) |(-) | 
|___________|_____________________|__________| 

Example *W1 06:00 .50 
06:10 1.000 
06:15 .0 
08:00 .10 
12:00 .30 
18:40 .0 
*W2 	FRI_06:00 1.00 
FRI_07:00 .0 

07:00 .40 
08:00 .0 
or if the data are de.ned in a separate .le: 
F: W3 window1.dat 
With the window schedule the opening factor of a window can be changed. The schedule name must be referenced in the last column of the section &-NET-LINks in the lines with the corresponding windows. The value in column “Actual Value” of this line will be replaced by the value given in the schedule. 
NOTE 	In addition to the use as window schedule the &-SCH-WIN type may also be used for the other link types including the fan. The e.ect will be the same as for the window: 
The value in column “Actual Value” under &-NET-LINks will be replaced by the value given in the schedule. 
This is in contrast to the use of the &-SCH-FAN schedule type where the “Actual Value” will be multiplied with the value given in the schedule. 
Description:  
Parameters  Description  
Schedule *WName  Name of schedule or .le identi.er (incl. path). Name must be preceded by ‘*W’. Data .le assignment format: F: W<Name><.le name.ext>  
Time Opening Factor  Date and / or time Opening factor of window (see window de.nition page 82) (For all link types: This value replaces the “Actual Value” speci.ed under &-NET-LINks)  

Default value -
--Input format, range 
Name: String (2+) 8 char File: String 160 char 
Date time string Real 0.0 ...1.0 

&-SCH-FAN s (Fan Schedules) 
&-SCH-FAN schedules 
| Schedule | Time | Fan Speed | 
| *FName | | Factor | 
|(-) |(-) |(-)| 
|___________|____________________|___________| 

Example *F1 FRI 1.1 SAT 0.8 SUN 0.75 MON 1.4 *F2 06:00 1.0 
07:00 0.7 
18:00 1.18 
*F3 	WND 1.0 
WDY 0.5 

or if the data are de.ned in a separate .le: 
F: F3 Fan3.Dat 
Similar to the window schedule, the fan schedule is connected to the air .ow component by ref­erencing the schedule name in the corresponding line under &-NET-LINks. The input in column “Actual Value” under &-NET-LINks will be multiplied with fan speed factor. 
NOTE 	In addition to the use as fan schedule the &-SCH-FAN type may also be used for the other link types including the window. The e.ect will be the same as for the fan: 
The value in column “Actual Value” under &-NET-LINks will be multiplied with the value given in the schedule. 
This is in contrast to the use of the &-SCH-WIN type where the “Actual Value” will be replaced by the value given in the schedule. 
Description:  
Parameters  Description  
Schedule *FName  Name of schedule or .le identi.er (incl. path). Name must be preceded by ‘*F’. Data .le assignment format: F: F<Name><.le name.ext>  
Time Fan Speed Factor  Date and / or time Multiplication factor for actual fan speed spec­i.ed in “Actual Value” in &-NET-LINks section  
(For all link types: This value multiplies the “Actual Value” speci.ed under &-NET-LINks)  

Default value -
--Input format, range 
Name: String (2+) 8 char File: String 160 char 
Date time string Real = 0.0 

4.3 Schedules 
&-SCH-TEM perature (Temperature Schedules) 
&-SCH-TEMperature schedules 
|  Schedule |  Time  |Temperature|  
|  *TName  |  |  |  
|  (-)  |  (-)  |  (temp)  |  

|___________|____________________|___________| 
Example *T1 	SAT 17 MON 20 
or if the data are de.ned in a separate .le: 
F: T2 Temp.Dat 
Temperature values from a schedule replace the present temperature values for all zones with the respective schedule name in the last column of the &-NET-ZONes description 
Description: 
Parameters Description Default value Input format, range 

Schedule *TName  Name of schedule or .le identi.er (incl. path).  
Name must be preceded by ‘*T’.  
Data .le assignment format:  
F: T<Name><.le name.ext>  
Time  Date and / or time  
Temperature  Room temperature value  

-
--(oC) Name: String (2+) 8 char File: String 160 char 
Date time string Real 

&-SCH-HUM idity (Humidity Schedules) 
&-SCH-HUMidity schedules 
| Schedule | Time | Humidity | 
| *HName | | | 
| (-) | (-) | (humi) | 
|___________|____________________|___________| 

Example *H1 07:00 12 
07:40 10 
08:00 11 
or if the data are de.ned in a separate .le: 
F: H2 Hum2.Dat 
Humidity values from a schedule replace the present humidity values for all zones with the respec­tive schedule name in the last column of the &-NET-ZONes description 
NOTE 	The humidity must be set to zero in all zones if it is de.ned as pollutant under &-POL-DES and under &-NET-ZP, and transport mechanism shall be studied. For details, see page 36. 
Description: 
Parameters Description Default value Input format, range 

Schedule *HName  Name of schedule or .le identi.er (incl. path).  
Name must be preceded by ‘*H’.  
Data .le assignment format:  
F: H<Name><.le name.ext>  
Time  Date and / or time  
Humidity  Humidity in a zone  

-
--(g/kg) Name: String (2+) 8 char File: String 160 char 
Date time string Real >=0.0 

4.3 Schedules 
&-SCH-SIN k (Sink Schedules) 
&-SCH-SINk schedules 
| Schedule | Time |Sink Factor| 
| *SName | | | 
|(-) | (-) |(-) | 
|___________|____________________|___________| 

Example *S-H2O 12:00 0.5 
18:00 0.0 
*S-20-H2O 20:00 1.2 

00:30 0.3 
or if the data are de.ned in a separate .le: 
F: S-CO2 Sink.Dat 
The sink schedule name has to start with ‘*S’, followed by an optional combination of digits and separators, followed by the .rst unambiguous part of the name of the pollutant. The optional part may be used to make more schedules for one and the same pollutant. 
The format for the sink schedule name is *S[number]polname 
*S mandatory characters [number] optional sequence of digits and separators (‘-’, ‘ 
’, ‘.’, ‘:’, ‘[’, ‘]’) polname .rst unambiguous part of the pollutant name 
A few examples are: Spol1,or SCO,or S23pol1. 
For each zone for which the schedule name is found in the last column of the keyword &-NET-ZONes, the value of the corresponding sink strength in the zone pollutant description, &-NET-ZP, is changed. The sink strength is multiplied with the sink factor given in the sink schedule. 
Description: 
Parameters Description Default value Input format, range 

Schedule *SName 	Name of schedule or .le identi.er (incl. path). Name must be preceded by ‘*S’; it must be followed by either a combination of numbers and separators like ‘-’ or ‘ ’, followed by the .rst unambiguous part of the name of the desired pollutent, or by the .rst unambiguous part of the name of this pollutant directly. Data .le assignment format: 
F: S<Name><.le name.ext> Time Date and / or time Sink Factor Factor of actual sink strength to value given 
in zone pollutants data block (&-NET-ZP on page 98) 


-

--
Name: String (2+) 8 char 
File: String 160 char 
Date time string Real = 0.0 

&-SCH-SOU rce (Source Schedules) 
&-SCH-SOUrce schedules 
| Schedule | Time | Source Factor| 
| *QName | | | 
|(-) |(-) | (-) | 
|___________|____________________|______________| 

Example *Qh2o 11:40 1.0 
12:40 0.1 
*Q-CO2 00:00 2 

09:00 40 
12:00 2 
or if the data are de.ned in a separate .le: 
F: QCO2 OccSou.Dat 
The source schedule name has to start with ‘*Q’, followed by an optional combination of digits and separators, followed by the .rst unambiguous part of the name of the pollutant. The optional part may be used to make more schedules for one and the same pollutant. 
The format for the source schedule name is *Q[number]polname 
*Q mandatory characters [number] optional sequence of digits and separators (‘-’, ‘ 
’, ‘.’, ‘:’, ‘[’, ‘]’) polname .rst unambiguous part of the pollutant name 
A few examples are: Qpol1,or QCO,or Q23pol1. 
For each zone for which the schedule name is found in the last column of the keyword &-NET-ZONes, the value of the corresponding source strength in the zone pollutant description, &-NET-ZP,is changed. The source strength is multiplied with the source factor given in the source schedule. 
Description: 
Parameters Description Default value Input format, range 

Schedule *QName  Name of schedule or .le identi.er (incl. path).  
Name must be preceded by ‘*Q’;  
it must be followed by either a combination of  
numbers and separators like ‘-’ or ‘ ’, followed  
by the .rst unambiguous part of the name of  
the desired pollutant,  
or by the .rst unambiguous part of the name  
of this pollutant directly.  
Data .le assignment format:  
F: Q<Name><.le name.ext>  
Time  Date and / or time  
Source Factor  Factor of actual source strength to value de­ 
.ned in zone pollutant data block (&-NET-ZP  
on page 98)  

-
--
Name: String (2+) 8 char 
File: String 160 char 
Date time string Real = 0.0 

4.3 Schedules 
&-SCH-OCC upant (Occupant Schedules) 
&-SCH-OCCupant schedules 
|Schedule | Time | Zone |Activity Level | Number of | |*OCCn | | ID |Factor | Occupants | |(-) | (-) |(-)|[-] | [-] | |___________|____________________|_________|_______________|___________| 
Example  *OCC1  07:00  z1  0.75  1  
07:00  z6/z7  1.00  0  
07:30  z2/z3/z5  1.00  5  
07:50  z9/z4/z8  1.00  2  
08:00  z1-z9  0.75  4  
12:00  z1-z9  1.00  0  
13:00  z6/z7  0.75  28  
or if the data are de.ned in a separate .le:  
F: OCC2  Occup.dat  

The name of the schedule determines which occupant type the schedule entry refers to. The schedule name must be ‘OCC1’ to ‘OCC5’ (preceded by ‘*’) which means that the schedule data belongs to occupant type identi.ed by number 1 to 5. 
Without occupant schedule, an occupant type de.ned in data section &-OCCUPANt is not attached to any zone. An occupant type can be absent or be present in one or more zones during a timestep. More precisely, the number and the activity level of an occupant type in the zones may vary. If an occupant shall be absent in a certain zone after that occupant had been present, the number of occupants of that type must be explicitly set to zero. In the example, occupants of type one are ‘removed’ from zones z6 and z7 at 7:00, and from zones z1 – z9 at 12:00. Moving two occupants to zones z9, z4 and z8, respectively at 7:50 does not change the occupant number of any other zone. Never setting an occupant number for a zone is equivalent to setting the number of occupants of that type to zero. I.e., if a zone z10 would exist in the example, it never would be occupied by any occupant. 
Because more than one zone at a time can be a.ected, lists of zone identi.ers can be speci.ed. 
Description:  
Parameters  Description  
Sched. *OCCn  Name of schedule or .le identi.er (incl. path).  
Name must be preceded by ‘*OCC’. Allowed  
names are ‘n’, where 1 = n= 5 is the occupant  
type number.  
Data .le assignment format:  
F: OCC<n><.le name.ext>  
Time  Date and / or time  
Zone ID  (List of) Zone Identi.er(s) of zone(s) in which  
the occupant is located. Zone must be de.ned  
(ranges are allowed).  
Activity Level Fac- Factor of actual activity to the one speci.ed  
tor  in the occupant description data section.  
Number  of  Occu- Number of occupants  
pants  

Default value -
--
1.0 1 
Input format, range 
Name: String (2+) 8 char 
File: String 160 char Date time string 
Real = 0.0 Integer = 0 

This allows to change the presence of an occupant type simultaneously for more than one zone. Conversely, occupants may change presence and activity di.erently in di.erent zones at the same time. Therefore, more than one entry with the same date and time may be given in the occupant schedule. An example of occupancy and occupant schedule can be found under the factory example on pages 135.. 
The activity level of an occupant type (de.ned under OCCUPANt) is determined by the activity level factor given in the respective schedule line, but only for the zones speci.ed in the schedule. The number of occupants of an occupant type is set to the number of occupants given in the respective schedule line, but only for the zones speci.ed in the schedule. The (additional) source strength of pollutants due to the presence of occupants is the product of number of occupants, activity level factor and the nominal source strength de.ned under &-OCCUPANt. 
The activity level of an occupant type may be set to zero. If the number of occupants of that type in the respective zone is greater than zero at the same time, the occupant type acts like a sensor: it does not contribute to the source strength in the zone. However, this type is exposed to the possible pollution due to other pollutant sources or even other quantities like air .ow in the zone. This exposure then may be evaluated with an appropriate histogram output. For details, see general remarks on pollutants on pages 36. and de.nition of histograms, especially for occupants, on pages 40.. 
Values for number of occupants or both number of ocupants and activity level factor or may be left blank in the schedule. Then their default values are assumed during the next time step. The default values are 1.0 for the activity level factor and 1 for the number of occupants. 
4.3 Schedules 
&-SCH-MET eo Data (Meteo Data Schedule) 
&-SCH-METeo data 
|1.| Dataset Name | 
|__|______________| 
|2.| Time | Wind |Temperature |Humidity |Barometric | |__| |__________________| | |Pressure | | | Speed |Direction| | |Absolute | |(-) |(velo) | (deg) | (temp) |[humi] | [kPa] | |_________________|________|_________|____________|_________|___________| 
Example 	Meteoname 1968may23_08:30 2.0 10 15.1 8.4 98.80 1968may23_12:45 0. 0. 20. 10. 101.325 
or, if .le assigned: 
F: berk87.met COMIS 
The meteo data can be stored under the keyword &-SCH-MET in the CIF-.le or in a separate weather .le. When using a weather .le, the data under the .rst header of the meteo schedule must contain a data .le assignment, marked by an ‘F:’ followed by the respective .lename and a keyword for the meteo data .le format. When both, separate weather .le and meteo description in the CIF-.le, are used and there are entries for the same time in both .les, the CIF meteo description ‘overwrites’ the weather .le data. 
NOTE If schedule data are entered in the CIF-.le, data set name is required. 
There is a conversion utility COMISweather available which can be downloaded from the COMIS eGroups homepage, 
http://groups.yahoo.com/group/comis/ 
Weather .les of di.erent formats can be converted to COMIS format with this tool. 
Description: 
Parameters Description Default value Input format, range 

Dataset name  Any name  
For data .le assignment:  
F:<.lename><format>  
Time  Date and time  
Wind Speed  Wind speed at meteo station reference height  
Wind Direction  Wind  direction  at  meteo  station  reference  
height  
Temperature  Dry bulb temperature at meteo station  
Humidity  Absolute humidity at meteo station  
Pressure  Absolute  barometric  pressure  at  meteo  
stationa  


jan01 
0.0 m/s 
0.0 
20.0 oC 
0.0 g/kg 
101.325 

String 80 char String, <format>= 
COMIS or DOE2 Date time string Real >0.0 Real 0.0 ...360 
Real Real Real >0.0 
a 
The barometric pressure must be in kPa. 

Two formats are allowed for the weather .le. 
1. COMIS format (default) 
The data format for CIF schedule input can be used in the weather .le, too. That is, every data line starts with a date time string followed by the information about wind speed, wind direction, etc. If there are data missing, the program assumes default values. 
Example 	1991may23_08:30:10 2.0 10 15.1 8.4 98.80 
1991may23_09:35:30 1.8 11 15.1 8.4 97.00 

If many sets of weather data in equal time steps are used, a more convenient way of inputting the data is to specify the start time and the time interval between the data lines in the .rst line of the meteo data .le. The .rst character of this line must be an asterisk (‘*’) to mark that this kind of format is used. It is not necessary to specify both parameters, default values are: start time = Jan 01 and hourly data changes. 
Examples *1991may23_10:00 3600 
2.0 10 15.1 8.4 98.80 
2.3 11 16.0 8.4 97.00 
or 
*1991jun01_ 
2.0 10 15.1 8.4 98.80 
2.3 11 16.0 8.4 97.00 
or 
* 
2.0 10 15.1 8.4 98.80 
2.3 111 6.0 8.4 97.00 
The weather data .le may contain blank lines, which are ignored. 
Since the weather .le is sequentially read by the program, the time statement must at least consist of month and day speci.cation. If the year is omitted, the year of the start of the simulation interval is assumed. A time statement only containing a time and no date cannot be processed in that way that the program repeatedly reads the data of this line for every day which shall be simulated. 
2. DOE2 format 
It is also possible to use weather .les in the (packed) DOE-2 format. This has the advantage that not two di.erent weather .les need to be stored if the user runs both, DOE-2 and COMIS simulations (DOE-2 is a thermal simulation program). 
The program expects the weather data to be in the DOE-2 format when the keyword “DOE2” is speci.ed after the .lename in data block 1. 
Example 	F: zagreb.bin DOE2 
4.3 Schedules 
&-SCH-POL lutant (Outdoor Pollutant Concentration Schedule) 
&-SCH-POL outdoor concentration data 
|1.|DATASET NAME 	| 
|__|______________| 
|2.| Time | Pollutant Concentration | |__| |_________________________________________________| | |No1 |No2 |No3 |No4 |No5 | | (-) | (conc?) | (conc?) | (conc?) | (conc?) | (conc?) | |____________________|_________|_________|_________|_________|_________| 
Example Typical_Pollutant_1 
0101_00:00 0. 0. 0. 0. 0. 

Or in case of a pollutant .le assignment: 
F: examp88.poll 
The concentrations given here are global outdoor values for the pollutants no 1 to 5, if de.ned under &-POL-DES. For every external node, individual factors can be de.ned under &-NET-EXTernal node. The schedule concentration of pollutant no. 1 is multiplied with the outdoor concentration factor (third column of &-NET-EXTernal) of the nodes. The same is done with the pollutants no. 2 to 5. 
If no concentration is found for a pollutant in the pollutant schedule, 0.0 is taken as default. 
The keyword meteo in the column of the pollutant ‘H2O’ may be used to indicate that the water vapour concentration shall be taken from the meteo schedule. 
NOTE 	If the keyword SCH-POL is missing or has no data, and if pollutant ‘H2O’ is de.ned, the concen­tration values for ‘H2O’ are taken automatically from the meteo schedule. 
This means that it is necessary to set the outdoor concentration of ‘H2O’ explicitly to zero with this schedule if humidity input under &-NET-ZON (and &-NET-ZL, &-SCH-HUM)is used. 
How pollutant calculation routines are activated is described under data section &-NET-ZP on page 98. 
NOTE 	If schedule data are entered in the CIF-.le, data set name is required. 
Description: 
Parameters 	Description Default value Input format, range 
Dataset name 	Any name. Default: ‘OutsidePollutant’ (see description) String 80 char For data .le assignment: F:<.lename> 
Time 	Date and time jan01 

Date 
time string 
Pollutant Concen- Global outdoor pollutant concentration for  0.0  Real = 0.0  
tration  pollutants no 1 dots 5;  
the number of concentration values per line  
must be equal to or or larger as the number of  
pollutants de.ned  

&-SCH-MUL ti schedule data (Multi schedule data) 
&-SCH-MULti schedule data 
|1.| Multi Schedule | 
|__| Filename | 
|________________________| 

|2.| Schedule1 | Schedule2 | ... | Sch10 | 
|__| | ||| 
| Name | Name | Name | Name | 
|______________|___________|______|_______| 

Example F: multi.dat t.house INVALID t.attic 
The multi schedule is used to avoid having a separate .le for each schedule. Entries in the multi schedule have to be sorted in ascending order of time. The values of the last data line in a multi schedule are valid for the rest of the simulation, irrespective of the interval length until the stop time of the simulation. No cyclic ‘reuse’ of schedule data is possible for multi schedule data. 
No sorting needs to be done internally by the Time Management System during the program run if no other schedule is used. 
Schedules supported by multi schedule are: 
Window (W), Fan (F), Temperature (T), Humidity (H), Sink (S), Source (Q), Meteo (MET) and Pollutant (POL). 
The schedule names have to correspond to the conventions de.ned in the preceding chapters. The prede.ned characters of the schedule names are given in brackets. However, the meteo schedule spawns over several columns in the multi schedule .le: 
Wind speed Wind direction Temperature Humidity Pressure 
The Pollutant Schedule uses the names ‘pol1’ to ‘pol5’ for the outdoor pollutants no 1 to 5. 
If the name is ‘INVALID’ the column is skipped. 
The multi schedule .le has a form similar to the COMIS weather .le (see section SCH-METeo data on page 114). In the .rst line is an asterisk, optionally followed by the start time and date and the interval length in seconds. It is not necessary to specify both parameters when one wants to accept the defaults: start time = Jan 01 and hourly data changes. 
The next line gives the names of the schedules. These have to match the names in the CIF-.le (‘INVALID’ in the CIF-.le matches any name, however). After this header the schedule data follow. 
Description:  
Parameters  Description  
Filename  Name (incl. path) of the Multi Schedule File F: <.le name.ext>  
Name  Name of the schedule in the appropriate col­umn. The type of the schedule is determined by the name. If the name is ‘INVALID’ the column is skipped. Names are case sensitive.  

Default value 
Input format, range String 160 char 
Name: 
String 10 char. Line (names incl. spaces): 
200 char Max. 10 columns 
4.3 Schedules 
Example 	* 1992jan01_0:00 3600 t.house pol1 t.attic 
20.1 .1E-4 18.3 
23.4 .3E-4 19.1 
NOTE Only one multi schedule .le is allowed per input .le. 
4.4 Building Description 
&-CP-BUIL ding (Building Reference Height) 
&-CP-BUILding reference height for Cp data 
| Height | 
| (m) | 
|__________| 

Example 10.0 
Cp values for a speci.c building relate the wind pressure at the facade to wind speed and direction at a certain height above ground. This building reference height, usually the eaves height of the building (see .gure 4.17 on page 124), is input here. 
In COMIS, the facade is divided into facade elements. Cp values for facade elements are input under &-CP-VALUes. With that, the wind pressure at the external nodes, de.ned under &-NET-EXTernal nodes, is also known. Wind data, given in &-SCH-METeo data, from the meteorology station, de­scribed under &-ENV-WINd, is converted to wind data at building reference height. 
In case of low buildings in rough terrain and large surrounding obstacles, Cp data from wind tunnel or on site measurements should be used. 
Description: 
Parameters Description Default value Input format, range 

Height Reference height for wind data to which build-10.0 Real > 0.0 ing cp-values are related 
4.4 Building Description 
&-CP-VALU es (Cp Values) 
&-CP-VALUes 
|1.|Dataset Name | 
|__|______________| 
|2.| * | Wind Direction with respect to Building Axis (first line ) | |__| Facade | Cp Values (second and following lines) | |Elem.Name| | | | | | | | | | | |(deg) |[deg] |[deg] |[deg] |[deg] |[deg] |[deg] |[deg] |[deg] | | (-) |(-) |[-] |[-] |[-] |[-] |[-] |[-] |[-] |[-] | |___________|______|______|______|______|______|______|______|______|______| 
Example Example_House 
* 0 90 180 270 
1 -.5 .8 -.5 -.8 

or 
My_House 
* 0 90 180 270 
4 1.0 -.49 -.45 -.49 
2 -.49 1.0 -.49 -.45 
3 -.45 -.49 1.0 -.49 
1 -.49 -.45 -.49 1.0 

* 351 352 353 
4 -.49 -.45 -.49 

2 1.0 -.49 -.45 
3 -.49 1.0 -.49 
1 -.45 -.49 1.0 

or if data .le assignment: 
F: leso.cp1 
Wind pressure coe.cients (Cp values) belonging to a certain facade element can be given for several wind directions. The angle of the wind direction is measured clockwise relative to the building axis, see .gure 4.16. The building axis can be de.ned as .ts best to the project. 
More than one data set may be given, thus allowing for more wind direction columns. The facade element names must be the same in each data set. Each data set can have a maximum of eight 
Description:  
Parameters  Description  
Dataset name  Dataset name  
Facade Elem.name  For data .le assignment: F:<.lename> First line: ‘*’, next lines: Name or number of facade element to which  
Wind Direction with respect to Building Axis Cp Values  Cp values in data line belong Wind direction is given relative to the building axis (measured clockwise). The .rst data line contains the wind direction values. 0o : against direction of building axis Wind pressure coe..cients for wind directions given in the .rst data line  

Default value ‘cpname’ 
-
0.0 
0.0 
Input format, range String 80 char String 20 char 
Real 0.0 . . . 360.0 
Real 
wind direction columns. NOTE If schedule data are entered in the CIF-.le, data set name is required. Cp values can be obtained from di.erent sources. The most important sources are listed below. 
1: 	Literature: “rough-and-ready” approximate values of Cp are conveniently tabulated in many publications – such as the highly recommented AIVC Technical Note 44 [1], for di.erent shapes and sizes of buiding. Technical Note 27 [2] is more appropriate for Cp values of dwellings with a pitched roof. The AIVC publish other technical reports that may also be of interest (see http://www.aivc.org). ASHRAE Fundamentals also has some data, but this is not as comprehensive. 
2: 	Computer programs using data bases (Examples): When given the building geometry, these calculate Cp values according to a correlation from a database of measurements. However, we can not guarantee that such programs provide more accurate Cp values than conventional tabulated data. None of these programs are sold commercially yet, but you can use them now by contacting the developers. 
. 	
“CPCALC+” contact assoc. prof. Mario Grosso, School of Architecture, Polytechnic Uni­versity of Turin, Viale Mattioli 39, 10125 Torino, Italy. 

. 	
“Cp-Generator” developed at TNO applied research organisation. See publication Airbase NO 9060 entitled: Pressure simulation program. by Knoll B, Pha. J C and de Gids W F. (Proceedings 16th AIVC conference). See also AIVC’s Air In.ltration Review Vol. 17, No. 3, june 1996. Since these publications came out, major improvements have been made to Cp-generator. Also validations have been carried out and are still going on. It even has output formatted for COMIS. 


3: 	Detailed modelling with specialized CFD software: computational .uid dynamics (CFD) mod­elling provides almost as good results as wind-tunnel measurements. 
4: 	Wind-tunnel measurements: these are the most reliable data. 
4.5 Environment Description 
4.5 Environment Description 
&-ENV-BUI lding (Building Related Parameters) 
&-ENV-BUIlding related parameters 
|1.| Altitude |Angle Building | Geographic Position | |__| |_______________|____________________________| | |North to Axis |Latitude +=N | Longitude +=E| | (m) | (deg) | [deg] -=S | [deg] -=W| |_____________|_______________|_____________|______________| 
Example 588.0 34.04 7.65 10.0 
The building axis can be de.ned as .ts best to the project. Its angle is measured clockwise from north, see .gure 4.16. 

Description: 
Parameters Description Default value Input format, range 

Altitude  Altitude of ground plane above sea level  
Angle Building  Angle from north to the building axis, mea­ 
sured clockwise (see .gure 4.16); 0o :north  
Latitude  Latitude > 0o : northern hemisphere Latitude  
< 0o : southern hemisphere  
Longitude  Longitude > 0o : east Longitude < 0o :west  

0.0 
0.0 
43.0 
0.0 
Real Real 0.0 . . . 360.0 Real -90.0 . . . 90.0 Real -180.0 . . . 180.0 
&-ENV-WIN d (Wind and Meteo Related Parameters) 
&-ENV-WINd and meteo related parameters 
|1.| Ref. Height | Altitude | Wind Velocity | |__| for Wind Speed| Meteo Station | Profile Exponent | | | | Meteo Station | | (m) | (m) | (prof) | |__________________|_______________|__________________| 
|2.| Wind Direction | Wind Velocity | |__| Angle | Profile Exponent | | | Building Location | | (deg) | (prof) | |___________________|___________________| 
Example  10.0  456  0.14  
0  .22  
45  .16  
90  .33  
175  .28  

COMIS supports the two main approaches for wind velocity pro.les, the power law pro.le and the logarithmic pro.le. At the keyword &-PR-UNITS (see page 49) the pro.le to be used can be chosen. Default is power law pro.le. 
No matter which pro.le is taken, the validity for urban areas is usually small, unless the building is taller than its surrounding. In case of low buildings in rough terrain and large surrounding obstacles, direct Cp data from wind tunnels or on site measurements should be used. 
From this it is clear that the wind velocity at building reference height (see &-CP-BUIL)is not a direct input. 
The program uses the given wind speed at the meteo site in reference height to calculate the speed above the boundary layer using the wind velocity pro.le of the meteo station. The boundary layer is 60 m high for smooth terrain. In rough terrain, the height of the boundary layer is increased. For the power law pro.le, the condition for rough terrain is a>0.34, and for the logarithmic pro.le, z0 >1.5. 
Description: 
Parameters Description Default value Input format, range 
Ref. Height for Wind Speed Altitude Meteo Station Wind Velocity Pro.le Exponent Meteo Station Height above ground for wind data at the me­teo station Altitude of meteo station above sea level 
Parameter of the wind mean velocity pro.le at meteo station. Exponent a in power law function or z0 for logarithmic pro.le. 
10.0 
0.0 
0.14 
Real 
1.0 <hm <400.0 Real 
Real 
0.085 <a= 0.87, 0.0002 <z0 = 40.0 
Wind Direction Angle Wind Velocity Pro.le Exponent Building Location Angle of wind direction measured clockwise from north, see .gure 4.16 Parameter of the wind mean velocity pro.le at building location. Exponent ain power law function or z0 for logarithmic pro.le. 
0.0 
0.18 
Real 0. ...360. 
Real 
0.085 <a= 0.87, 0.0002 <z0 = 40.0 
4.5 Environment Description 

b0 
The wind speed above the boundary layer at the meteo station is assumed to be equal to the wind speed at the same height above ground at the building location. With the wind pro.le near the building the velocity at the building reference height de.ned in &-CP-BUILding is calculated. 
The following table [27] gives comparable values of z0and a and the respective values for the height above ground of the boundary layer (zbound). 
z0 a 
zbound 
terrain 	(according to meteorological de.nitions) 
(m) (-) 
(m) 



0.0002 
0.085 
60 
sea 
0.005 
0.118 
60 
.at 	no obstacles, beach, ice plain, snow 
0.01 
0.128 
60 
0.03 
0.149 
60 
open 	low grass, .eld without crop (fallow land) 
0.07 
0.171 
60 
0.10 
0.182 
60 
roughly open 	low crops, low hedges, few trees, very few h 
0.25 
0.218 
60 
rough 	high and low crops, large obstacles at distances 15*H, dense rows of trees, low orchards 
0.5 
0.257 
60 
very rough 	obstacles at distances of 10*H, spread wood farm buildings, vineyards 
1.0 
0.313 
60 
closed 	obstacles at distances of less than a few times H, large woods, villages, small cities 
2.0 
0.377 
80 
city centre 	alternated low and highrise, old woods with trees alternated with frequent open areas 
5.0 
0.456 
200 
10.0 
0.542 
400 
20.0 
0.668 
800 
40.0 
0.869 
1600 
Reference values for a: 
0.10 : level surface with very small obstructions, grassland; 
0.22 : rolling or level surface broken by numerous obstructions, such as trees or small houses; 
0.32 : heterogeneous surface with structures larger than one story 
4.6 Pollutant Data 
&-POL-DES cription (Pollutant Description) 
&-POL-DEScription 
| No | Name | Molar Mass | Decay | | (-) | (-) | (g/mol) | [1/s] | |_____|__________________|____________|_________| 
Example  1  pollutant_x  28.6  
2  CO2  44  
3  FORMALDEHYD  30  

Pollutant names may be longer than the fraction used for referencing in source and sink schedule names (see &-SCH-SINk on page 110, &-SCH-SOUrce on page 111) and at the occupant de.nition (see &-OCCUPANt on page 112). 
How pollutant calculation routines are activated is described under data section &-NET-ZP on page 98. 
NOTE 	Pollutants have to be numbered continuously starting with 1. De.ning three pollutants with number 1, 3, 5 will lead to errors! 
Molar Mass data is only used when needed according to how the source/sink strengths and con­centration units are de.ned. Molar Mass has no e.ect for the pollutant ‘ODOUR’ that only may be used with units ‘olf’ and ‘decipol’. 
The decay constant rk is de.ned as follows: 
dm 
= -rk · m
dt 
Description: 
Parameters Description Default value Input format, range 

No  Number of pollutant; continuous numbering,  1  Integer 1 ...5  
beginning with 1.  
Name  Name of pollutant;  ‘pollutantx’  String 30 char  
a pollutant name must start with a character  
A..Z,a..z  

Molar Mass  Molar mass of respective pollutant  28.6 g/mol  Real > 0.0  
Decay  Pollutant speci.c decay constant due to e.g.  0.0 1/s  Real = 0.0  
radioactivity  

4.6 Pollutant Data 
&-POL-FIC tive Sources (Pollutant Fictive Sources) 
&-POL-FICtive source 
| | Pollutant | Fictive | Dependency | | No | name | Source | indicator | | (-) | (-) | [sour?/dep]| [-] | |_______|___________|____________|____________| 
Example  1  CO2  1.44E-7  2  
#  defined in  0  no  dep  
#  &-POL-DES  1-3  Room  dep  
#  5-6  Occ  dep  

Fictive sources are used for the determination of the e.ective .ow in a zone. For the de.nition and use of .ctive sources, please refer to section on E.ective Flow rates on page 38. 
The following table shows the meaning of the possible values for the dependency indicator: 
Dependency Indicator 0 1 2 3 5 6 Description no dependency zone .oor area dependency zone wall area dependency zone volume dependency occupant number dependency average occupant activity dependency 
The wall area includes the area of .oor, ceiling and walls. 
Dependency unit [dep] 
1 
[m2] 
[m2] 
[m3] 
[person] 
[W/m2] 

NOTE 	The zone volume must be input in the H/D/W format at &-NET-ZON because these values are used to calculate wall and .oor area. 
The average occupant activity is the mean activity of all occupant types in the zone under consid­eration: .
occ num · occ act
types 
< activity >= .occ num
types 



Description: 
Parameters Description Default value Input format, range 

No  Number of .ctive source  
Pollutant Name  Name  of  pollutant  de.ned  in  
&-POL-DEScription  
Fictive Source  Source strength of .ctive source  
Dependency  indi- Indicator for dependency of source strength on  
cator  room or occupant parameters  

-‘pollutantx’ 
0.0 kg/s/[dep] 0 Integer String 30 char 
Real Integer 0 ...3, 5,6 
4.7 Occupant Data 
&-OCCUPAN t (Occupant Description) 
&-OCCUPANt description 
|*No | Sex | Age | Height| Mass| Metabolic| Cigarets| Name | || || ||Rate| | | | (-)| (-) | (a) | [m] | [kg]| [W] | [1/h] | (-) | |____|______|_____|_______|_____|_________ |_________|______| 
| Pol Name| Source strength| Pol Name| Source strength| Pol Name| Source strength| | [-] | [sour?] | [-] | [sour?] | [-] | [sour?] | |_________|________________|_________|________________|_________|________________| 
Example *1 MIX 20. 1.7 70. 58. 0.0 adult 
CO2 d H2O 5.5E-6 
*2 MALE 5 1.03 15 60 0 child 

Occupants may contribute to the source strength of certain pollutants in zones. Until now ‘CO2’, ‘H2O’, and ‘ODOUR’ are interpreted as occupant sources. These sources are activated only 
. 	
if the name (‘CO2’, ‘H2O’ and / or ‘ODOUR’) has been given in the second data block; 

. 	
if occupants are active in the zone, i.e. the occupant activity level factor and the occupant number de.ned in &-SCH-OCC must be larger than zero; 


Description: 
Parameters Description 	Default value Input format, range 
No  Occupant type number  
Sex  Keyword for sex S: MALE MIX FEM:ale  
Age  Age A  
Height  Height H  
Mass  Body mass M of occupant  
Metabolic Rate  Metabolic Rate MR  
Cigarets  Average number of cigarets the occupant type  
smokes per hour  
Name  Occupant type name. This name is only used  
for identi.cation in outputs of default values  
and precalculated values. It may not be used  
as reference in the input .le. Reference in the  
input.le is always the occupant type number.  
Pol Name  First unambiguous part of the name of a  
pollutant de.ned under &-POL-DEScription;  
valid Pol Name’s here are ‘CO2’, ‘H2O’ and  
‘ODOUR’  
Source Strength  Nominal source strength of the occupant type;  
if ‘d[efault]’ is given here in the second data  
block, the source strength is calculated from  
Metabolic Rate in data block 1;  

-
MIX 
20 
f(S,A) 
f(S,A) 
f(S,A,H,M) 

0.0 
‘No 
name 
given’ 
‘’ 
f(MR) [kg/s] Integer 1 ...5 Keyword string Real > 0.0 Real > 0.0 Real >0.0 Real > 0.0 Real = 0.0 
String 10 char 
Real = 0.0 
4.7 Occupant Data 
. 	
if the name of a pollutant de.ned under &-POL-DES matches a valid abbreviation (‘CO2’, ‘H2O’ and / or ‘ODOUR’). 

. 	
if pollutant calculation is enabled under &-PR-SIMU 

. 	
if pollutant calculation is enabled under &-NET-ZP 

There are several possibilities to get the nominal source strength for pollutants ‘CO2’, ‘H2O’, and ‘ODOUR’ of an occupant type. Basically, occupant source strengths are either explicitly input in the second data block, or they are calculated from the metabolic rate. In detail, this means: 

. 	
explicit input in second data block, then inputs for Age, Height, Mass,and Metabolic Rate in the .rst data block are ignored; 

. 	
input of the Metabolic Rate in column 6 of data block 1, then Sex, Age, Height,and Mass input are ignored, the nominal source strength is calculated from the Metabolic Rate if no value or d[efault] is given for the Source strength in data block 2; 

. 	
input of Sex, Age, Height,and Mass, if no Metabolic Rate is given, it is calculated from these four values, the nominal source strength is calculated from the Metabolic Rate if no value or d[efault] is given for the Source strength in data block 2; 

. 	
input of Sex, Age,and Height, if no Mass is given, it is calculated from Sex,and Age, if no Metabolic Rate is given, it is calculated from these four values, the nominal source strength is calculated from the Metabolic Rate if no value or d[efault] is given for the Source strength in data block 2; 

. 	
input of Sex,and Age, if no height is given, it is calculated from Sex,and Age, if no mass is given, it is calculated from Sex,and Age, if no metabolic rate is given, it is calculated from these four values, the nominal source strength is calculated from the Metabolic Rate if no value or d[efault] is given for the Source strength in data block 2; 


That means: sex and age are su.cient input to determine the default value of the nominal source strength for ‘CO2’ and ‘H2O’. The only use of data sex, age, height and mass is to calculate the default of the nominal source strength. It gives reasonable values also for children. The default is replaced by the explicit input of a nominal source strength in data block 2. 
The actual occupant source strength for ‘CO2’ and ‘H2O’ in a zone is the product of the number and the activity level factor of that occupnat type de.ned in &-SCH-OCC and the nominal source strength de.ned in, or calculated from, data under &-OCCUPANt. 
Cigarettes are regarded solely as source for the pollutant ‘ODOUR’. The actual occupant source strength for ‘ODOUR’ in a zone is the sum of odours of human origin plus cigaret odour. The .rst term is the calculated the same way as for ‘CO2’ and ‘H2O’. The second term is the product of the number of occupants de.ned in &-SCH-OCC and the source strength stemming from the cigarets that this occupant type smokes per hour, input in the .rst data block under &-OCCUPANt. 
1 cigarette/hour is about 1 olf. A metabolic rate of 104 W also leads to an odour source strength of about 1 olf. 
NOTE 	The units ‘olf’ for source strength and ‘decipol’ for concentration must be used for the pollutant ‘ODOUR’. They must be de.ned in the PR-UNITS section for input and output. 
References 
[1] Orme, Malcolm, Liddament, Martin W., and Wilson, Andrew: “Numerical Data for Air In.l­tration & Natural Ventilation Calculations” AIC-TN-1994, Reprinted and Updated February 1998, Air In.ltration and Ventilation Centre, Bracknell, UK, 1998 
[2] 	“In.ltration and Leakage Paths In Single Family Houses -A Multizone In.ltration Case Study” TN-27, Air In.ltration and Ventilation Centre, Bracknell, UK, 1990 
[3] Allard, F. 	(Editor): “Natural Ventilation in Buildings — A Design Handbook”, James & James, London, UK, 1998 
[4] ASHRAE 1985 “Handbook of Fundamentals”, Chapter 22, American Society of Heating, Re­frigerating and Air-Conditioning Engineers, Atlanta, GA, 1985 
[5] Catmull E. and Rom R.: “A class of local interpolating splines”, in Barnhill, Rad R. Riesenfeld (eds), Computer Aided Geometric Design, Academic Press San Francisco 1974, pp317–326 
[6] Cadloni M., Ferrazzini M,: “Nat¨urlicher Luftaustausch durch Kippfenster”, Diplomarbeit ETH Z¨urich, 1997 
[7] Dascalaki, E. et al.: “Predicting Single sided Natural Ventilation Rates in Buildings”, Solar Energy Vol. 55 No.5 pp 327-341, 1995 
[8] Dorer V. and Weber A.: “COMVEN 3.0 Programmer’s Guide”, Empa D¨ubendorf, CH, 1997 
[9] Dorer V. and Weber A.: “Output Options for COMIS”, IEA-ECB Annex 23, Empa D¨ubendorf, CH, March 15, 1995 
[10] Feustel, H.E. (Editor): “The COMIS Model”, Special Issue of the Journal Energy and Build­ings on Air Flow Modeling Issues, Energy and Buildings, Vol. 18, No. 2, 1992 
[11] Feustel, H.E. 	(Editor): Energy and Buildings Special Issue devoted to Multizone Air-Flow Modeling, Energy and Buildings, Vol. 30, No1, 1999 
[12] Feustel, 	H.E.: “Beitrag zur theoretischen Beschreibung der Druck-und Luftmassen­stromverteilung in nat¨urlich und maschinell gel¨ufteten Geb¨auden”, Fortschritt-Berichte der VDI-Zeitschriften, Nr. 151, VDI-Verlag, D¨usseldorf, Germany, 1984 
[13] Feustel, H.E. and Dieris J.: “A Survey of Air Flow Models for Multizone Structures”, Energy and Buildings, Vol. 18, No2, 1992 
[14] Feustel, H.E. 	and Raynor-Hoosen A. (Editors): “Fundamentals of the Multizone Air Flow Model – COMIS”, Technical Note AIVC TN 29, Air In.ltration and Ventilation Centre, Bracknell, UK, 1990 
[15] Feustel, H.E., Allard F., Dorer V., Grosso M., Herrlin M., Liu M., Pha. J.C., Utsumi Y., and Yoshino H.: “The COMIS In.ltration Model”, in Proceedings, “Building Simulation ‘89, The International Building Performance Simulation Association”, Vancouver, CDN, 1989 
[16] Feustel, H.E., Allard F., Dorer V., Grosso M., Herrlin M., L. Mingsheng, Pha. J.C., Utsumi Y., and Yoshino H.: “The COMIS In.ltration Model”, in Proceedings, “10th AIVC Conference”, Dipoli, Finland, 1989 
[17] Feustel, H.E. and V.M. Kendon: “In.ltration Models for Multicellular Structures: A Literature Review”, Energy and Buildings, Vol. 8, No. 2, 1985 
[18] F¨urbringer, J.-M., C.-A. Roulet, R. Borchiellini: “Evaluation of COMIS”, Swiss Federal Insti­tute of Technology, Lausanne, CH, 1996 
[19] F¨urbringer, J.-M., C.-A. Roulet, R. Borchiellini: “Evaluation of COMIS -Appendices”, Swiss Federal Institute of Technology, Lausanne, CH, 1996 
[20] Herrlin M.K.: Air-Flow Studies in Multizone Buildings. Models and Applications. Bulletin No. 23, Royal Institute of Technology, Stockholm, Sweden, 1992 
REFERENCES 
[21] Jackman, P.J.: “A Study of Natural Ventilation of Tall O.ce Buildings”, Inst. Heat Vent. Eng., Vol 38, 1970 
[22] Liddament, M.W.: 	“Air In.ltration Calculation Techniques -an Applications Guide”, Air In.ltration and Ventilation Centre, Bracknell, UK, 1986 
[23] Lorenzetti, D.M., and Sohn M.D.: “Improving Speed and Robustness of the COMIS Solver”, in Proceedings, “7th International Conference on Air Distribution in Rooms” (Roomvent 2000), Elsevier, Oxford, UK, 2000 
[24] Pelletret, R.: Personal communication, CSTB, Sophia Antipolis, France 
[25] Pha., J.C.: “COMIS Sample Runs”, TNO Report 96-BBI-R 1086, TNO Delft, The Nether­lands, 1996 
[26] Warren, Peter: “Multizone Air Flow Modelling (COMIS)”, IEA-ECB Annex 23, Document TSR-06-2000, ISBN 1 902177 15 5 
[27] Wieringa, J.: ”Updating the Davenport roughness classi.cation”, J. of Wind Engineering and Industrial Aerodynamics, 1992, Vol 41 p. 357-368 
Appendix 

AExamples 
The input .le (CIF-.le) contains all the data that is necessary for a COMIS simulation run. 
The examples illustrate the input procedure. In section 4 ‘Data Sections’ the complete description of the input can be found. It is recommended that the examples and the respective input description are read simultaneously. We will now go through the input .les step by step and explain the input data — where they come from and what they are used for. The complete input .les can be found on the COMIS v3.1 package distribution CD. 
A.1 Minimum Input File 
This example is restricted to the absolute minimum of input required. The complete input .le ‘simple.cif’ is listed below. It can also be found on the COMIS v3.1 package distribution CD. 
&-CR CRACK 
|1.| Prefix and Name | Description | 
|__| (-) | [-] | 
|____________________|_____________| 
|2.| Cs |Exp n | Length | Wall Properties | |__| | | |Thickness| U-value | | (airl) | (-) | [m] | [m] | [W/m2/K]| |____________|________|_________|_________|_________| 
|3.| Filter 1 | Filter 2 | Filter 3 | Filter 4 | Filter 5 | 
|__|(-) |[-] |[-] |[-] |[-] | 
|_____________|__________|__________|__________|__________| *CR1 Crack 
0.003 0.660 
0.0 
&-NET-ZONes 
|Zone|  Name  | Temp |Ref.  |  Volume  | Humid.| Schedule |  
|  ID  |  |  | Height|  [m3]  |  |  Name  |  
|  |  |  |  |  H/D/W  |  |  |  
| (-)| [-]  |[temp]| [m]  |  [m/m/m]  |[humi] |  [-]  |  

|____|______________|______|_______|_____________|_______|__________| E01 Examp_Zone 
&-NET-LINks 
|Link|Type | Zone ID | Height | Own | Act. | 3Dflow | Schedule Name | | | |_________|_________| Height | Val. | or | (10char) | | | | | | | | Factor | | Press. |_______________| | ID |Name |From|To |From|To | | | | Ref Link Name | |(-) |(-) |(-) |(-) |[m] |[m] | [-] | [-] | [pres] | [-] | |____|_____|____|____|____|____|________|_______|________|_______________| 
1 CR1 E01 -2Pa 
The model consists of two nodes (one zone and one .xed pressure) linked with one link of type ‘crack’. For one-dimensional cracks, only one way .ow is possible. The resulting .ow is therefore zero. 
If the zone node is replaced by a .xed pressure node, the resulting .ow is non-zero if the .xed pressures are not the same. This is shown in ‘simpleP.cif’ and ‘simpleP.cof’. 
NOTE 	The multiple use of .xed pressure nodes with an air.ow component in between is a simple and e.ective method to determine the pressure-.ow characteristic of this component. 
If the two nodes are coupled by an air .ow component allowing for two way .ow, a non-zero .ow could result if zone temperature and ambient temperature are di.erent. This is shown in ‘simpleW.cif’ and ‘simpleW.cof’, where the crack has been replaced by a window component. The closed window is modeled as a crack with vertical component, thus allowing for single-sided ventilation. 
The result part of the output COF-.le ‘simple.cof’ is shown in the following: 
... 
THE OUTPUT STARTS HERE!! 
=new=airflow=timestep=========================================================== 1 iterations with solver no. 6 
******************************* 
Ventilation output * 
******************************* 
+--ZONES--------------------Flow-rates----­| Zone-ID Pressure Total Imbalance | Pa kg/s kg/s +-----------------------------------------­E01 -2. 0. 0. 
+--LINKS-------------------From------To----T-link Dp-link From->To To->From | # Link-ID Type Type:Name Type:Name C Pa kg/s kg/s +----------------------------------------------------------------------------­
1 1 CR1 zn:E01 sp:-2Pa 20. 0.E+00* 0 0 
100.0% (=1) of the 1 links have laminar flow, indicated by Dp* 
=end=of=simulation============================================================== 
COMIS finished. (One timestep) 
There are 4 messages, marked ***CER*** in your CER & COF files. 
In the input .le, no start and stop time has been speci.ed. COMIS performs just one simulation time step for the default start and stop time, which are equal. 
The format of the output in the COF-.le is the same as if the keyword VENT had been used under &-PR-SIMU. The information given is the following 
. 	At the beginning of each time step (here we have only one), the number of iterations and the solver used are given: 
1 iterations with solver no. 6 
. 	
Under header ‘ventilation output’, information about each zone and each link follows 

. 	
Zone output 


A.1 Minimum Input File 
. 	
“Zone-ID: E01” output for zone E01. 

. 	
“Pressure (Pa): -2” the pressure at the zone reference plane. 

. 	
“Flow-rates Total (kg/s): 0.” the total .ow through the zone; in fact it is half of the sum of the absolute values of all .ows to and from this zone. 

. 	
“Flow-rates Imbalance (kg/s): 0.” the error in the .ow balance for this zone; for an ideal so­lution this error would be zero; the value must meet the tolerances given under &PR-CONTrol. 


. 	Link output 
. 	
“#: 1” the sequence number of the link. 

. 	
“Link-ID: 1” the name of the link in the input .le. 

. 	
“Type: CR1” the name of the air .ow component used for this link. 

. 	
“From Type:Name: zn:E01” the names of the nodes which are connected by this link; these may be zones, external nodes or .xed pressures, preceded by “zn”, “sp” for .xed pressure or “ex” for (external) facade element number, respectively. 

. 	
“To Type:Name: zn:E01” the names of the nodes which are connected by this link; these may be zones, external nodes or .xed pressures, preceded by “zn”, “sp” for .xed pressure or “ex” for (external) facade element number, respectively. 

. 	
“T-link (C): 20.” the average temperature of the air .owing through the link 

. 	
“Dp-link (Pa): 0.E+00” the pressure di.erence across the link. 

. 	
“From- >To (kg/s)” is the outgoing .ow rate. 

. 	
“To- >From (kg/s)” is the incoming .ow rate; both values being non-zero indicates a two-way .ow at large openings. 


At the end of the .le, the number of timesteps (scheduled events for which the network has been solved) and the number of messages (errors, warnings and notes) is output. 
The output produced using the more detailed 2VENT option is shown in ‘simple2.cof’ (produced by ‘simple2.cif’). The information given is the following 
. 	
“METEO”: Wind velocity at meteo station (Vmeteo) and the local wind velocity at the building (Vroofheight), followed by wind direction, ambient temperature and humidity. 

. 	
“LINKS”: 


. 	the velocity in the net area of the openings is given; for industrial ventilation these are the .ows that can be measured in the ventilation openings, which enables a direct .t of the model. 
. 	“ZONES”: 
. 	the total .ow through the zone, the in.ltration .ow which enters from outside and the ventilation .owrate which enters from other zones. 
. 	
“Total ...”: summary for the whole building. 

. 	
“ZONE-GROUPS”: 


. 	grouped output for all zones for which the .rst two characters of the zone ID are the same; an e.cient choice of zone-ID’s allows to get the totals per department or for instance per .oor or module of the building. 
The error messages can also be found in the .le COMIS.CER after the run (messages for ‘sim­ple.cif’): 
***CER*** WARNING *** 
&-PR-SIMUlation section is missing! 

***CER*** WARNING *** 
&-PR-SIMUlation and &-SCH-METeo section are missing! 
You may want to add one or both to the input 

***CER*** WARNING *** 
&-PR-SIMU: Start time not found 
Default value: "1900jan01_" used 

***CER*** WARNING *** 
&-PR-SIMU: Stop time not found 
Default value: "1900jan01_" used 

COMIS finished. (One timestep) 
There are 4 messages, marked ***CER*** in your CER & COF files. 

A.2 Factory 
This example illustrates step by step 
. 	
the input of a network, 


. 	
the use of large vertical openings, 


. 	
the use of schedules, 


. 	
the use of zone-related pollutants, 


. 	
the use of occupant-related pollutants 


. 	
the use of histogram output. 


The complete input .les ‘factory 
1.cif’ to ‘factory 
5.cif’ can be found on the COMIS v3.1 package 
distribution CD. 
Building 
A factory building consists of two spaces (see .gure A.1): 


. 	
a hall with mechanical extract ventilation for combined abrasive and chemical treatment and subsequent bonding, 

. 	
and a naturally ventilated assembly hall. 


VOC’s are released during chemical cleaning of bonding surfaces. The extract system is designed on the basis of the steady-state concentration determined for maximum source strength and con­sidering the mechanical extract ventilation only and no air exchange with the assembly hall. This concentration must be kept below the threshold concentration (TLV), which is set to 300 mg/kg in this example. 
Problem 
To evaluate cross-contamination of assembly hall by VOC’s from the chemical cleaning and bonding process in the treatment hall. 
Model 
The factory is modelled as a two-zone network with door, horizontally pivoted windows and roof shed windows as air .ow elements. The extract fan is modelled as additional air .ow element. Wind pressure coe.cients data are taken from literature for simple rectangular building shape, surrounded by buildings of equal height. 
A.2 Factory 
External 

Schedules 
The simulation is made for one month (720h) with a weather .le for moderate climate conditions (April in Zuerich, Switzerland), using a one-hour time step. In the example, the same daily schedule is used for all days (no weekend). Working hours are from 7 am to 6 pm. The fan is running during these working hours. Values for air temperatures are taken from simple thermal modelling estimates. Window opening and contaminant source strength schedules are .xed according to usual working operation, adapted to the one-hour simulation time step. See .gures A.2 and A.3. 
The occupancy of the zones according to .gure A.3 (right) is transferred to the following occupant schedule: 
00:00 zone_1/zone_2 1.0 0 
06:00 zone_1 1.0 2 
07:00 zone_2 1.0 5 
08:00 zone_1 1.0 7 
09:00 zone_2 1.0 10 
10:00 zone_1/zone_2 1.0 10 
11:00 zone_1/zone_2 1.0 0 
A EXAMPLES A.2 Factory 
25 1


20 
0.8 
Temperature [ C] 
15 
10 0.6 
0.4 
5 
0.2 
0 
0 Hour of the day Hour of the day 
Figure A.2: Schedule values for a 24 h time period for room air temperatures (left) and opening percentage of windows, door and roof sheds (right). 

00:00 03:00 06:00 09:00 12:00 15:00 18:00 21:00 24:00Hour of the day 
12:00 zone_1 1.0 7 
13:00 zone_2 1.0 10 
14:00 zone_1 1.0 10 
15:00 zone_1 1.0 7 
16:00 zone_1 1.0 7 
17:00 zone_1/zone_2 1.0 2 
18:00 zone_1/zone_2 1.0 0 
The COMIS histogram 
In the CIF-.le, output units have been set, the histogram output for both the assembly (zone 1) and the bonding hall (zone 2) have been de.ned, and two types of histograms have been de.ned. Here follows a part of the CIF-.le: 
&-PR-UNITS OUTPUT conc mg/kg conc ppm 
&-PR-OUTP C1-H1 zone_1 zone_2 OCC1 C2-H2 zone_1 zone_2 OCC1 


137 COMIS 3.2 A.2 Factory 
140 
350 
120 300 
100 250 
Number of Occupants in Zone
10 
8 
6 
4 
2 
0 80 

60 
40 
20 
0 
Excess Concentration in Zone [ppm]Number of Occupants in Zone
10 
8 
6 
4 
2 
0 200 

150 
100 
50 
0 
Concentration in Zone [mg/kg] 
00:00 03:00 06:00 09:00 12:00 15:00 18:00 21:00 24:00 00:00 03:00 06:00 09:00 12:00 15:00 18:00 21:00 24:00 
0.35 
0.35 

 Z1 CO2 Z2 CO2 Occ CO2  







 


0.3 0.3 
0.25 
0.25 
Relative Frequency
Relative Frequency
0.2 
0.15 0.2 
0.15 
0.1 
0.1 
0.05 
0.05 
0 
0 0 20 40 60 80 100 Concentration Class [ppm] Concentration Class [mg/kg] 
Figure A.5: Occupant Pollutant Load: frequency distribution for zones and for occupants (left: CO2; right: Toluol). 
&-HISTO 
1 40 5. 395. 
2 10 5. 95. 

C1 gives the Toluol concentration, C2 gives the CO2 concentration. 
Histogram output for C2-H2 is listed below. The histogram is multiple and like a table. It includes zones zone 1 and zone 2, and occupant type OCC1; each, in their own column. 
The occupant-weighted histogram (frequency distribution) counts the concentration of the zones the occupant type happens to be in as many times as there are occupants in. This may change during the simulation as occupants may be scheduled to move into and out of zones. 
The types of histograms are de.ned in the &-HISTOgram keyword section. The lowest and highest class values must be given in actual units. I.e. for histogram 1 the unit is mg/kg (as it is used for concentration of pollutant 1), for histogram 2 it is ppm. 
In the output, there is one header line describing the histogram type. It is followed by the column titles and a line for the unit of the classes. 
NOTE The unit given is that of the classes, not of the frequency! Frequencies are dimensionless values. 
Then several rows follow with the center of class in the .rst column and the frequencies in the second and following columns. below_range and over__range list the frequencies of values falling outside the histogram range. After that, the maximum frequency and the average is given. 
total_time gives the total time in seconds for which the histogram has been established. This time may di.er slightly from the total simulation time depending on the internal pollution time step and scheduled events. For occupant-weighted frequency distributions, the total time depends on the number of occupants and the time they spend in the di.erent zones. Therefore it is usually di.erent from the value found for zone statistics, and it has the unit [pers. · sec.] 


After that, the minimum and the maximum value that has been found is reported. 
The last two lines give the conversion factor of the output unit used to the standard COMIS unit. 
Histogram 2 10 Classes From 5.00E+00 To 9.50E+01 width= 1.00E+01 ClassCenter C2-z1 C2-z2 C2-Occ1 ppm ppm ppm 
5.00000 0.11656 0.10980 0.00846 
15.00000 0.18916 0.10757 0.07388 
25.00000 0.34505 0.19750 0.15184 
35.00000 0.20995 0.15856 0.17941 
45.00000 0.08455 0.11927 0.14917 
55.00000 0.03991 0.07380 0.11617 
65.00000 0.01192 0.06983 0.09994 
75.00000 0.00274 0.06385 0.08813 
85.00000 1.7385E-04 0.04182 0.05768 
95.00000 0.0 0.02479 0.03159 

below_range 0.0 0.0 0.0 
over__range 0.0 0.03324 0.04378 
max_freq 0.34505 0.19750 0.17941 
average 26.35961 41.07990 50.27995 
total_time 2588387.8 2588387.8 15119498.0 
minimum 0.0 0.0 0.45219 
maximum 80.47812 139.67819 139.67819 
Unit_offset 0.0 0.0 0.0 
Unit_mult. 6.5828E+05 6.5828E+05 6.5828E+05 

Results 
Figure A.4 shows the number of occupants and concentration in zones (left: CO2; right: Toluol) for one typical day. Figure A.5 shows the resulting frequency distribution for zones and for occupants (left: CO2; right: Toluol). Occupants reside in both zones, but only during working hours and in varying numbers. Therefore there is a shift to higher concentration values compared with the zones (where low CO2 values in the night are also counted) for the occupant-weighted frequency distribution. For Toluol, we have two peaks. The lower stems from occupants in the assembly hall, which has no source and therefore low concentrations. The higher one stems from occupants working in the bonding hall with the higher concentrations. 
The results show that the TLV is seldom reached in the analysed time period. 
A.2 Factory 
BKeywords 
B.1 Data Section Keywords 
&-PR-IDENti.cation ..................................... 48 
&-PR-UNITS.......................................... 49 
&-PR-SIMUlation ....................................... 52 
&-PR-OUTPut......................................... 55 
&-PR-CONTrol ........................................ 58 
&-HISTOgram......................................... 61 
&-CR .............................................. 62 
&-NORMCR .......................................... 64 
&-FA .............................................. 65 
&-DS .............................................. 68 
&-F1............................................... 71 
&-F2............................................... 73 
&-F3............................................... 75 
&-F4............................................... 77 
&-TV .............................................. 80 
&-WI .............................................. 82 
&-TD .............................................. 89 
&-RF .............................................. 91 
&-NET-ZONes......................................... 94 
&-NET-ZL ........................................... 96 
&-NET-ZP ........................................... 98 
&-NET-EXTernal ....................................... 100 
&-NET-ZT ........................................... 101 
&-NET-LINks ......................................... 102 
&-SCH-WINdow........................................ 106 
&-SCH-FANs.......................................... 107 
&-SCH-TEMperature ..................................... 108 
&-SCH-HUMidity ....................................... 109 
&-SCH-SINk .......................................... 110 
&-SCH-SOUrce......................................... 111 
&-SCH-OCCupant....................................... 112 
&-SCH-METeoData ..................................... 114 
&-SCH-POLutant ....................................... 116 
&-SCH-MULtischeduledata ................................. 117 
&-CP-BUILding ........................................ 119 

B.1 DataSectionKeywords 
&-CP-VALUes ......................................... 120 
&-ENV-BUIlding........................................ 122 
&-ENV-WINd ......................................... 123 
&-POL-DEScription...................................... 125 
&-POL-FICtiveSources.................................... 126 
&-OCCUPANt......................................... 127 

C Set-.le COMIS.SET 
The COMIS.SET .le can be used to describe in which units (e.g., C for temperatures, Pa for pressures, etc.) input values are given and which units COMIS shall use for .le output. 
Its use for describing unit conversions is strongly discouraged and only remains for backward compatibility with older COMIS.SET .les that users may have. 
A much better way to de.ne conversion units is to use the &-PR-UNITS keyword in the input .le itself. If the de.nition of input and output units is made in the input .le only, it is clear which units were used for the simulation (see section 4.1, page 49). 
If a set .le is to be used for a simulation, it should be copied to the output COF-.le by setting the SET option in section &-PR-SIMU (see page 52). 
The COMIS.SET .le consists of three parts: The print-level selection part, the part for the in­put and output units and the part for speci.cation of input and output .les. An example for a COMIS.SET .le is given in appendix C.4. 
Before a COMIS run is made one should assure that the settings in COMIS.SET are correct for the run. 
If the input and output .le names are not speci.ed in the command line, then the respective names are taken from the COMIS.SET .le. Entries for these options are found under heading &-COMIS, using the keywords INPUT, OUTPUT, TABLES, USEROUTU and USEROUTF respectively. 
C.1 First part 
Input of this part is interpreted as follows. It is not allowed to omit any of the .rst six lines. 
The higher the value that is used for lines 3 to 6 the more output is produced. Line Range 
1. 	
write output = 0 in output .le (*.COF .le) = 1 on the screen 

2. 	
additional output for = 0 no 
program test runs = 1 yes 


3. 
print-level for input 	0 ...20 

4. 
print-level for precalculation 	0 ...20 

5. 
print-level for solver 	0 ...20 

6. 	
print-level for output 0 ...20 = 0 no output = 1 Summary at end of simulation = 2 Every vent timestep: 


Vent2: Building and zone-group summary = 3 Every vent timestep: Links = 4 Every vent timestep: Zones = 5 Every pollutant timestep: Pollutants 
C.2 Second part 
The .rst two lines of this part tell how many input and output units respectively follow. Default values are the maximum possible units, 10 and 13 respectively. Values of 00 are allowed, thus enabling to omit unit input in COMIS.SET. 
As there is no keyword for the quantities which the units shall be assigned to, they are assigned according to the order of appearance in COMIS.SET. Therefore it is not possible to give units only 
e.g. for quantities number 1 – 5, and 10, and to omit units for quantities number 6 – 9. Below the allowed units for both input and output are listed in the sequence from 1 to 13. 
C.3 Third part 
The values of the following quantities in the input .le are converted by COMIS from input units to COMIS internal units, or from COMIS internal units to output units. The internal units are at the same time the default units for input and output. 
NOTE: 	There are quantities which have only one valid unit. For example, input values for barometric pressure have to be always in kPa. There is also no choice for length input. Depending on the quantity, the unit is always m or mm (see speci.c headers). 
Line 1 
2 
3 
4 5 6 7 8 
9 
10 
Quantity Air Leakage 
Ventilation Mass Flow 
Ventilation Pressure 
Temperature Humidity Pollutant Source Pollutant Sink Pollutant Concentration 
Component Flow 
Wind Speed 
Output only 11 Air Change Rate 12 Mean Age of Air 13 Energy 
a 
umeans µ 
Default Unit Cm(kg/s@1Pa) 
kg/s 
Pa 
C g/kg kg/s kg/s kg/kg 
m3/s 
m/s 
1/h h KWh Other possibilities kg/h@1Pa, kg/s@10Pa, kg/h@10Pa, dm3/s@1Pa, m3/s@1Pa, m3/h@1Pa, dm3/s@10Pa, m3/s@10Pa, m3/h@10Pa, ELA4, ELA10 g/s, g/h, kg/h, m3/s, dm3/s, dm3/h, m3/h mmH2O, mmHg, inH2O, inHg, hPa, kPa option -OSR to each unit K,F, Ra,Re kg/kg, mass%, %rh g/s, g/h, kg/h, mg/s, ug/s a,olf b g/s, g/h, kg/h, mg/s, ug/s a,olf b g/kg, mg/kg, ug/kg, m3/kg, dm3/kg, ml/kg, ul/kg, mass%, ppm, ppb, part (any rational combination of g, kg, mg, ug, m3, dm3, ml, and ul are possible, 
e.g. mg/g, dm3/mg) a, decipol b g/s, g/h, kg/s, kg/h, dm3/s, m3/h, dm3/h cm/s, kt, ft/min, km/h, mile/h 
1/s s J 
b units for the special pollutant named ODOUR 
NOTE 	The last three units (air change rate, mean age of air and energy) are only used for output unit conversion. The input units must be .rst, followed by the output units. 
NOTE: 	There is a option ‘-OSR’ which may be appended to the pressure unit. With this option, the outside stack pressure is taken as pressure reference. For further details, see notes on pressure reference on page 33. 
C.3 Third part 
In the last part of COMIS.SET the keyword for .le input and output follows. 
In former versions of COMIS, there were several other keywords used for the various parts of the 

COMIS program. It is still possible to have these keywords in the 3rd part of COMIS.SET. This 
and also older versions of COMIS simply ignore unknown keywords in this part. 
The keywords are followed by the names for the input and output .le. If no names are then some 

default .le names are taken. Each keyword starts with a ‘&’ sign in the .rst column. The only remaining keyword is &-COMIS.The syntax is: &-COMIS 
INPUT <[path]infile.ext> 
OUTPUT <[path]outfile.ext> 
TABLES "<sep>" name 

where 
INPUT : name for the input .le. 
OUTPUT: name for the COF-.le. 
TABLES: Here the project name, which is used for the names of the spreadsheet output .les, can be de.ned. The table created may later be processed with any spreadsheet program. Only the numerical results are printed in this .le, separated by the separator strings "<sep>" speci.ed. This separator can be any sequence of ASCII characters (including an empty string) and must be enclosed within quotes ("). Examples of separator strings are: 
"/" ";" "" "" "*" 
The names of the spreadsheet output .les consist of two parts 
COMIS.SET input lines .les created with COMIS 
TABLES ";" yyyyy yyyyy-xx.COS 
TABLES ";" -xx.COS 

where: xx Su.x 2 characters: Depending on what data the input .le contains, e.g. PZ for pressures in zones. Which .les will be created with COMIS is determined in the CIF-.le. yyyyy Project name 0...5 characters: De.ned here under keyword TABLES. 
If long .lenames are allowed, the project name may be longer than .ve characters. 
The appearance of the keyword &-COMIS in the third part of the COMIS.SET .le is mandatory. 
C.4 Example 
00 (1=write(CRT.*) on CRT; 0=write(CRT.*) on COF (output file)) 
00 (print-level for test runs. Range 0,1) 
02 (print-level for input. range 0,20) 
02 (print-level for precalculations. range 0,20) 
03 (print-level for solver. range 0,20) 
05 (print-level for output. range 0,20) 
00 (number of user units for input) 
00 (number of user units for output) 
&-COMIS 

INPUT TEST.CIF 
OUTPUT COMIS.COF 
TABLES " " EXPL1 

The required input in the .rst and second part of COMIS.SET may be followed by explanotory text, which is ignored by COMIS. 
C.4 Example 




